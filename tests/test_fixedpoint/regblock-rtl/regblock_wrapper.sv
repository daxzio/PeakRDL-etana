// Generated by PeakRDL-etana HWIF Wrapper Tool
//  https://github.com/daxzio/PeakRDL-etana
//
// This is a wrapper module that flattens the hwif structs into individual signals

module regblock_wrapper (
        input wire clk,
        input wire rst,
        input wire s_apb_psel,
        input wire s_apb_penable,
        input wire s_apb_pwrite,
        input wire [2:0] s_apb_pprot,
        input wire [3:0] s_apb_paddr,
        input wire [63:0] s_apb_pwdata,
        input wire [7:0] s_apb_pstrb,
        output logic s_apb_pready,
        output logic [63:0] s_apb_prdata,
        output logic s_apb_pslverr,
        input logic [31:12] hwif_in_r1_f_Q32_n12,
        input logic [15:0] hwif_in_r2_f_signed,
        input logic [15:0] hwif_in_r2_f_no_sign,
        output logic [22:7] hwif_out_r1_f_Q8_8,
        output logic [32:9] hwif_out_r1_f_SQn8_32,
        output logic [7:7] hwif_out_r1_f_SQn6_7,
        output logic [15:0] hwif_out_r2_f_unsigned
    );

    //--------------------------------------------------------------------------
    // Internal hwif struct signals
    //--------------------------------------------------------------------------
    regblock_pkg::regblock__in_t hwif_in;
    regblock_pkg::regblock__out_t hwif_out;

    //--------------------------------------------------------------------------
    // Flatten struct to individual signals
    //--------------------------------------------------------------------------
    assign hwif_in.r1.f_Q32_n12.next = hwif_in_r1_f_Q32_n12;
    assign hwif_in.r2.f_signed.next = hwif_in_r2_f_signed;
    assign hwif_in.r2.f_no_sign.next = hwif_in_r2_f_no_sign;

    assign hwif_out_r1_f_Q8_8 = hwif_out.r1.f_Q8_8.value;
    assign hwif_out_r1_f_SQn8_32 = hwif_out.r1.f_SQn8_32.value;
    assign hwif_out_r1_f_SQn6_7 = hwif_out.r1.f_SQn6_7.value;
    assign hwif_out_r2_f_unsigned = hwif_out.r2.f_unsigned.value;

    //--------------------------------------------------------------------------
    // Instantiate the main regblock module
    //--------------------------------------------------------------------------
    regblock i_regblock (
        .clk(clk),
        .rst(rst),
        .s_apb_psel(s_apb_psel),
        .s_apb_penable(s_apb_penable),
        .s_apb_pwrite(s_apb_pwrite),
        .s_apb_pprot(s_apb_pprot),
        .s_apb_paddr(s_apb_paddr),
        .s_apb_pwdata(s_apb_pwdata),
        .s_apb_pstrb(s_apb_pstrb),
        .s_apb_pready(s_apb_pready),
        .s_apb_prdata(s_apb_prdata),
        .s_apb_pslverr(s_apb_pslverr),
        .hwif_in(hwif_in),
        .hwif_out(hwif_out)
    );

endmodule
