/* Generated by Yosys 0.57 (git sha1 3aca86049, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module regblock(clk, rst, s_apb_psel, s_apb_pwrite, s_apb_penable, s_apb_pprot, s_apb_paddr, s_apb_pwdata, s_apb_pstrb, s_apb_pready, s_apb_prdata, s_apb_pslverr, hwif_out_hw_ctrl_intr, hwif_out_r1_intr, hwif_in_r1_f, hwif_out_r1_f_incrthreshold, hwif_out_r1_f_decrthreshold, hwif_in_r1_f_hwclr, hwif_in_r1_f_hwset, hwif_in_r1_f_we, hwif_out_r2_intr
, hwif_in_r2_f, hwif_out_r2_f_incrthreshold, hwif_out_r2_f_decrthreshold, hwif_in_r2_f_hwclr, hwif_in_r2_f_hwset, hwif_in_r2_f_we, hwif_out_r3_intr, hwif_in_r3_f, hwif_out_r3_f_incrthreshold, hwif_out_r3_f_decrthreshold, hwif_out_r4_intr, hwif_in_r4_f, hwif_out_r4_f_incrthreshold, hwif_out_r4_f_decrthreshold, hwif_out_r5_intr, hwif_in_r5_f_next_value, hwif_in_r5_f_we, hwif_out_r5_f_incrthreshold, hwif_out_r5_f_decrthreshold);
  input clk;
  wire clk;
  input rst;
  wire rst;
  input s_apb_psel;
  wire s_apb_psel;
  input s_apb_pwrite;
  wire s_apb_pwrite;
  input s_apb_penable;
  wire s_apb_penable;
  input [2:0] s_apb_pprot;
  wire [2:0] s_apb_pprot;
  input [4:0] s_apb_paddr;
  wire [4:0] s_apb_paddr;
  input [31:0] s_apb_pwdata;
  wire [31:0] s_apb_pwdata;
  input [3:0] s_apb_pstrb;
  wire [3:0] s_apb_pstrb;
  output s_apb_pready;
  wire s_apb_pready;
  output [31:0] s_apb_prdata;
  wire [31:0] s_apb_prdata;
  output s_apb_pslverr;
  wire s_apb_pslverr;
  output [0:0] hwif_out_hw_ctrl_intr;
  wire [0:0] hwif_out_hw_ctrl_intr;
  output [0:0] hwif_out_r1_intr;
  wire [0:0] hwif_out_r1_intr;
  input [7:0] hwif_in_r1_f;
  wire [7:0] hwif_in_r1_f;
  output [0:0] hwif_out_r1_f_incrthreshold;
  wire [0:0] hwif_out_r1_f_incrthreshold;
  output [0:0] hwif_out_r1_f_decrthreshold;
  wire [0:0] hwif_out_r1_f_decrthreshold;
  input [0:0] hwif_in_r1_f_hwclr;
  wire [0:0] hwif_in_r1_f_hwclr;
  input [0:0] hwif_in_r1_f_hwset;
  wire [0:0] hwif_in_r1_f_hwset;
  input [0:0] hwif_in_r1_f_we;
  wire [0:0] hwif_in_r1_f_we;
  output [0:0] hwif_out_r2_intr;
  wire [0:0] hwif_out_r2_intr;
  input [7:0] hwif_in_r2_f;
  wire [7:0] hwif_in_r2_f;
  output [0:0] hwif_out_r2_f_incrthreshold;
  wire [0:0] hwif_out_r2_f_incrthreshold;
  output [0:0] hwif_out_r2_f_decrthreshold;
  wire [0:0] hwif_out_r2_f_decrthreshold;
  input [0:0] hwif_in_r2_f_hwclr;
  wire [0:0] hwif_in_r2_f_hwclr;
  input [0:0] hwif_in_r2_f_hwset;
  wire [0:0] hwif_in_r2_f_hwset;
  input [0:0] hwif_in_r2_f_we;
  wire [0:0] hwif_in_r2_f_we;
  output [0:0] hwif_out_r3_intr;
  wire [0:0] hwif_out_r3_intr;
  input [7:0] hwif_in_r3_f;
  wire [7:0] hwif_in_r3_f;
  output [0:0] hwif_out_r3_f_incrthreshold;
  wire [0:0] hwif_out_r3_f_incrthreshold;
  output [0:0] hwif_out_r3_f_decrthreshold;
  wire [0:0] hwif_out_r3_f_decrthreshold;
  output [0:0] hwif_out_r4_intr;
  wire [0:0] hwif_out_r4_intr;
  input [7:0] hwif_in_r4_f;
  wire [7:0] hwif_in_r4_f;
  output [0:0] hwif_out_r4_f_incrthreshold;
  wire [0:0] hwif_out_r4_f_incrthreshold;
  output [0:0] hwif_out_r4_f_decrthreshold;
  wire [0:0] hwif_out_r4_f_decrthreshold;
  output [0:0] hwif_out_r5_intr;
  wire [0:0] hwif_out_r5_intr;
  input [7:0] hwif_in_r5_f_next_value;
  wire [7:0] hwif_in_r5_f_next_value;
  input [0:0] hwif_in_r5_f_we;
  wire [0:0] hwif_in_r5_f_we;
  output [0:0] hwif_out_r5_f_incrthreshold;
  wire [0:0] hwif_out_r5_f_incrthreshold;
  output [0:0] hwif_out_r5_f_decrthreshold;
  wire [0:0] hwif_out_r5_f_decrthreshold;
  wire _000_;
  wire [7:0] _001_;
  wire _002_;
  wire [7:0] _003_;
  wire _004_;
  wire [7:0] _005_;
  wire _006_;
  wire [7:0] _007_;
  wire [7:0] _008_;
  wire [7:0] _009_;
  wire [7:0] _010_;
  wire _011_;
  wire [7:0] _012_;
  wire [7:0] _013_;
  wire [7:0] _014_;
  wire [7:0] _015_;
  wire [7:0] _016_;
  wire [7:0] _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire [7:0] _026_;
  wire [7:0] _027_;
  wire [7:0] _028_;
  wire [7:0] _029_;
  wire [7:0] _030_;
  wire [7:0] _031_;
  wire [7:0] _032_;
  wire [7:0] _033_;
  wire [7:0] _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire [1:0] _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire [1:0] _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire [7:0] _080_;
  wire [7:0] _081_;
  wire _082_;
  wire [7:0] _083_;
  wire [7:0] _084_;
  wire [7:0] _085_;
  wire [7:0] _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire [7:0] _091_;
  wire [7:0] _092_;
  wire [7:0] _093_;
  wire [7:0] _094_;
  wire [7:0] _095_;
  wire [7:0] _096_;
  wire [7:0] _097_;
  wire [7:0] _098_;
  wire [7:0] _099_;
  wire [31:0] _100_;
  wire [31:0] _101_;
  wire [31:0] _102_;
  wire [31:0] _103_;
  wire _104_;
  wire _105_;
  wire [4:0] cpuif_addr;
  wire cpuif_rd_ack;
  wire [31:0] cpuif_rd_data;
  wire cpuif_rd_err;
  reg cpuif_req;
  reg cpuif_req_is_wr;
  wire cpuif_req_masked;
  wire cpuif_req_stall_rd;
  wire cpuif_req_stall_wr;
  wire cpuif_wr_ack;
  wire [31:0] cpuif_wr_biten;
  wire [31:0] cpuif_wr_data;
  wire cpuif_wr_err;
  wire [0:0] decoded_reg_strb_hw_ctrl;
  wire [0:0] decoded_reg_strb_r1;
  wire [0:0] decoded_reg_strb_r2;
  wire [0:0] decoded_reg_strb_r3;
  wire [0:0] decoded_reg_strb_r4;
  wire [0:0] decoded_reg_strb_r5;
  wire decoded_req;
  wire decoded_req_is_wr;
  wire [31:0] decoded_wr_biten;
  wire [31:0] decoded_wr_data;
  wire field_combo_hw_ctrl_hw_clr_load_next;
  wire field_combo_hw_ctrl_hw_enable_load_next;
  wire field_combo_hw_ctrl_hw_mask_load_next;
  wire field_combo_hw_ctrl_hw_set_load_next;
  wire field_combo_hw_ctrl_hw_we_load_next;
  wire field_combo_hw_ctrl_hw_wel_load_next;
  wire field_combo_r1_f_load_next;
  wire [7:0] field_combo_r1_f_next;
  wire field_combo_r2_f_load_next;
  wire [7:0] field_combo_r2_f_next;
  wire field_combo_r3_f_load_next;
  wire [7:0] field_combo_r3_f_next;
  wire field_combo_r4_f_load_next;
  wire [7:0] field_combo_r4_f_next;
  wire field_combo_r5_f_load_next;
  wire [7:0] field_combo_r5_f_next;
  reg [0:0] field_storage_hw_ctrl_hw_clr_value;
  reg [7:0] field_storage_hw_ctrl_hw_enable_value;
  reg [7:0] field_storage_hw_ctrl_hw_mask_value;
  reg [0:0] field_storage_hw_ctrl_hw_set_value;
  reg [0:0] field_storage_hw_ctrl_hw_we_value;
  reg [0:0] field_storage_hw_ctrl_hw_wel_value;
  reg [7:0] field_storage_r1_f_value;
  reg [7:0] field_storage_r2_f_value;
  reg [7:0] field_storage_r3_f_value;
  reg [7:0] field_storage_r4_f_value;
  reg [7:0] field_storage_r5_f_value;
  reg is_active;
  wire [31:0] \readback_array[0] ;
  wire [31:0] \readback_array[1] ;
  wire [31:0] \readback_array[2] ;
  wire [31:0] \readback_array[3] ;
  wire [31:0] \readback_array[4] ;
  wire [31:0] \readback_array[5] ;
  wire [31:0] readback_data;
  wire readback_done;
  wire readback_err;
  wire readback_external_rd_ack;
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_mask_value[0] <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_mask_value[0] <= _086_[0];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_mask_value[1] <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_mask_value[1] <= _086_[1];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_mask_value[2] <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_mask_value[2] <= _086_[2];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_mask_value[3] <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_mask_value[3] <= _086_[3];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_mask_value[4] <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_mask_value[4] <= _086_[4];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_mask_value[5] <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_mask_value[5] <= _086_[5];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_mask_value[6] <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_mask_value[6] <= _086_[6];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_mask_value[7] <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_mask_value[7] <= _086_[7];
  reg \cpuif_wr_biten_reg[16] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[16]  <= 1'h0;
    else if (_040_) \cpuif_wr_biten_reg[16]  <= s_apb_pstrb[2];
  assign cpuif_wr_biten[16] = \cpuif_wr_biten_reg[16] ;
  reg \cpuif_wr_biten_reg[11] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[11]  <= 1'h0;
    else if (_040_) \cpuif_wr_biten_reg[11]  <= s_apb_pstrb[1];
  assign cpuif_wr_biten[11] = \cpuif_wr_biten_reg[11] ;
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_enable_value[0] <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_enable_value[0] <= _085_[0];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_enable_value[1] <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_enable_value[1] <= _085_[1];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_enable_value[2] <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_enable_value[2] <= _085_[2];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_enable_value[3] <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_enable_value[3] <= _085_[3];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_enable_value[4] <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_enable_value[4] <= _085_[4];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_enable_value[5] <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_enable_value[5] <= _085_[5];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_enable_value[6] <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_enable_value[6] <= _085_[6];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_enable_value[7] <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_enable_value[7] <= _085_[7];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[0] <= 1'h1;
    else if (_045_) field_storage_r5_f_value[0] <= field_combo_r5_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[1] <= 1'h0;
    else if (_045_) field_storage_r5_f_value[1] <= field_combo_r5_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[2] <= 1'h1;
    else if (_045_) field_storage_r5_f_value[2] <= field_combo_r5_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[3] <= 1'h0;
    else if (_045_) field_storage_r5_f_value[3] <= field_combo_r5_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[4] <= 1'h1;
    else if (_045_) field_storage_r5_f_value[4] <= field_combo_r5_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[5] <= 1'h0;
    else if (_045_) field_storage_r5_f_value[5] <= field_combo_r5_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[6] <= 1'h1;
    else if (_045_) field_storage_r5_f_value[6] <= field_combo_r5_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[7] <= 1'h0;
    else if (_045_) field_storage_r5_f_value[7] <= field_combo_r5_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[0] <= 1'h0;
    else if (_044_) field_storage_r4_f_value[0] <= field_combo_r4_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[1] <= 1'h0;
    else if (_044_) field_storage_r4_f_value[1] <= field_combo_r4_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[2] <= 1'h1;
    else if (_044_) field_storage_r4_f_value[2] <= field_combo_r4_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[3] <= 1'h0;
    else if (_044_) field_storage_r4_f_value[3] <= field_combo_r4_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[4] <= 1'h0;
    else if (_044_) field_storage_r4_f_value[4] <= field_combo_r4_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[5] <= 1'h0;
    else if (_044_) field_storage_r4_f_value[5] <= field_combo_r4_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[6] <= 1'h1;
    else if (_044_) field_storage_r4_f_value[6] <= field_combo_r4_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[7] <= 1'h0;
    else if (_044_) field_storage_r4_f_value[7] <= field_combo_r4_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[0] <= 1'h1;
    else if (_043_) field_storage_r3_f_value[0] <= field_combo_r3_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[1] <= 1'h1;
    else if (_043_) field_storage_r3_f_value[1] <= field_combo_r3_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[2] <= 1'h0;
    else if (_043_) field_storage_r3_f_value[2] <= field_combo_r3_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[3] <= 1'h0;
    else if (_043_) field_storage_r3_f_value[3] <= field_combo_r3_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[4] <= 1'h1;
    else if (_043_) field_storage_r3_f_value[4] <= field_combo_r3_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[5] <= 1'h1;
    else if (_043_) field_storage_r3_f_value[5] <= field_combo_r3_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[6] <= 1'h0;
    else if (_043_) field_storage_r3_f_value[6] <= field_combo_r3_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[7] <= 1'h0;
    else if (_043_) field_storage_r3_f_value[7] <= field_combo_r3_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[0] <= 1'h0;
    else if (_042_) field_storage_r2_f_value[0] <= field_combo_r2_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[1] <= 1'h1;
    else if (_042_) field_storage_r2_f_value[1] <= field_combo_r2_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[2] <= 1'h0;
    else if (_042_) field_storage_r2_f_value[2] <= field_combo_r2_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[3] <= 1'h0;
    else if (_042_) field_storage_r2_f_value[3] <= field_combo_r2_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[4] <= 1'h0;
    else if (_042_) field_storage_r2_f_value[4] <= field_combo_r2_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[5] <= 1'h1;
    else if (_042_) field_storage_r2_f_value[5] <= field_combo_r2_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[6] <= 1'h0;
    else if (_042_) field_storage_r2_f_value[6] <= field_combo_r2_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[7] <= 1'h0;
    else if (_042_) field_storage_r2_f_value[7] <= field_combo_r2_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[0] <= 1'h1;
    else if (_041_) field_storage_r1_f_value[0] <= field_combo_r1_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[1] <= 1'h0;
    else if (_041_) field_storage_r1_f_value[1] <= field_combo_r1_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[2] <= 1'h0;
    else if (_041_) field_storage_r1_f_value[2] <= field_combo_r1_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[3] <= 1'h0;
    else if (_041_) field_storage_r1_f_value[3] <= field_combo_r1_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[4] <= 1'h1;
    else if (_041_) field_storage_r1_f_value[4] <= field_combo_r1_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[5] <= 1'h0;
    else if (_041_) field_storage_r1_f_value[5] <= field_combo_r1_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[6] <= 1'h0;
    else if (_041_) field_storage_r1_f_value[6] <= field_combo_r1_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[7] <= 1'h0;
    else if (_041_) field_storage_r1_f_value[7] <= field_combo_r1_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_wel_value <= 1'h1;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_wel_value <= _090_;
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_we_value <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_we_value <= _089_;
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_set_value <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_set_value <= _088_;
  always @(posedge clk)
    if (rst) field_storage_hw_ctrl_hw_clr_value <= 1'h0;
    else if (field_combo_hw_ctrl_hw_clr_load_next) field_storage_hw_ctrl_hw_clr_value <= _087_;
  always @(posedge clk)
    if (_046_) cpuif_req <= 1'h0;
    else if (s_apb_psel) cpuif_req <= 1'h1;
  always @(posedge clk)
    if (rst) cpuif_req_is_wr <= 1'h0;
    else if (_040_) cpuif_req_is_wr <= s_apb_pwrite;
  reg \cpuif_wr_data_reg[0] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[0]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[0]  <= s_apb_pwdata[0];
  assign cpuif_wr_data[0] = \cpuif_wr_data_reg[0] ;
  reg \cpuif_wr_data_reg[1] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[1]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[1]  <= s_apb_pwdata[1];
  assign cpuif_wr_data[1] = \cpuif_wr_data_reg[1] ;
  reg \cpuif_wr_data_reg[2] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[2]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[2]  <= s_apb_pwdata[2];
  assign cpuif_wr_data[2] = \cpuif_wr_data_reg[2] ;
  reg \cpuif_wr_data_reg[3] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[3]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[3]  <= s_apb_pwdata[3];
  assign cpuif_wr_data[3] = \cpuif_wr_data_reg[3] ;
  reg \cpuif_wr_data_reg[4] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[4]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[4]  <= s_apb_pwdata[4];
  assign cpuif_wr_data[4] = \cpuif_wr_data_reg[4] ;
  reg \cpuif_wr_data_reg[5] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[5]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[5]  <= s_apb_pwdata[5];
  assign cpuif_wr_data[5] = \cpuif_wr_data_reg[5] ;
  reg \cpuif_wr_data_reg[6] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[6]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[6]  <= s_apb_pwdata[6];
  assign cpuif_wr_data[6] = \cpuif_wr_data_reg[6] ;
  reg \cpuif_wr_data_reg[7] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[7]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[7]  <= s_apb_pwdata[7];
  assign cpuif_wr_data[7] = \cpuif_wr_data_reg[7] ;
  reg \cpuif_wr_data_reg[8] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[8]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[8]  <= s_apb_pwdata[8];
  assign cpuif_wr_data[8] = \cpuif_wr_data_reg[8] ;
  reg \cpuif_wr_data_reg[9] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[9]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[9]  <= s_apb_pwdata[9];
  assign cpuif_wr_data[9] = \cpuif_wr_data_reg[9] ;
  reg \cpuif_wr_data_reg[10] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[10]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[10]  <= s_apb_pwdata[10];
  assign cpuif_wr_data[10] = \cpuif_wr_data_reg[10] ;
  reg \cpuif_wr_data_reg[11] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[11]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[11]  <= s_apb_pwdata[11];
  assign cpuif_wr_data[11] = \cpuif_wr_data_reg[11] ;
  reg \cpuif_wr_data_reg[12] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[12]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[12]  <= s_apb_pwdata[12];
  assign cpuif_wr_data[12] = \cpuif_wr_data_reg[12] ;
  reg \cpuif_wr_data_reg[13] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[13]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[13]  <= s_apb_pwdata[13];
  assign cpuif_wr_data[13] = \cpuif_wr_data_reg[13] ;
  reg \cpuif_wr_data_reg[14] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[14]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[14]  <= s_apb_pwdata[14];
  assign cpuif_wr_data[14] = \cpuif_wr_data_reg[14] ;
  reg \cpuif_wr_data_reg[15] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[15]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[15]  <= s_apb_pwdata[15];
  assign cpuif_wr_data[15] = \cpuif_wr_data_reg[15] ;
  reg \cpuif_wr_data_reg[16] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[16]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[16]  <= s_apb_pwdata[16];
  assign cpuif_wr_data[16] = \cpuif_wr_data_reg[16] ;
  reg \cpuif_wr_data_reg[17] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[17]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[17]  <= s_apb_pwdata[17];
  assign cpuif_wr_data[17] = \cpuif_wr_data_reg[17] ;
  reg \cpuif_wr_data_reg[18] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[18]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[18]  <= s_apb_pwdata[18];
  assign cpuif_wr_data[18] = \cpuif_wr_data_reg[18] ;
  reg \cpuif_wr_data_reg[20] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[20]  <= 1'h0;
    else if (_040_) \cpuif_wr_data_reg[20]  <= s_apb_pwdata[20];
  assign cpuif_wr_data[20] = \cpuif_wr_data_reg[20] ;
  reg \cpuif_wr_biten_reg[1] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[1]  <= 1'h0;
    else if (_040_) \cpuif_wr_biten_reg[1]  <= s_apb_pstrb[0];
  assign cpuif_wr_biten[1] = \cpuif_wr_biten_reg[1] ;
  reg \cpuif_addr_reg[2] ;
  always @(posedge clk)
    if (rst) \cpuif_addr_reg[2]  <= 1'h0;
    else if (_040_) \cpuif_addr_reg[2]  <= s_apb_paddr[2];
  assign cpuif_addr[2] = \cpuif_addr_reg[2] ;
  reg \cpuif_addr_reg[3] ;
  always @(posedge clk)
    if (rst) \cpuif_addr_reg[3]  <= 1'h0;
    else if (_040_) \cpuif_addr_reg[3]  <= s_apb_paddr[3];
  assign cpuif_addr[3] = \cpuif_addr_reg[3] ;
  reg \cpuif_addr_reg[4] ;
  always @(posedge clk)
    if (rst) \cpuif_addr_reg[4]  <= 1'h0;
    else if (_040_) \cpuif_addr_reg[4]  <= s_apb_paddr[4];
  assign cpuif_addr[4] = \cpuif_addr_reg[4] ;
  always @(posedge clk)
    if (rst) is_active <= 1'h0;
    else is_active <= _105_;
  assign _049_ = ~cpuif_addr[3];
  assign _048_ = ~cpuif_addr[2];
  assign _050_ = ~cpuif_addr[4];
  assign _006_ = ~field_storage_hw_ctrl_hw_wel_value;
  assign _040_ = s_apb_psel & _047_;
  assign _046_ = rst | is_active;
  assign _045_ = field_combo_r5_f_load_next & _039_;
  assign _039_ = hwif_in_r5_f_we | _072_;
  assign _044_ = field_combo_r4_f_load_next & _038_;
  assign _038_ = _006_ | _059_[1];
  assign _043_ = field_combo_r3_f_load_next & _037_;
  assign _051_[0] = field_storage_hw_ctrl_hw_clr_value | field_storage_hw_ctrl_hw_set_value;
  assign _051_[1] = field_storage_hw_ctrl_hw_we_value | _071_;
  assign _037_ = _051_[0] | _051_[1];
  assign _042_ = field_combo_r2_f_load_next & _036_;
  assign _052_ = hwif_in_r2_f_hwclr | hwif_in_r2_f_hwset;
  assign _036_ = _052_ | hwif_in_r2_f_we;
  assign _041_ = field_combo_r1_f_load_next & _035_;
  assign _053_ = hwif_in_r1_f_hwclr | hwif_in_r1_f_hwset;
  assign _035_ = _053_ | hwif_in_r1_f_we;
  assign _060_ = _054_ | cpuif_addr[4];
  assign _055_ = cpuif_addr[2] | _049_;
  assign _061_ = _055_ | cpuif_addr[4];
  assign _056_ = _048_ | _049_;
  assign _062_ = _056_ | cpuif_addr[4];
  assign _057_ = cpuif_addr[2] | cpuif_addr[3];
  assign _063_ = _057_ | _050_;
  assign _054_ = _048_ | cpuif_addr[3];
  assign _064_ = _054_ | _050_;
  assign _058_ = _057_ | cpuif_addr[4];
  assign _079_ = ~cpuif_req_is_wr;
  assign _065_ = ~_058_;
  assign _066_ = ~_060_;
  assign _067_ = ~_061_;
  assign _068_ = ~_062_;
  assign _069_ = ~_063_;
  assign _070_ = ~_064_;
  assign _071_ = decoded_reg_strb_r3 & cpuif_req_is_wr;
  assign _059_[1] = decoded_reg_strb_r4 & cpuif_req_is_wr;
  assign _072_ = decoded_reg_strb_r5 & cpuif_req_is_wr;
  assign _073_ = decoded_reg_strb_hw_ctrl & _079_;
  assign _074_ = decoded_reg_strb_r1 & _079_;
  assign _075_ = decoded_reg_strb_r2 & _079_;
  assign _076_ = decoded_reg_strb_r3 & _079_;
  assign _077_ = decoded_reg_strb_r4 & _079_;
  assign _078_ = decoded_reg_strb_r5 & _079_;
  assign s_apb_pready = cpuif_rd_ack | cpuif_wr_ack;
  assign field_combo_hw_ctrl_hw_clr_load_next = decoded_reg_strb_hw_ctrl & cpuif_req_is_wr;
  assign \readback_array[0] [0] = _073_ ? field_storage_hw_ctrl_hw_enable_value[0] : 1'h0;
  assign \readback_array[0] [1] = _073_ ? field_storage_hw_ctrl_hw_enable_value[1] : 1'h0;
  assign \readback_array[0] [2] = _073_ ? field_storage_hw_ctrl_hw_enable_value[2] : 1'h0;
  assign \readback_array[0] [3] = _073_ ? field_storage_hw_ctrl_hw_enable_value[3] : 1'h0;
  assign \readback_array[0] [4] = _073_ ? field_storage_hw_ctrl_hw_enable_value[4] : 1'h0;
  assign \readback_array[0] [5] = _073_ ? field_storage_hw_ctrl_hw_enable_value[5] : 1'h0;
  assign \readback_array[0] [6] = _073_ ? field_storage_hw_ctrl_hw_enable_value[6] : 1'h0;
  assign \readback_array[0] [7] = _073_ ? field_storage_hw_ctrl_hw_enable_value[7] : 1'h0;
  assign \readback_array[0] [8] = _073_ ? field_storage_hw_ctrl_hw_mask_value[0] : 1'h0;
  assign \readback_array[0] [9] = _073_ ? field_storage_hw_ctrl_hw_mask_value[1] : 1'h0;
  assign \readback_array[0] [10] = _073_ ? field_storage_hw_ctrl_hw_mask_value[2] : 1'h0;
  assign \readback_array[0] [11] = _073_ ? field_storage_hw_ctrl_hw_mask_value[3] : 1'h0;
  assign \readback_array[0] [12] = _073_ ? field_storage_hw_ctrl_hw_mask_value[4] : 1'h0;
  assign \readback_array[0] [13] = _073_ ? field_storage_hw_ctrl_hw_mask_value[5] : 1'h0;
  assign \readback_array[0] [14] = _073_ ? field_storage_hw_ctrl_hw_mask_value[6] : 1'h0;
  assign \readback_array[0] [15] = _073_ ? field_storage_hw_ctrl_hw_mask_value[7] : 1'h0;
  assign \readback_array[0] [16] = _073_ ? field_storage_hw_ctrl_hw_clr_value : 1'h0;
  assign \readback_array[0] [17] = _073_ ? field_storage_hw_ctrl_hw_set_value : 1'h0;
  assign \readback_array[0] [18] = _073_ ? field_storage_hw_ctrl_hw_we_value : 1'h0;
  assign \readback_array[0] [20] = _073_ ? field_storage_hw_ctrl_hw_wel_value : 1'h0;
  assign \readback_array[1] [0] = _074_ ? field_storage_r1_f_value[0] : 1'h0;
  assign \readback_array[1] [1] = _074_ ? field_storage_r1_f_value[1] : 1'h0;
  assign \readback_array[1] [2] = _074_ ? field_storage_r1_f_value[2] : 1'h0;
  assign \readback_array[1] [3] = _074_ ? field_storage_r1_f_value[3] : 1'h0;
  assign \readback_array[1] [4] = _074_ ? field_storage_r1_f_value[4] : 1'h0;
  assign \readback_array[1] [5] = _074_ ? field_storage_r1_f_value[5] : 1'h0;
  assign \readback_array[1] [6] = _074_ ? field_storage_r1_f_value[6] : 1'h0;
  assign \readback_array[1] [7] = _074_ ? field_storage_r1_f_value[7] : 1'h0;
  assign \readback_array[2] [0] = _075_ ? field_storage_r2_f_value[0] : 1'h0;
  assign \readback_array[2] [1] = _075_ ? field_storage_r2_f_value[1] : 1'h0;
  assign \readback_array[2] [2] = _075_ ? field_storage_r2_f_value[2] : 1'h0;
  assign \readback_array[2] [3] = _075_ ? field_storage_r2_f_value[3] : 1'h0;
  assign \readback_array[2] [4] = _075_ ? field_storage_r2_f_value[4] : 1'h0;
  assign \readback_array[2] [5] = _075_ ? field_storage_r2_f_value[5] : 1'h0;
  assign \readback_array[2] [6] = _075_ ? field_storage_r2_f_value[6] : 1'h0;
  assign \readback_array[2] [7] = _075_ ? field_storage_r2_f_value[7] : 1'h0;
  assign \readback_array[3] [0] = _076_ ? field_storage_r3_f_value[0] : 1'h0;
  assign \readback_array[3] [1] = _076_ ? field_storage_r3_f_value[1] : 1'h0;
  assign \readback_array[3] [2] = _076_ ? field_storage_r3_f_value[2] : 1'h0;
  assign \readback_array[3] [3] = _076_ ? field_storage_r3_f_value[3] : 1'h0;
  assign \readback_array[3] [4] = _076_ ? field_storage_r3_f_value[4] : 1'h0;
  assign \readback_array[3] [5] = _076_ ? field_storage_r3_f_value[5] : 1'h0;
  assign \readback_array[3] [6] = _076_ ? field_storage_r3_f_value[6] : 1'h0;
  assign \readback_array[3] [7] = _076_ ? field_storage_r3_f_value[7] : 1'h0;
  assign \readback_array[4] [0] = _077_ ? field_storage_r4_f_value[0] : 1'h0;
  assign \readback_array[4] [1] = _077_ ? field_storage_r4_f_value[1] : 1'h0;
  assign \readback_array[4] [2] = _077_ ? field_storage_r4_f_value[2] : 1'h0;
  assign \readback_array[4] [3] = _077_ ? field_storage_r4_f_value[3] : 1'h0;
  assign \readback_array[4] [4] = _077_ ? field_storage_r4_f_value[4] : 1'h0;
  assign \readback_array[4] [5] = _077_ ? field_storage_r4_f_value[5] : 1'h0;
  assign \readback_array[4] [6] = _077_ ? field_storage_r4_f_value[6] : 1'h0;
  assign \readback_array[4] [7] = _077_ ? field_storage_r4_f_value[7] : 1'h0;
  assign \readback_array[5] [0] = _078_ ? field_storage_r5_f_value[0] : 1'h0;
  assign \readback_array[5] [1] = _078_ ? field_storage_r5_f_value[1] : 1'h0;
  assign \readback_array[5] [2] = _078_ ? field_storage_r5_f_value[2] : 1'h0;
  assign \readback_array[5] [3] = _078_ ? field_storage_r5_f_value[3] : 1'h0;
  assign \readback_array[5] [4] = _078_ ? field_storage_r5_f_value[4] : 1'h0;
  assign \readback_array[5] [5] = _078_ ? field_storage_r5_f_value[5] : 1'h0;
  assign \readback_array[5] [6] = _078_ ? field_storage_r5_f_value[6] : 1'h0;
  assign \readback_array[5] [7] = _078_ ? field_storage_r5_f_value[7] : 1'h0;
  assign _008_[0] = hwif_in_r5_f_we ? hwif_in_r5_f_next_value[0] : 1'hx;
  assign _008_[1] = hwif_in_r5_f_we ? hwif_in_r5_f_next_value[1] : 1'hx;
  assign _008_[2] = hwif_in_r5_f_we ? hwif_in_r5_f_next_value[2] : 1'hx;
  assign _008_[3] = hwif_in_r5_f_we ? hwif_in_r5_f_next_value[3] : 1'hx;
  assign _008_[4] = hwif_in_r5_f_we ? hwif_in_r5_f_next_value[4] : 1'hx;
  assign _008_[5] = hwif_in_r5_f_we ? hwif_in_r5_f_next_value[5] : 1'hx;
  assign _008_[6] = hwif_in_r5_f_we ? hwif_in_r5_f_next_value[6] : 1'hx;
  assign _008_[7] = hwif_in_r5_f_we ? hwif_in_r5_f_next_value[7] : 1'hx;
  assign field_combo_r5_f_load_next = _072_ ? 1'h1 : hwif_in_r5_f_we;
  assign field_combo_r5_f_next[0] = _072_ ? _099_[0] : _008_[0];
  assign field_combo_r5_f_next[1] = _072_ ? _099_[1] : _008_[1];
  assign field_combo_r5_f_next[2] = _072_ ? _099_[2] : _008_[2];
  assign field_combo_r5_f_next[3] = _072_ ? _099_[3] : _008_[3];
  assign field_combo_r5_f_next[4] = _072_ ? _099_[4] : _008_[4];
  assign field_combo_r5_f_next[5] = _072_ ? _099_[5] : _008_[5];
  assign field_combo_r5_f_next[6] = _072_ ? _099_[6] : _008_[6];
  assign field_combo_r5_f_next[7] = _072_ ? _099_[7] : _008_[7];
  assign _007_[0] = field_storage_hw_ctrl_hw_wel_value ? 1'hx : hwif_in_r4_f[0];
  assign _007_[1] = field_storage_hw_ctrl_hw_wel_value ? 1'hx : hwif_in_r4_f[1];
  assign _007_[2] = field_storage_hw_ctrl_hw_wel_value ? 1'hx : hwif_in_r4_f[2];
  assign _007_[3] = field_storage_hw_ctrl_hw_wel_value ? 1'hx : hwif_in_r4_f[3];
  assign _007_[4] = field_storage_hw_ctrl_hw_wel_value ? 1'hx : hwif_in_r4_f[4];
  assign _007_[5] = field_storage_hw_ctrl_hw_wel_value ? 1'hx : hwif_in_r4_f[5];
  assign _007_[6] = field_storage_hw_ctrl_hw_wel_value ? 1'hx : hwif_in_r4_f[6];
  assign _007_[7] = field_storage_hw_ctrl_hw_wel_value ? 1'hx : hwif_in_r4_f[7];
  assign field_combo_r4_f_load_next = _059_[1] ? 1'h1 : _006_;
  assign field_combo_r4_f_next[0] = _059_[1] ? _098_[0] : _007_[0];
  assign field_combo_r4_f_next[1] = _059_[1] ? _098_[1] : _007_[1];
  assign field_combo_r4_f_next[2] = _059_[1] ? _098_[2] : _007_[2];
  assign field_combo_r4_f_next[3] = _059_[1] ? _098_[3] : _007_[3];
  assign field_combo_r4_f_next[4] = _059_[1] ? _098_[4] : _007_[4];
  assign field_combo_r4_f_next[5] = _059_[1] ? _098_[5] : _007_[5];
  assign field_combo_r4_f_next[6] = _059_[1] ? _098_[6] : _007_[6];
  assign field_combo_r4_f_next[7] = _059_[1] ? _098_[7] : _007_[7];
  assign _013_[0] = field_storage_hw_ctrl_hw_clr_value ? _032_[0] : 1'hx;
  assign _013_[1] = field_storage_hw_ctrl_hw_clr_value ? _032_[1] : 1'hx;
  assign _013_[2] = field_storage_hw_ctrl_hw_clr_value ? _032_[2] : 1'hx;
  assign _013_[3] = field_storage_hw_ctrl_hw_clr_value ? _032_[3] : 1'hx;
  assign _013_[4] = field_storage_hw_ctrl_hw_clr_value ? _032_[4] : 1'hx;
  assign _013_[5] = field_storage_hw_ctrl_hw_clr_value ? _032_[5] : 1'hx;
  assign _013_[6] = field_storage_hw_ctrl_hw_clr_value ? _032_[6] : 1'hx;
  assign _013_[7] = field_storage_hw_ctrl_hw_clr_value ? _032_[7] : 1'hx;
  assign _011_ = field_storage_hw_ctrl_hw_set_value ? 1'h1 : field_storage_hw_ctrl_hw_clr_value;
  assign _012_[0] = field_storage_hw_ctrl_hw_set_value ? _097_[0] : _013_[0];
  assign _012_[1] = field_storage_hw_ctrl_hw_set_value ? _097_[1] : _013_[1];
  assign _012_[2] = field_storage_hw_ctrl_hw_set_value ? _097_[2] : _013_[2];
  assign _012_[3] = field_storage_hw_ctrl_hw_set_value ? _097_[3] : _013_[3];
  assign _012_[4] = field_storage_hw_ctrl_hw_set_value ? _097_[4] : _013_[4];
  assign _012_[5] = field_storage_hw_ctrl_hw_set_value ? _097_[5] : _013_[5];
  assign _012_[6] = field_storage_hw_ctrl_hw_set_value ? _097_[6] : _013_[6];
  assign _012_[7] = field_storage_hw_ctrl_hw_set_value ? _097_[7] : _013_[7];
  assign _004_ = field_storage_hw_ctrl_hw_we_value ? 1'h1 : _011_;
  assign _005_[0] = field_storage_hw_ctrl_hw_we_value ? _096_[0] : _012_[0];
  assign _005_[1] = field_storage_hw_ctrl_hw_we_value ? _096_[1] : _012_[1];
  assign _005_[2] = field_storage_hw_ctrl_hw_we_value ? _096_[2] : _012_[2];
  assign _005_[3] = field_storage_hw_ctrl_hw_we_value ? _096_[3] : _012_[3];
  assign _005_[4] = field_storage_hw_ctrl_hw_we_value ? _096_[4] : _012_[4];
  assign _005_[5] = field_storage_hw_ctrl_hw_we_value ? _096_[5] : _012_[5];
  assign _005_[6] = field_storage_hw_ctrl_hw_we_value ? _096_[6] : _012_[6];
  assign _005_[7] = field_storage_hw_ctrl_hw_we_value ? _096_[7] : _012_[7];
  assign field_combo_r3_f_load_next = _071_ ? 1'h1 : _004_;
  assign field_combo_r3_f_next[0] = _071_ ? _095_[0] : _005_[0];
  assign field_combo_r3_f_next[1] = _071_ ? _095_[1] : _005_[1];
  assign field_combo_r3_f_next[2] = _071_ ? _095_[2] : _005_[2];
  assign field_combo_r3_f_next[3] = _071_ ? _095_[3] : _005_[3];
  assign field_combo_r3_f_next[4] = _071_ ? _095_[4] : _005_[4];
  assign field_combo_r3_f_next[5] = _071_ ? _095_[5] : _005_[5];
  assign field_combo_r3_f_next[6] = _071_ ? _095_[6] : _005_[6];
  assign field_combo_r3_f_next[7] = _071_ ? _095_[7] : _005_[7];
  assign _010_[0] = hwif_in_r2_f_hwclr ? _029_[0] : 1'hx;
  assign _010_[1] = hwif_in_r2_f_hwclr ? _029_[1] : 1'hx;
  assign _010_[2] = hwif_in_r2_f_hwclr ? _029_[2] : 1'hx;
  assign _010_[3] = hwif_in_r2_f_hwclr ? _029_[3] : 1'hx;
  assign _010_[4] = hwif_in_r2_f_hwclr ? _029_[4] : 1'hx;
  assign _010_[5] = hwif_in_r2_f_hwclr ? _029_[5] : 1'hx;
  assign _010_[6] = hwif_in_r2_f_hwclr ? _029_[6] : 1'hx;
  assign _010_[7] = hwif_in_r2_f_hwclr ? _029_[7] : 1'hx;
  assign _002_ = hwif_in_r2_f_hwset ? 1'h1 : hwif_in_r2_f_hwclr;
  assign _003_[0] = hwif_in_r2_f_hwset ? _094_[0] : _010_[0];
  assign _003_[1] = hwif_in_r2_f_hwset ? _094_[1] : _010_[1];
  assign _003_[2] = hwif_in_r2_f_hwset ? _094_[2] : _010_[2];
  assign _003_[3] = hwif_in_r2_f_hwset ? _094_[3] : _010_[3];
  assign _003_[4] = hwif_in_r2_f_hwset ? _094_[4] : _010_[4];
  assign _003_[5] = hwif_in_r2_f_hwset ? _094_[5] : _010_[5];
  assign _003_[6] = hwif_in_r2_f_hwset ? _094_[6] : _010_[6];
  assign _003_[7] = hwif_in_r2_f_hwset ? _094_[7] : _010_[7];
  assign field_combo_r2_f_load_next = hwif_in_r2_f_we ? 1'h1 : _002_;
  assign field_combo_r2_f_next[0] = hwif_in_r2_f_we ? _093_[0] : _003_[0];
  assign field_combo_r2_f_next[1] = hwif_in_r2_f_we ? _093_[1] : _003_[1];
  assign field_combo_r2_f_next[2] = hwif_in_r2_f_we ? _093_[2] : _003_[2];
  assign field_combo_r2_f_next[3] = hwif_in_r2_f_we ? _093_[3] : _003_[3];
  assign field_combo_r2_f_next[4] = hwif_in_r2_f_we ? _093_[4] : _003_[4];
  assign field_combo_r2_f_next[5] = hwif_in_r2_f_we ? _093_[5] : _003_[5];
  assign field_combo_r2_f_next[6] = hwif_in_r2_f_we ? _093_[6] : _003_[6];
  assign field_combo_r2_f_next[7] = hwif_in_r2_f_we ? _093_[7] : _003_[7];
  assign _009_[0] = hwif_in_r1_f_hwclr ? _027_[0] : 1'hx;
  assign _009_[1] = hwif_in_r1_f_hwclr ? _027_[1] : 1'hx;
  assign _009_[2] = hwif_in_r1_f_hwclr ? _027_[2] : 1'hx;
  assign _009_[3] = hwif_in_r1_f_hwclr ? _027_[3] : 1'hx;
  assign _009_[4] = hwif_in_r1_f_hwclr ? _027_[4] : 1'hx;
  assign _009_[5] = hwif_in_r1_f_hwclr ? _027_[5] : 1'hx;
  assign _009_[6] = hwif_in_r1_f_hwclr ? _027_[6] : 1'hx;
  assign _009_[7] = hwif_in_r1_f_hwclr ? _027_[7] : 1'hx;
  assign _000_ = hwif_in_r1_f_hwset ? 1'h1 : hwif_in_r1_f_hwclr;
  assign _001_[0] = hwif_in_r1_f_hwset ? _092_[0] : _009_[0];
  assign _001_[1] = hwif_in_r1_f_hwset ? _092_[1] : _009_[1];
  assign _001_[2] = hwif_in_r1_f_hwset ? _092_[2] : _009_[2];
  assign _001_[3] = hwif_in_r1_f_hwset ? _092_[3] : _009_[3];
  assign _001_[4] = hwif_in_r1_f_hwset ? _092_[4] : _009_[4];
  assign _001_[5] = hwif_in_r1_f_hwset ? _092_[5] : _009_[5];
  assign _001_[6] = hwif_in_r1_f_hwset ? _092_[6] : _009_[6];
  assign _001_[7] = hwif_in_r1_f_hwset ? _092_[7] : _009_[7];
  assign field_combo_r1_f_load_next = hwif_in_r1_f_we ? 1'h1 : _000_;
  assign field_combo_r1_f_next[0] = hwif_in_r1_f_we ? _091_[0] : _001_[0];
  assign field_combo_r1_f_next[1] = hwif_in_r1_f_we ? _091_[1] : _001_[1];
  assign field_combo_r1_f_next[2] = hwif_in_r1_f_we ? _091_[2] : _001_[2];
  assign field_combo_r1_f_next[3] = hwif_in_r1_f_we ? _091_[3] : _001_[3];
  assign field_combo_r1_f_next[4] = hwif_in_r1_f_we ? _091_[4] : _001_[4];
  assign field_combo_r1_f_next[5] = hwif_in_r1_f_we ? _091_[5] : _001_[5];
  assign field_combo_r1_f_next[6] = hwif_in_r1_f_we ? _091_[6] : _001_[6];
  assign field_combo_r1_f_next[7] = hwif_in_r1_f_we ? _091_[7] : _001_[7];
  assign _104_ = ~s_apb_pready;
  assign _105_ = is_active ? _104_ : s_apb_psel;
  assign _084_[0] = ~field_storage_hw_ctrl_hw_mask_value[0];
  assign _084_[1] = ~field_storage_hw_ctrl_hw_mask_value[1];
  assign _084_[2] = ~field_storage_hw_ctrl_hw_mask_value[2];
  assign _084_[3] = ~field_storage_hw_ctrl_hw_mask_value[3];
  assign _084_[4] = ~field_storage_hw_ctrl_hw_mask_value[4];
  assign _084_[5] = ~field_storage_hw_ctrl_hw_mask_value[5];
  assign _084_[6] = ~field_storage_hw_ctrl_hw_mask_value[6];
  assign _084_[7] = ~field_storage_hw_ctrl_hw_mask_value[7];
  assign _083_[0] = ~field_storage_hw_ctrl_hw_enable_value[0];
  assign _083_[1] = ~field_storage_hw_ctrl_hw_enable_value[1];
  assign _083_[2] = ~field_storage_hw_ctrl_hw_enable_value[2];
  assign _083_[3] = ~field_storage_hw_ctrl_hw_enable_value[3];
  assign _083_[4] = ~field_storage_hw_ctrl_hw_enable_value[4];
  assign _083_[5] = ~field_storage_hw_ctrl_hw_enable_value[5];
  assign _083_[6] = ~field_storage_hw_ctrl_hw_enable_value[6];
  assign _083_[7] = ~field_storage_hw_ctrl_hw_enable_value[7];
  assign _080_[7] = ~cpuif_wr_biten[1];
  assign _047_ = ~is_active;
  assign _081_[7] = ~cpuif_wr_biten[11];
  assign _082_ = ~cpuif_wr_biten[16];
  assign _027_[0] = field_storage_r1_f_value[0] & _083_[0];
  assign _027_[1] = field_storage_r1_f_value[1] & _083_[1];
  assign _027_[2] = field_storage_r1_f_value[2] & _083_[2];
  assign _027_[3] = field_storage_r1_f_value[3] & _083_[3];
  assign _027_[4] = field_storage_r1_f_value[4] & _083_[4];
  assign _027_[5] = field_storage_r1_f_value[5] & _083_[5];
  assign _027_[6] = field_storage_r1_f_value[6] & _083_[6];
  assign _027_[7] = field_storage_r1_f_value[7] & _083_[7];
  assign _028_[0] = hwif_in_r2_f[0] & _084_[0];
  assign _028_[1] = hwif_in_r2_f[1] & _084_[1];
  assign _028_[2] = hwif_in_r2_f[2] & _084_[2];
  assign _028_[3] = hwif_in_r2_f[3] & _084_[3];
  assign _028_[4] = hwif_in_r2_f[4] & _084_[4];
  assign _028_[5] = hwif_in_r2_f[5] & _084_[5];
  assign _028_[6] = hwif_in_r2_f[6] & _084_[6];
  assign _028_[7] = hwif_in_r2_f[7] & _084_[7];
  assign _093_[0] = _028_[0] | _029_[0];
  assign _093_[1] = _028_[1] | _029_[1];
  assign _093_[2] = _028_[2] | _029_[2];
  assign _093_[3] = _028_[3] | _029_[3];
  assign _093_[4] = _028_[4] | _029_[4];
  assign _093_[5] = _028_[5] | _029_[5];
  assign _093_[6] = _028_[6] | _029_[6];
  assign _093_[7] = _028_[7] | _029_[7];
  assign _094_[0] = field_storage_r2_f_value[0] | _084_[0];
  assign _094_[1] = field_storage_r2_f_value[1] | _084_[1];
  assign _094_[2] = field_storage_r2_f_value[2] | _084_[2];
  assign _094_[3] = field_storage_r2_f_value[3] | _084_[3];
  assign _094_[4] = field_storage_r2_f_value[4] | _084_[4];
  assign _094_[5] = field_storage_r2_f_value[5] | _084_[5];
  assign _094_[6] = field_storage_r2_f_value[6] | _084_[6];
  assign _094_[7] = field_storage_r2_f_value[7] | _084_[7];
  assign _029_[0] = field_storage_r2_f_value[0] & field_storage_hw_ctrl_hw_mask_value[0];
  assign _029_[1] = field_storage_r2_f_value[1] & field_storage_hw_ctrl_hw_mask_value[1];
  assign _029_[2] = field_storage_r2_f_value[2] & field_storage_hw_ctrl_hw_mask_value[2];
  assign _029_[3] = field_storage_r2_f_value[3] & field_storage_hw_ctrl_hw_mask_value[3];
  assign _029_[4] = field_storage_r2_f_value[4] & field_storage_hw_ctrl_hw_mask_value[4];
  assign _029_[5] = field_storage_r2_f_value[5] & field_storage_hw_ctrl_hw_mask_value[5];
  assign _029_[6] = field_storage_r2_f_value[6] & field_storage_hw_ctrl_hw_mask_value[6];
  assign _029_[7] = field_storage_r2_f_value[7] & field_storage_hw_ctrl_hw_mask_value[7];
  assign _030_[0] = field_storage_r3_f_value[0] & _080_[7];
  assign _030_[1] = field_storage_r3_f_value[1] & _080_[7];
  assign _030_[2] = field_storage_r3_f_value[2] & _080_[7];
  assign _030_[3] = field_storage_r3_f_value[3] & _080_[7];
  assign _030_[4] = field_storage_r3_f_value[4] & _080_[7];
  assign _030_[5] = field_storage_r3_f_value[5] & _080_[7];
  assign _030_[6] = field_storage_r3_f_value[6] & _080_[7];
  assign _030_[7] = field_storage_r3_f_value[7] & _080_[7];
  assign _095_[0] = _030_[0] | _015_[0];
  assign _095_[1] = _030_[1] | _015_[1];
  assign _095_[2] = _030_[2] | _015_[2];
  assign _095_[3] = _030_[3] | _015_[3];
  assign _095_[4] = _030_[4] | _015_[4];
  assign _095_[5] = _030_[5] | _015_[5];
  assign _095_[6] = _030_[6] | _015_[6];
  assign _095_[7] = _030_[7] | _015_[7];
  assign _031_[0] = hwif_in_r3_f[0] & field_storage_hw_ctrl_hw_enable_value[0];
  assign _031_[1] = hwif_in_r3_f[1] & field_storage_hw_ctrl_hw_enable_value[1];
  assign _031_[2] = hwif_in_r3_f[2] & field_storage_hw_ctrl_hw_enable_value[2];
  assign _031_[3] = hwif_in_r3_f[3] & field_storage_hw_ctrl_hw_enable_value[3];
  assign _031_[4] = hwif_in_r3_f[4] & field_storage_hw_ctrl_hw_enable_value[4];
  assign _031_[5] = hwif_in_r3_f[5] & field_storage_hw_ctrl_hw_enable_value[5];
  assign _031_[6] = hwif_in_r3_f[6] & field_storage_hw_ctrl_hw_enable_value[6];
  assign _031_[7] = hwif_in_r3_f[7] & field_storage_hw_ctrl_hw_enable_value[7];
  assign _096_[0] = _031_[0] | _032_[0];
  assign _096_[1] = _031_[1] | _032_[1];
  assign _096_[2] = _031_[2] | _032_[2];
  assign _096_[3] = _031_[3] | _032_[3];
  assign _096_[4] = _031_[4] | _032_[4];
  assign _096_[5] = _031_[5] | _032_[5];
  assign _096_[6] = _031_[6] | _032_[6];
  assign _096_[7] = _031_[7] | _032_[7];
  assign _097_[0] = field_storage_r3_f_value[0] | field_storage_hw_ctrl_hw_enable_value[0];
  assign _097_[1] = field_storage_r3_f_value[1] | field_storage_hw_ctrl_hw_enable_value[1];
  assign _097_[2] = field_storage_r3_f_value[2] | field_storage_hw_ctrl_hw_enable_value[2];
  assign _097_[3] = field_storage_r3_f_value[3] | field_storage_hw_ctrl_hw_enable_value[3];
  assign _097_[4] = field_storage_r3_f_value[4] | field_storage_hw_ctrl_hw_enable_value[4];
  assign _097_[5] = field_storage_r3_f_value[5] | field_storage_hw_ctrl_hw_enable_value[5];
  assign _097_[6] = field_storage_r3_f_value[6] | field_storage_hw_ctrl_hw_enable_value[6];
  assign _097_[7] = field_storage_r3_f_value[7] | field_storage_hw_ctrl_hw_enable_value[7];
  assign _032_[0] = field_storage_r3_f_value[0] & _083_[0];
  assign _032_[1] = field_storage_r3_f_value[1] & _083_[1];
  assign _032_[2] = field_storage_r3_f_value[2] & _083_[2];
  assign _032_[3] = field_storage_r3_f_value[3] & _083_[3];
  assign _032_[4] = field_storage_r3_f_value[4] & _083_[4];
  assign _032_[5] = field_storage_r3_f_value[5] & _083_[5];
  assign _032_[6] = field_storage_r3_f_value[6] & _083_[6];
  assign _032_[7] = field_storage_r3_f_value[7] & _083_[7];
  assign _033_[0] = field_storage_r4_f_value[0] & _080_[7];
  assign _033_[1] = field_storage_r4_f_value[1] & _080_[7];
  assign _033_[2] = field_storage_r4_f_value[2] & _080_[7];
  assign _033_[3] = field_storage_r4_f_value[3] & _080_[7];
  assign _033_[4] = field_storage_r4_f_value[4] & _080_[7];
  assign _033_[5] = field_storage_r4_f_value[5] & _080_[7];
  assign _033_[6] = field_storage_r4_f_value[6] & _080_[7];
  assign _033_[7] = field_storage_r4_f_value[7] & _080_[7];
  assign _098_[0] = _033_[0] | _015_[0];
  assign _098_[1] = _033_[1] | _015_[1];
  assign _098_[2] = _033_[2] | _015_[2];
  assign _098_[3] = _033_[3] | _015_[3];
  assign _098_[4] = _033_[4] | _015_[4];
  assign _098_[5] = _033_[5] | _015_[5];
  assign _098_[6] = _033_[6] | _015_[6];
  assign _098_[7] = _033_[7] | _015_[7];
  assign _034_[0] = field_storage_r5_f_value[0] & _080_[7];
  assign _034_[1] = field_storage_r5_f_value[1] & _080_[7];
  assign _034_[2] = field_storage_r5_f_value[2] & _080_[7];
  assign _034_[3] = field_storage_r5_f_value[3] & _080_[7];
  assign _034_[4] = field_storage_r5_f_value[4] & _080_[7];
  assign _034_[5] = field_storage_r5_f_value[5] & _080_[7];
  assign _034_[6] = field_storage_r5_f_value[6] & _080_[7];
  assign _034_[7] = field_storage_r5_f_value[7] & _080_[7];
  assign _015_[0] = cpuif_wr_data[0] & cpuif_wr_biten[1];
  assign _015_[1] = cpuif_wr_data[1] & cpuif_wr_biten[1];
  assign _015_[2] = cpuif_wr_data[2] & cpuif_wr_biten[1];
  assign _015_[3] = cpuif_wr_data[3] & cpuif_wr_biten[1];
  assign _015_[4] = cpuif_wr_data[4] & cpuif_wr_biten[1];
  assign _015_[5] = cpuif_wr_data[5] & cpuif_wr_biten[1];
  assign _015_[6] = cpuif_wr_data[6] & cpuif_wr_biten[1];
  assign _015_[7] = cpuif_wr_data[7] & cpuif_wr_biten[1];
  assign _099_[0] = _034_[0] | _015_[0];
  assign _099_[1] = _034_[1] | _015_[1];
  assign _099_[2] = _034_[2] | _015_[2];
  assign _099_[3] = _034_[3] | _015_[3];
  assign _099_[4] = _034_[4] | _015_[4];
  assign _099_[5] = _034_[5] | _015_[5];
  assign _099_[6] = _034_[6] | _015_[6];
  assign _099_[7] = _034_[7] | _015_[7];
  assign cpuif_wr_ack = cpuif_req & cpuif_req_is_wr;
  assign cpuif_rd_ack = cpuif_req & _079_;
  assign _100_[0] = \readback_array[0] [0] | \readback_array[1] [0];
  assign _100_[1] = \readback_array[0] [1] | \readback_array[1] [1];
  assign _100_[2] = \readback_array[0] [2] | \readback_array[1] [2];
  assign _100_[3] = \readback_array[0] [3] | \readback_array[1] [3];
  assign _100_[4] = \readback_array[0] [4] | \readback_array[1] [4];
  assign _100_[5] = \readback_array[0] [5] | \readback_array[1] [5];
  assign _100_[6] = \readback_array[0] [6] | \readback_array[1] [6];
  assign _100_[7] = \readback_array[0] [7] | \readback_array[1] [7];
  assign _101_[0] = _100_[0] | \readback_array[2] [0];
  assign _101_[1] = _100_[1] | \readback_array[2] [1];
  assign _101_[2] = _100_[2] | \readback_array[2] [2];
  assign _101_[3] = _100_[3] | \readback_array[2] [3];
  assign _101_[4] = _100_[4] | \readback_array[2] [4];
  assign _101_[5] = _100_[5] | \readback_array[2] [5];
  assign _101_[6] = _100_[6] | \readback_array[2] [6];
  assign _101_[7] = _100_[7] | \readback_array[2] [7];
  assign _102_[0] = _101_[0] | \readback_array[3] [0];
  assign _102_[1] = _101_[1] | \readback_array[3] [1];
  assign _102_[2] = _101_[2] | \readback_array[3] [2];
  assign _102_[3] = _101_[3] | \readback_array[3] [3];
  assign _102_[4] = _101_[4] | \readback_array[3] [4];
  assign _102_[5] = _101_[5] | \readback_array[3] [5];
  assign _102_[6] = _101_[6] | \readback_array[3] [6];
  assign _102_[7] = _101_[7] | \readback_array[3] [7];
  assign _103_[0] = _102_[0] | \readback_array[4] [0];
  assign _103_[1] = _102_[1] | \readback_array[4] [1];
  assign _103_[2] = _102_[2] | \readback_array[4] [2];
  assign _103_[3] = _102_[3] | \readback_array[4] [3];
  assign _103_[4] = _102_[4] | \readback_array[4] [4];
  assign _103_[5] = _102_[5] | \readback_array[4] [5];
  assign _103_[6] = _102_[6] | \readback_array[4] [6];
  assign _103_[7] = _102_[7] | \readback_array[4] [7];
  assign s_apb_prdata[0] = _103_[0] | \readback_array[5] [0];
  assign s_apb_prdata[1] = _103_[1] | \readback_array[5] [1];
  assign s_apb_prdata[2] = _103_[2] | \readback_array[5] [2];
  assign s_apb_prdata[3] = _103_[3] | \readback_array[5] [3];
  assign s_apb_prdata[4] = _103_[4] | \readback_array[5] [4];
  assign s_apb_prdata[5] = _103_[5] | \readback_array[5] [5];
  assign s_apb_prdata[6] = _103_[6] | \readback_array[5] [6];
  assign s_apb_prdata[7] = _103_[7] | \readback_array[5] [7];
  assign decoded_reg_strb_hw_ctrl = cpuif_req & _065_;
  assign decoded_reg_strb_r1 = cpuif_req & _066_;
  assign decoded_reg_strb_r2 = cpuif_req & _067_;
  assign decoded_reg_strb_r3 = cpuif_req & _068_;
  assign decoded_reg_strb_r4 = cpuif_req & _069_;
  assign decoded_reg_strb_r5 = cpuif_req & _070_;
  assign _014_[0] = field_storage_hw_ctrl_hw_enable_value[0] & _080_[7];
  assign _014_[1] = field_storage_hw_ctrl_hw_enable_value[1] & _080_[7];
  assign _014_[2] = field_storage_hw_ctrl_hw_enable_value[2] & _080_[7];
  assign _014_[3] = field_storage_hw_ctrl_hw_enable_value[3] & _080_[7];
  assign _014_[4] = field_storage_hw_ctrl_hw_enable_value[4] & _080_[7];
  assign _014_[5] = field_storage_hw_ctrl_hw_enable_value[5] & _080_[7];
  assign _014_[6] = field_storage_hw_ctrl_hw_enable_value[6] & _080_[7];
  assign _014_[7] = field_storage_hw_ctrl_hw_enable_value[7] & _080_[7];
  assign _085_[0] = _014_[0] | _015_[0];
  assign _085_[1] = _014_[1] | _015_[1];
  assign _085_[2] = _014_[2] | _015_[2];
  assign _085_[3] = _014_[3] | _015_[3];
  assign _085_[4] = _014_[4] | _015_[4];
  assign _085_[5] = _014_[5] | _015_[5];
  assign _085_[6] = _014_[6] | _015_[6];
  assign _085_[7] = _014_[7] | _015_[7];
  assign _016_[0] = field_storage_hw_ctrl_hw_mask_value[0] & _081_[7];
  assign _016_[1] = field_storage_hw_ctrl_hw_mask_value[1] & _081_[7];
  assign _016_[2] = field_storage_hw_ctrl_hw_mask_value[2] & _081_[7];
  assign _016_[3] = field_storage_hw_ctrl_hw_mask_value[3] & _081_[7];
  assign _016_[4] = field_storage_hw_ctrl_hw_mask_value[4] & _081_[7];
  assign _016_[5] = field_storage_hw_ctrl_hw_mask_value[5] & _081_[7];
  assign _016_[6] = field_storage_hw_ctrl_hw_mask_value[6] & _081_[7];
  assign _016_[7] = field_storage_hw_ctrl_hw_mask_value[7] & _081_[7];
  assign _017_[0] = cpuif_wr_data[8] & cpuif_wr_biten[11];
  assign _017_[1] = cpuif_wr_data[9] & cpuif_wr_biten[11];
  assign _017_[2] = cpuif_wr_data[10] & cpuif_wr_biten[11];
  assign _017_[3] = cpuif_wr_data[11] & cpuif_wr_biten[11];
  assign _017_[4] = cpuif_wr_data[12] & cpuif_wr_biten[11];
  assign _017_[5] = cpuif_wr_data[13] & cpuif_wr_biten[11];
  assign _017_[6] = cpuif_wr_data[14] & cpuif_wr_biten[11];
  assign _017_[7] = cpuif_wr_data[15] & cpuif_wr_biten[11];
  assign _086_[0] = _016_[0] | _017_[0];
  assign _086_[1] = _016_[1] | _017_[1];
  assign _086_[2] = _016_[2] | _017_[2];
  assign _086_[3] = _016_[3] | _017_[3];
  assign _086_[4] = _016_[4] | _017_[4];
  assign _086_[5] = _016_[5] | _017_[5];
  assign _086_[6] = _016_[6] | _017_[6];
  assign _086_[7] = _016_[7] | _017_[7];
  assign _018_ = field_storage_hw_ctrl_hw_clr_value & _082_;
  assign _019_ = cpuif_wr_data[16] & cpuif_wr_biten[16];
  assign _087_ = _018_ | _019_;
  assign _020_ = field_storage_hw_ctrl_hw_set_value & _082_;
  assign _021_ = cpuif_wr_data[17] & cpuif_wr_biten[16];
  assign _088_ = _020_ | _021_;
  assign _022_ = field_storage_hw_ctrl_hw_we_value & _082_;
  assign _023_ = cpuif_wr_data[18] & cpuif_wr_biten[16];
  assign _089_ = _022_ | _023_;
  assign _024_ = field_storage_hw_ctrl_hw_wel_value & _082_;
  assign _025_ = cpuif_wr_data[20] & cpuif_wr_biten[16];
  assign _090_ = _024_ | _025_;
  assign _026_[0] = hwif_in_r1_f[0] & field_storage_hw_ctrl_hw_enable_value[0];
  assign _026_[1] = hwif_in_r1_f[1] & field_storage_hw_ctrl_hw_enable_value[1];
  assign _026_[2] = hwif_in_r1_f[2] & field_storage_hw_ctrl_hw_enable_value[2];
  assign _026_[3] = hwif_in_r1_f[3] & field_storage_hw_ctrl_hw_enable_value[3];
  assign _026_[4] = hwif_in_r1_f[4] & field_storage_hw_ctrl_hw_enable_value[4];
  assign _026_[5] = hwif_in_r1_f[5] & field_storage_hw_ctrl_hw_enable_value[5];
  assign _026_[6] = hwif_in_r1_f[6] & field_storage_hw_ctrl_hw_enable_value[6];
  assign _026_[7] = hwif_in_r1_f[7] & field_storage_hw_ctrl_hw_enable_value[7];
  assign _091_[0] = _026_[0] | _027_[0];
  assign _091_[1] = _026_[1] | _027_[1];
  assign _091_[2] = _026_[2] | _027_[2];
  assign _091_[3] = _026_[3] | _027_[3];
  assign _091_[4] = _026_[4] | _027_[4];
  assign _091_[5] = _026_[5] | _027_[5];
  assign _091_[6] = _026_[6] | _027_[6];
  assign _091_[7] = _026_[7] | _027_[7];
  assign _092_[0] = field_storage_r1_f_value[0] | field_storage_hw_ctrl_hw_enable_value[0];
  assign _092_[1] = field_storage_r1_f_value[1] | field_storage_hw_ctrl_hw_enable_value[1];
  assign _092_[2] = field_storage_r1_f_value[2] | field_storage_hw_ctrl_hw_enable_value[2];
  assign _092_[3] = field_storage_r1_f_value[3] | field_storage_hw_ctrl_hw_enable_value[3];
  assign _092_[4] = field_storage_r1_f_value[4] | field_storage_hw_ctrl_hw_enable_value[4];
  assign _092_[5] = field_storage_r1_f_value[5] | field_storage_hw_ctrl_hw_enable_value[5];
  assign _092_[6] = field_storage_r1_f_value[6] | field_storage_hw_ctrl_hw_enable_value[6];
  assign _092_[7] = field_storage_r1_f_value[7] | field_storage_hw_ctrl_hw_enable_value[7];
  assign _059_[0] = _006_;
  assign _080_[6:0] = { _080_[7], _080_[7], _080_[7], _080_[7], _080_[7], _080_[7], _080_[7] };
  assign _081_[6:0] = { _081_[7], _081_[7], _081_[7], _081_[7], _081_[7], _081_[7], _081_[7] };
  assign _100_[31:8] = { 11'h000, \readback_array[0] [20], 1'h0, \readback_array[0] [18:8] };
  assign _101_[31:8] = { 11'h000, \readback_array[0] [20], 1'h0, \readback_array[0] [18:8] };
  assign _102_[31:8] = { 11'h000, \readback_array[0] [20], 1'h0, \readback_array[0] [18:8] };
  assign _103_[31:8] = { 11'h000, \readback_array[0] [20], 1'h0, \readback_array[0] [18:8] };
  assign cpuif_addr[1:0] = 2'h0;
  assign cpuif_rd_data = { 11'h000, \readback_array[0] [20], 1'h0, \readback_array[0] [18:8], s_apb_prdata[7:0] };
  assign cpuif_rd_err = 1'h0;
  assign cpuif_req_masked = cpuif_req;
  assign cpuif_req_stall_rd = 1'h0;
  assign cpuif_req_stall_wr = 1'h0;
  assign { cpuif_wr_biten[23:17], cpuif_wr_biten[15:12], cpuif_wr_biten[10:2], cpuif_wr_biten[0] } = { cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1] };
  assign cpuif_wr_err = 1'h0;
  assign decoded_req = cpuif_req;
  assign decoded_req_is_wr = cpuif_req_is_wr;
  assign decoded_wr_biten = { cpuif_wr_biten[31:24], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[16], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[11], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1], cpuif_wr_biten[1] };
  assign decoded_wr_data = cpuif_wr_data;
  assign field_combo_hw_ctrl_hw_enable_load_next = field_combo_hw_ctrl_hw_clr_load_next;
  assign field_combo_hw_ctrl_hw_mask_load_next = field_combo_hw_ctrl_hw_clr_load_next;
  assign field_combo_hw_ctrl_hw_set_load_next = field_combo_hw_ctrl_hw_clr_load_next;
  assign field_combo_hw_ctrl_hw_we_load_next = field_combo_hw_ctrl_hw_clr_load_next;
  assign field_combo_hw_ctrl_hw_wel_load_next = field_combo_hw_ctrl_hw_clr_load_next;
  assign { \readback_array[0] [31:21], \readback_array[0] [19] } = 12'h000;
  assign \readback_array[1] [31:8] = 24'h000000;
  assign \readback_array[2] [31:8] = 24'h000000;
  assign \readback_array[3] [31:8] = 24'h000000;
  assign \readback_array[4] [31:8] = 24'h000000;
  assign \readback_array[5] [31:8] = 24'h000000;
  assign readback_data = { 11'h000, \readback_array[0] [20], 1'h0, \readback_array[0] [18:8], s_apb_prdata[7:0] };
  assign readback_done = cpuif_rd_ack;
  assign readback_err = 1'h0;
  assign readback_external_rd_ack = 1'h0;
  assign s_apb_prdata[31:8] = { 11'h000, \readback_array[0] [20], 1'h0, \readback_array[0] [18:8] };
  assign s_apb_pslverr = 1'h0;
endmodule
