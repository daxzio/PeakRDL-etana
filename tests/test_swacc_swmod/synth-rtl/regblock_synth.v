/* Generated by Yosys 0.57 (git sha1 3aca86049, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module regblock(clk, rst, s_apb_psel, s_apb_pwrite, s_apb_penable, s_apb_pprot, s_apb_paddr, s_apb_pwdata, s_apb_pstrb, s_apb_pready, s_apb_prdata, s_apb_pslverr, hwif_out_r1_intr, hwif_in_r1_f, hwif_out_r1_f_swmod, hwif_out_r1_f_swacc, hwif_out_r1_f_incrthreshold, hwif_out_r1_f_decrthreshold, hwif_out_r2_intr, hwif_out_r2_f, hwif_out_r2_f_swmod
, hwif_out_r2_f_incrthreshold, hwif_out_r2_f_decrthreshold, hwif_out_r3_intr, hwif_out_r3_f, hwif_out_r3_f_swmod, hwif_out_r3_f_incrthreshold, hwif_out_r3_f_decrthreshold, hwif_out_r4_intr, hwif_out_r4_f, hwif_out_r4_f_swmod, hwif_out_r4_f_swacc, hwif_out_r4_f_incrthreshold, hwif_out_r4_f_decrthreshold, hwif_out_r5_intr, hwif_in_r5_f, hwif_out_r5_f, hwif_out_r5_f_swmod, hwif_out_r5_f_incrthreshold, hwif_out_r5_f_decrthreshold, hwif_in_r5_f_we);
  input clk;
  wire clk;
  input rst;
  wire rst;
  input s_apb_psel;
  wire s_apb_psel;
  input s_apb_pwrite;
  wire s_apb_pwrite;
  input s_apb_penable;
  wire s_apb_penable;
  input [2:0] s_apb_pprot;
  wire [2:0] s_apb_pprot;
  input [2:0] s_apb_paddr;
  wire [2:0] s_apb_paddr;
  input [7:0] s_apb_pwdata;
  wire [7:0] s_apb_pwdata;
  input [0:0] s_apb_pstrb;
  wire [0:0] s_apb_pstrb;
  output s_apb_pready;
  wire s_apb_pready;
  output [7:0] s_apb_prdata;
  wire [7:0] s_apb_prdata;
  output s_apb_pslverr;
  wire s_apb_pslverr;
  output [0:0] hwif_out_r1_intr;
  wire [0:0] hwif_out_r1_intr;
  input [7:0] hwif_in_r1_f;
  wire [7:0] hwif_in_r1_f;
  output [0:0] hwif_out_r1_f_swmod;
  wire [0:0] hwif_out_r1_f_swmod;
  output [0:0] hwif_out_r1_f_swacc;
  wire [0:0] hwif_out_r1_f_swacc;
  output [0:0] hwif_out_r1_f_incrthreshold;
  wire [0:0] hwif_out_r1_f_incrthreshold;
  output [0:0] hwif_out_r1_f_decrthreshold;
  wire [0:0] hwif_out_r1_f_decrthreshold;
  output [0:0] hwif_out_r2_intr;
  wire [0:0] hwif_out_r2_intr;
  output [7:0] hwif_out_r2_f;
  wire [7:0] hwif_out_r2_f;
  output [0:0] hwif_out_r2_f_swmod;
  wire [0:0] hwif_out_r2_f_swmod;
  output [0:0] hwif_out_r2_f_incrthreshold;
  wire [0:0] hwif_out_r2_f_incrthreshold;
  output [0:0] hwif_out_r2_f_decrthreshold;
  wire [0:0] hwif_out_r2_f_decrthreshold;
  output [0:0] hwif_out_r3_intr;
  wire [0:0] hwif_out_r3_intr;
  output [7:0] hwif_out_r3_f;
  wire [7:0] hwif_out_r3_f;
  output [0:0] hwif_out_r3_f_swmod;
  wire [0:0] hwif_out_r3_f_swmod;
  output [0:0] hwif_out_r3_f_incrthreshold;
  wire [0:0] hwif_out_r3_f_incrthreshold;
  output [0:0] hwif_out_r3_f_decrthreshold;
  wire [0:0] hwif_out_r3_f_decrthreshold;
  output [0:0] hwif_out_r4_intr;
  wire [0:0] hwif_out_r4_intr;
  output [7:0] hwif_out_r4_f;
  wire [7:0] hwif_out_r4_f;
  output [0:0] hwif_out_r4_f_swmod;
  wire [0:0] hwif_out_r4_f_swmod;
  output [0:0] hwif_out_r4_f_swacc;
  wire [0:0] hwif_out_r4_f_swacc;
  output [0:0] hwif_out_r4_f_incrthreshold;
  wire [0:0] hwif_out_r4_f_incrthreshold;
  output [0:0] hwif_out_r4_f_decrthreshold;
  wire [0:0] hwif_out_r4_f_decrthreshold;
  output [0:0] hwif_out_r5_intr;
  wire [0:0] hwif_out_r5_intr;
  input [7:0] hwif_in_r5_f;
  wire [7:0] hwif_in_r5_f;
  output [7:0] hwif_out_r5_f;
  wire [7:0] hwif_out_r5_f;
  output [0:0] hwif_out_r5_f_swmod;
  wire [0:0] hwif_out_r5_f_swmod;
  output [0:0] hwif_out_r5_f_incrthreshold;
  wire [0:0] hwif_out_r5_f_incrthreshold;
  output [0:0] hwif_out_r5_f_decrthreshold;
  wire [0:0] hwif_out_r5_f_decrthreshold;
  input [0:0] hwif_in_r5_f_we;
  wire [0:0] hwif_in_r5_f_we;
  wire _000_;
  wire [7:0] _001_;
  wire [7:0] _002_;
  wire [7:0] _003_;
  wire [7:0] _004_;
  wire [7:0] _005_;
  wire [7:0] _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire [7:0] _037_;
  wire [7:0] _038_;
  wire [7:0] _039_;
  wire [7:0] _040_;
  wire [7:0] _041_;
  wire [7:0] _042_;
  wire [7:0] _043_;
  wire _044_;
  wire _045_;
  reg [2:0] cpuif_addr;
  wire cpuif_rd_ack;
  wire [7:0] cpuif_rd_data;
  wire cpuif_rd_err;
  reg cpuif_req;
  reg cpuif_req_is_wr;
  wire cpuif_req_masked;
  wire cpuif_req_stall_rd;
  wire cpuif_req_stall_wr;
  wire cpuif_wr_ack;
  wire [7:0] cpuif_wr_biten;
  reg [7:0] cpuif_wr_data;
  wire cpuif_wr_err;
  wire [0:0] decoded_reg_strb_r1;
  wire [0:0] decoded_reg_strb_r2;
  wire [0:0] decoded_reg_strb_r3;
  wire [0:0] decoded_reg_strb_r4;
  wire [0:0] decoded_reg_strb_r5;
  wire decoded_req;
  wire decoded_req_is_wr;
  wire [7:0] decoded_wr_biten;
  wire [7:0] decoded_wr_data;
  wire field_combo_r2_f_load_next;
  wire field_combo_r3_f_load_next;
  wire [7:0] field_combo_r3_f_next;
  wire field_combo_r4_f_load_next;
  wire field_combo_r5_f_load_next;
  wire [7:0] field_combo_r5_f_next;
  reg [7:0] field_storage_r2_f_value;
  reg [7:0] field_storage_r3_f_value;
  reg [7:0] field_storage_r4_f_value;
  reg [7:0] field_storage_r5_f_value;
  reg is_active;
  wire [7:0] \readback_array[0] ;
  wire [7:0] \readback_array[1] ;
  wire [7:0] \readback_array[2] ;
  wire [7:0] \readback_array[3] ;
  wire [7:0] \readback_array[4] ;
  wire [7:0] readback_data;
  wire readback_done;
  wire readback_err;
  wire readback_external_rd_ack;
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[0] <= 1'h0;
    else if (_010_) field_storage_r3_f_value[0] <= field_combo_r3_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[1] <= 1'h1;
    else if (_010_) field_storage_r3_f_value[1] <= field_combo_r3_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[2] <= 1'h1;
    else if (_010_) field_storage_r3_f_value[2] <= field_combo_r3_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[3] <= 1'h1;
    else if (_010_) field_storage_r3_f_value[3] <= field_combo_r3_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[4] <= 1'h1;
    else if (_010_) field_storage_r3_f_value[4] <= field_combo_r3_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[5] <= 1'h0;
    else if (_010_) field_storage_r3_f_value[5] <= field_combo_r3_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[6] <= 1'h0;
    else if (_010_) field_storage_r3_f_value[6] <= field_combo_r3_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[7] <= 1'h0;
    else if (_010_) field_storage_r3_f_value[7] <= field_combo_r3_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[0] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[0] <= _038_[0];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[1] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[1] <= _038_[1];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[2] <= 1'h1;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[2] <= _038_[2];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[3] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[3] <= _038_[3];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[4] <= 1'h1;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[4] <= _038_[4];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[5] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[5] <= _038_[5];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[6] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[6] <= _038_[6];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[7] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[7] <= _038_[7];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[0] <= 1'h0;
    else if (_011_) field_storage_r5_f_value[0] <= field_combo_r5_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[1] <= 1'h1;
    else if (_011_) field_storage_r5_f_value[1] <= field_combo_r5_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[2] <= 1'h1;
    else if (_011_) field_storage_r5_f_value[2] <= field_combo_r5_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[3] <= 1'h1;
    else if (_011_) field_storage_r5_f_value[3] <= field_combo_r5_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[4] <= 1'h1;
    else if (_011_) field_storage_r5_f_value[4] <= field_combo_r5_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[5] <= 1'h0;
    else if (_011_) field_storage_r5_f_value[5] <= field_combo_r5_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[6] <= 1'h0;
    else if (_011_) field_storage_r5_f_value[6] <= field_combo_r5_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[7] <= 1'h0;
    else if (_011_) field_storage_r5_f_value[7] <= field_combo_r5_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[0] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[0] <= _040_[0];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[1] <= 1'h1;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[1] <= _040_[1];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[2] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[2] <= _040_[2];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[3] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[3] <= _040_[3];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[4] <= 1'h1;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[4] <= _040_[4];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[5] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[5] <= _040_[5];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[6] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[6] <= _040_[6];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[7] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[7] <= _040_[7];
  always @(posedge clk)
    if (_012_) cpuif_req <= 1'h0;
    else if (s_apb_psel) cpuif_req <= 1'h1;
  always @(posedge clk)
    if (rst) cpuif_req_is_wr <= 1'h0;
    else if (_009_) cpuif_req_is_wr <= s_apb_pwrite;
  always @(posedge clk)
    if (rst) cpuif_addr[0] <= 1'h0;
    else if (_009_) cpuif_addr[0] <= s_apb_paddr[0];
  always @(posedge clk)
    if (rst) cpuif_addr[1] <= 1'h0;
    else if (_009_) cpuif_addr[1] <= s_apb_paddr[1];
  always @(posedge clk)
    if (rst) cpuif_addr[2] <= 1'h0;
    else if (_009_) cpuif_addr[2] <= s_apb_paddr[2];
  always @(posedge clk)
    if (rst) cpuif_wr_data[0] <= 1'h0;
    else if (_009_) cpuif_wr_data[0] <= s_apb_pwdata[0];
  always @(posedge clk)
    if (rst) cpuif_wr_data[1] <= 1'h0;
    else if (_009_) cpuif_wr_data[1] <= s_apb_pwdata[1];
  always @(posedge clk)
    if (rst) cpuif_wr_data[2] <= 1'h0;
    else if (_009_) cpuif_wr_data[2] <= s_apb_pwdata[2];
  always @(posedge clk)
    if (rst) cpuif_wr_data[3] <= 1'h0;
    else if (_009_) cpuif_wr_data[3] <= s_apb_pwdata[3];
  always @(posedge clk)
    if (rst) cpuif_wr_data[4] <= 1'h0;
    else if (_009_) cpuif_wr_data[4] <= s_apb_pwdata[4];
  always @(posedge clk)
    if (rst) cpuif_wr_data[5] <= 1'h0;
    else if (_009_) cpuif_wr_data[5] <= s_apb_pwdata[5];
  always @(posedge clk)
    if (rst) cpuif_wr_data[6] <= 1'h0;
    else if (_009_) cpuif_wr_data[6] <= s_apb_pwdata[6];
  always @(posedge clk)
    if (rst) cpuif_wr_data[7] <= 1'h0;
    else if (_009_) cpuif_wr_data[7] <= s_apb_pwdata[7];
  reg \cpuif_wr_biten_reg[0] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[0]  <= 1'h0;
    else if (_009_) \cpuif_wr_biten_reg[0]  <= s_apb_pstrb;
  assign cpuif_wr_biten[0] = \cpuif_wr_biten_reg[0] ;
  always @(posedge clk)
    if (rst) is_active <= 1'h0;
    else is_active <= _045_;
  assign _014_ = ~cpuif_addr[1];
  assign _015_ = ~cpuif_addr[0];
  assign _016_ = ~cpuif_addr[2];
  assign _010_ = field_combo_r3_f_load_next & _007_;
  assign _017_ = _015_ | cpuif_addr[1];
  assign _022_ = _017_ | cpuif_addr[2];
  assign _018_ = cpuif_addr[0] | _014_;
  assign _023_ = _018_ | cpuif_addr[2];
  assign _019_ = _015_ | _014_;
  assign _024_ = _019_ | cpuif_addr[2];
  assign _020_ = cpuif_addr[0] | cpuif_addr[1];
  assign _025_ = _020_ | _016_;
  assign _007_ = _031_ | _000_;
  assign _012_ = rst | is_active;
  assign _009_ = s_apb_psel & _013_;
  assign _011_ = field_combo_r5_f_load_next & _008_;
  assign _008_ = hwif_out_r5_f_swmod | hwif_in_r5_f_we;
  assign _021_ = _020_ | cpuif_addr[2];
  assign _026_ = ~_021_;
  assign _027_ = ~_022_;
  assign _028_ = ~_023_;
  assign _029_ = ~_024_;
  assign _030_ = ~_025_;
  assign _036_ = ~cpuif_req_is_wr;
  assign s_apb_pready = cpuif_rd_ack | cpuif_wr_ack;
  assign field_combo_r2_f_load_next = decoded_reg_strb_r2 & cpuif_req_is_wr;
  assign hwif_out_r2_f_swmod = field_combo_r2_f_load_next & cpuif_wr_biten[0];
  assign _000_ = decoded_reg_strb_r3 & cpuif_req_is_wr;
  assign _032_ = _000_ & cpuif_wr_biten[0];
  assign hwif_out_r3_f_swmod = _031_ | _032_;
  assign field_combo_r4_f_load_next = decoded_reg_strb_r4 & cpuif_req_is_wr;
  assign hwif_out_r4_f_swmod = field_combo_r4_f_load_next & cpuif_wr_biten[0];
  assign _033_ = decoded_reg_strb_r1 & _036_;
  assign _034_ = decoded_reg_strb_r2 & _036_;
  assign _031_ = decoded_reg_strb_r3 & _036_;
  assign _035_ = decoded_reg_strb_r4 & _036_;
  assign hwif_out_r5_f_swmod = decoded_reg_strb_r5 & _036_;
  assign \readback_array[0] [0] = _033_ ? hwif_in_r1_f[0] : 1'h0;
  assign \readback_array[0] [1] = _033_ ? hwif_in_r1_f[1] : 1'h0;
  assign \readback_array[0] [2] = _033_ ? hwif_in_r1_f[2] : 1'h0;
  assign \readback_array[0] [3] = _033_ ? hwif_in_r1_f[3] : 1'h0;
  assign \readback_array[0] [4] = _033_ ? hwif_in_r1_f[4] : 1'h0;
  assign \readback_array[0] [5] = _033_ ? hwif_in_r1_f[5] : 1'h0;
  assign \readback_array[0] [6] = _033_ ? hwif_in_r1_f[6] : 1'h0;
  assign \readback_array[0] [7] = _033_ ? hwif_in_r1_f[7] : 1'h0;
  assign \readback_array[1] [0] = _034_ ? field_storage_r2_f_value[0] : 1'h0;
  assign \readback_array[1] [1] = _034_ ? field_storage_r2_f_value[1] : 1'h0;
  assign \readback_array[1] [2] = _034_ ? field_storage_r2_f_value[2] : 1'h0;
  assign \readback_array[1] [3] = _034_ ? field_storage_r2_f_value[3] : 1'h0;
  assign \readback_array[1] [4] = _034_ ? field_storage_r2_f_value[4] : 1'h0;
  assign \readback_array[1] [5] = _034_ ? field_storage_r2_f_value[5] : 1'h0;
  assign \readback_array[1] [6] = _034_ ? field_storage_r2_f_value[6] : 1'h0;
  assign \readback_array[1] [7] = _034_ ? field_storage_r2_f_value[7] : 1'h0;
  assign \readback_array[2] [0] = _031_ ? field_storage_r3_f_value[0] : 1'h0;
  assign \readback_array[2] [1] = _031_ ? field_storage_r3_f_value[1] : 1'h0;
  assign \readback_array[2] [2] = _031_ ? field_storage_r3_f_value[2] : 1'h0;
  assign \readback_array[2] [3] = _031_ ? field_storage_r3_f_value[3] : 1'h0;
  assign \readback_array[2] [4] = _031_ ? field_storage_r3_f_value[4] : 1'h0;
  assign \readback_array[2] [5] = _031_ ? field_storage_r3_f_value[5] : 1'h0;
  assign \readback_array[2] [6] = _031_ ? field_storage_r3_f_value[6] : 1'h0;
  assign \readback_array[2] [7] = _031_ ? field_storage_r3_f_value[7] : 1'h0;
  assign \readback_array[3] [0] = _035_ ? field_storage_r4_f_value[0] : 1'h0;
  assign \readback_array[3] [1] = _035_ ? field_storage_r4_f_value[1] : 1'h0;
  assign \readback_array[3] [2] = _035_ ? field_storage_r4_f_value[2] : 1'h0;
  assign \readback_array[3] [3] = _035_ ? field_storage_r4_f_value[3] : 1'h0;
  assign \readback_array[3] [4] = _035_ ? field_storage_r4_f_value[4] : 1'h0;
  assign \readback_array[3] [5] = _035_ ? field_storage_r4_f_value[5] : 1'h0;
  assign \readback_array[3] [6] = _035_ ? field_storage_r4_f_value[6] : 1'h0;
  assign \readback_array[3] [7] = _035_ ? field_storage_r4_f_value[7] : 1'h0;
  assign \readback_array[4] [0] = hwif_out_r5_f_swmod ? field_storage_r5_f_value[0] : 1'h0;
  assign \readback_array[4] [1] = hwif_out_r5_f_swmod ? field_storage_r5_f_value[1] : 1'h0;
  assign \readback_array[4] [2] = hwif_out_r5_f_swmod ? field_storage_r5_f_value[2] : 1'h0;
  assign \readback_array[4] [3] = hwif_out_r5_f_swmod ? field_storage_r5_f_value[3] : 1'h0;
  assign \readback_array[4] [4] = hwif_out_r5_f_swmod ? field_storage_r5_f_value[4] : 1'h0;
  assign \readback_array[4] [5] = hwif_out_r5_f_swmod ? field_storage_r5_f_value[5] : 1'h0;
  assign \readback_array[4] [6] = hwif_out_r5_f_swmod ? field_storage_r5_f_value[6] : 1'h0;
  assign \readback_array[4] [7] = hwif_out_r5_f_swmod ? field_storage_r5_f_value[7] : 1'h0;
  assign _002_[0] = hwif_in_r5_f_we ? hwif_in_r5_f[0] : 1'hx;
  assign _002_[1] = hwif_in_r5_f_we ? hwif_in_r5_f[1] : 1'hx;
  assign _002_[2] = hwif_in_r5_f_we ? hwif_in_r5_f[2] : 1'hx;
  assign _002_[3] = hwif_in_r5_f_we ? hwif_in_r5_f[3] : 1'hx;
  assign _002_[4] = hwif_in_r5_f_we ? hwif_in_r5_f[4] : 1'hx;
  assign _002_[5] = hwif_in_r5_f_we ? hwif_in_r5_f[5] : 1'hx;
  assign _002_[6] = hwif_in_r5_f_we ? hwif_in_r5_f[6] : 1'hx;
  assign _002_[7] = hwif_in_r5_f_we ? hwif_in_r5_f[7] : 1'hx;
  assign field_combo_r5_f_load_next = hwif_out_r5_f_swmod ? 1'h1 : hwif_in_r5_f_we;
  assign field_combo_r5_f_next[0] = hwif_out_r5_f_swmod ? 1'h0 : _002_[0];
  assign field_combo_r5_f_next[1] = hwif_out_r5_f_swmod ? 1'h0 : _002_[1];
  assign field_combo_r5_f_next[2] = hwif_out_r5_f_swmod ? 1'h0 : _002_[2];
  assign field_combo_r5_f_next[3] = hwif_out_r5_f_swmod ? 1'h0 : _002_[3];
  assign field_combo_r5_f_next[4] = hwif_out_r5_f_swmod ? 1'h0 : _002_[4];
  assign field_combo_r5_f_next[5] = hwif_out_r5_f_swmod ? 1'h0 : _002_[5];
  assign field_combo_r5_f_next[6] = hwif_out_r5_f_swmod ? 1'h0 : _002_[6];
  assign field_combo_r5_f_next[7] = hwif_out_r5_f_swmod ? 1'h0 : _002_[7];
  assign _001_[0] = _000_ ? _039_[0] : 1'hx;
  assign _001_[1] = _000_ ? _039_[1] : 1'hx;
  assign _001_[2] = _000_ ? _039_[2] : 1'hx;
  assign _001_[3] = _000_ ? _039_[3] : 1'hx;
  assign _001_[4] = _000_ ? _039_[4] : 1'hx;
  assign _001_[5] = _000_ ? _039_[5] : 1'hx;
  assign _001_[6] = _000_ ? _039_[6] : 1'hx;
  assign _001_[7] = _000_ ? _039_[7] : 1'hx;
  assign field_combo_r3_f_load_next = _031_ ? 1'h1 : _000_;
  assign field_combo_r3_f_next[0] = _031_ ? 1'h0 : _001_[0];
  assign field_combo_r3_f_next[1] = _031_ ? 1'h0 : _001_[1];
  assign field_combo_r3_f_next[2] = _031_ ? 1'h0 : _001_[2];
  assign field_combo_r3_f_next[3] = _031_ ? 1'h0 : _001_[3];
  assign field_combo_r3_f_next[4] = _031_ ? 1'h0 : _001_[4];
  assign field_combo_r3_f_next[5] = _031_ ? 1'h0 : _001_[5];
  assign field_combo_r3_f_next[6] = _031_ ? 1'h0 : _001_[6];
  assign field_combo_r3_f_next[7] = _031_ ? 1'h0 : _001_[7];
  assign _044_ = ~s_apb_pready;
  assign _045_ = is_active ? _044_ : s_apb_psel;
  assign _037_[7] = ~cpuif_wr_biten[0];
  assign _013_ = ~is_active;
  assign decoded_reg_strb_r1 = cpuif_req & _026_;
  assign decoded_reg_strb_r2 = cpuif_req & _027_;
  assign decoded_reg_strb_r3 = cpuif_req & _028_;
  assign decoded_reg_strb_r4 = cpuif_req & _029_;
  assign decoded_reg_strb_r5 = cpuif_req & _030_;
  assign _003_[0] = field_storage_r2_f_value[0] & _037_[7];
  assign _003_[1] = field_storage_r2_f_value[1] & _037_[7];
  assign _003_[2] = field_storage_r2_f_value[2] & _037_[7];
  assign _003_[3] = field_storage_r2_f_value[3] & _037_[7];
  assign _003_[4] = field_storage_r2_f_value[4] & _037_[7];
  assign _003_[5] = field_storage_r2_f_value[5] & _037_[7];
  assign _003_[6] = field_storage_r2_f_value[6] & _037_[7];
  assign _003_[7] = field_storage_r2_f_value[7] & _037_[7];
  assign _038_[0] = _003_[0] | _004_[0];
  assign _038_[1] = _003_[1] | _004_[1];
  assign _038_[2] = _003_[2] | _004_[2];
  assign _038_[3] = _003_[3] | _004_[3];
  assign _038_[4] = _003_[4] | _004_[4];
  assign _038_[5] = _003_[5] | _004_[5];
  assign _038_[6] = _003_[6] | _004_[6];
  assign _038_[7] = _003_[7] | _004_[7];
  assign _005_[0] = field_storage_r3_f_value[0] & _037_[7];
  assign _005_[1] = field_storage_r3_f_value[1] & _037_[7];
  assign _005_[2] = field_storage_r3_f_value[2] & _037_[7];
  assign _005_[3] = field_storage_r3_f_value[3] & _037_[7];
  assign _005_[4] = field_storage_r3_f_value[4] & _037_[7];
  assign _005_[5] = field_storage_r3_f_value[5] & _037_[7];
  assign _005_[6] = field_storage_r3_f_value[6] & _037_[7];
  assign _005_[7] = field_storage_r3_f_value[7] & _037_[7];
  assign _039_[0] = _005_[0] | _004_[0];
  assign _039_[1] = _005_[1] | _004_[1];
  assign _039_[2] = _005_[2] | _004_[2];
  assign _039_[3] = _005_[3] | _004_[3];
  assign _039_[4] = _005_[4] | _004_[4];
  assign _039_[5] = _005_[5] | _004_[5];
  assign _039_[6] = _005_[6] | _004_[6];
  assign _039_[7] = _005_[7] | _004_[7];
  assign _006_[0] = field_storage_r4_f_value[0] & _037_[7];
  assign _006_[1] = field_storage_r4_f_value[1] & _037_[7];
  assign _006_[2] = field_storage_r4_f_value[2] & _037_[7];
  assign _006_[3] = field_storage_r4_f_value[3] & _037_[7];
  assign _006_[4] = field_storage_r4_f_value[4] & _037_[7];
  assign _006_[5] = field_storage_r4_f_value[5] & _037_[7];
  assign _006_[6] = field_storage_r4_f_value[6] & _037_[7];
  assign _006_[7] = field_storage_r4_f_value[7] & _037_[7];
  assign _004_[0] = cpuif_wr_data[0] & cpuif_wr_biten[0];
  assign _004_[1] = cpuif_wr_data[1] & cpuif_wr_biten[0];
  assign _004_[2] = cpuif_wr_data[2] & cpuif_wr_biten[0];
  assign _004_[3] = cpuif_wr_data[3] & cpuif_wr_biten[0];
  assign _004_[4] = cpuif_wr_data[4] & cpuif_wr_biten[0];
  assign _004_[5] = cpuif_wr_data[5] & cpuif_wr_biten[0];
  assign _004_[6] = cpuif_wr_data[6] & cpuif_wr_biten[0];
  assign _004_[7] = cpuif_wr_data[7] & cpuif_wr_biten[0];
  assign _040_[0] = _006_[0] | _004_[0];
  assign _040_[1] = _006_[1] | _004_[1];
  assign _040_[2] = _006_[2] | _004_[2];
  assign _040_[3] = _006_[3] | _004_[3];
  assign _040_[4] = _006_[4] | _004_[4];
  assign _040_[5] = _006_[5] | _004_[5];
  assign _040_[6] = _006_[6] | _004_[6];
  assign _040_[7] = _006_[7] | _004_[7];
  assign cpuif_wr_ack = cpuif_req & cpuif_req_is_wr;
  assign cpuif_rd_ack = cpuif_req & _036_;
  assign _041_[0] = \readback_array[0] [0] | \readback_array[1] [0];
  assign _041_[1] = \readback_array[0] [1] | \readback_array[1] [1];
  assign _041_[2] = \readback_array[0] [2] | \readback_array[1] [2];
  assign _041_[3] = \readback_array[0] [3] | \readback_array[1] [3];
  assign _041_[4] = \readback_array[0] [4] | \readback_array[1] [4];
  assign _041_[5] = \readback_array[0] [5] | \readback_array[1] [5];
  assign _041_[6] = \readback_array[0] [6] | \readback_array[1] [6];
  assign _041_[7] = \readback_array[0] [7] | \readback_array[1] [7];
  assign _042_[0] = _041_[0] | \readback_array[2] [0];
  assign _042_[1] = _041_[1] | \readback_array[2] [1];
  assign _042_[2] = _041_[2] | \readback_array[2] [2];
  assign _042_[3] = _041_[3] | \readback_array[2] [3];
  assign _042_[4] = _041_[4] | \readback_array[2] [4];
  assign _042_[5] = _041_[5] | \readback_array[2] [5];
  assign _042_[6] = _041_[6] | \readback_array[2] [6];
  assign _042_[7] = _041_[7] | \readback_array[2] [7];
  assign _043_[0] = _042_[0] | \readback_array[3] [0];
  assign _043_[1] = _042_[1] | \readback_array[3] [1];
  assign _043_[2] = _042_[2] | \readback_array[3] [2];
  assign _043_[3] = _042_[3] | \readback_array[3] [3];
  assign _043_[4] = _042_[4] | \readback_array[3] [4];
  assign _043_[5] = _042_[5] | \readback_array[3] [5];
  assign _043_[6] = _042_[6] | \readback_array[3] [6];
  assign _043_[7] = _042_[7] | \readback_array[3] [7];
  assign s_apb_prdata[0] = _043_[0] | \readback_array[4] [0];
  assign s_apb_prdata[1] = _043_[1] | \readback_array[4] [1];
  assign s_apb_prdata[2] = _043_[2] | \readback_array[4] [2];
  assign s_apb_prdata[3] = _043_[3] | \readback_array[4] [3];
  assign s_apb_prdata[4] = _043_[4] | \readback_array[4] [4];
  assign s_apb_prdata[5] = _043_[5] | \readback_array[4] [5];
  assign s_apb_prdata[6] = _043_[6] | \readback_array[4] [6];
  assign s_apb_prdata[7] = _043_[7] | \readback_array[4] [7];
  assign _037_[6:0] = { _037_[7], _037_[7], _037_[7], _037_[7], _037_[7], _037_[7], _037_[7] };
  assign cpuif_rd_data = s_apb_prdata;
  assign cpuif_rd_err = 1'h0;
  assign cpuif_req_masked = cpuif_req;
  assign cpuif_req_stall_rd = 1'h0;
  assign cpuif_req_stall_wr = 1'h0;
  assign cpuif_wr_biten[7:1] = { cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0] };
  assign cpuif_wr_err = 1'h0;
  assign decoded_req = cpuif_req;
  assign decoded_req_is_wr = cpuif_req_is_wr;
  assign decoded_wr_biten = { cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0], cpuif_wr_biten[0] };
  assign decoded_wr_data = cpuif_wr_data;
  assign hwif_out_r1_f_swacc = decoded_reg_strb_r1;
  assign hwif_out_r1_f_swmod = 1'h0;
  assign hwif_out_r2_f = field_storage_r2_f_value;
  assign hwif_out_r3_f = field_storage_r3_f_value;
  assign hwif_out_r4_f = field_storage_r4_f_value;
  assign hwif_out_r4_f_swacc = decoded_reg_strb_r4;
  assign hwif_out_r5_f = field_storage_r5_f_value;
  assign readback_data = s_apb_prdata;
  assign readback_done = cpuif_rd_ack;
  assign readback_err = 1'h0;
  assign readback_external_rd_ack = 1'h0;
  assign s_apb_pslverr = 1'h0;
endmodule
