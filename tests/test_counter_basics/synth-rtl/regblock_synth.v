/* Generated by Yosys 0.57 (git sha1 3aca86049, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module regblock(clk, rst, s_apb_psel, s_apb_pwrite, s_apb_penable, s_apb_pprot, s_apb_paddr, s_apb_pwdata, s_apb_pstrb, s_apb_pready, s_apb_prdata, s_apb_pslverr, hwif_out_simple_intr, hwif_out_simple_implied_up_incrthreshold, hwif_out_simple_implied_up_decrthreshold, hwif_in_simple_implied_up_incr, hwif_out_simple_up_incrthreshold, hwif_out_simple_up_decrthreshold, hwif_in_simple_up_incr, hwif_out_simple_down_incrthreshold, hwif_out_simple_down_decrthreshold
, hwif_in_simple_down_decr, hwif_out_simple_updown, hwif_out_simple_updown_overflow, hwif_out_simple_updown_underflow, hwif_out_simple_updown_incrthreshold, hwif_out_simple_updown_decrthreshold, hwif_in_simple_updown_incr, hwif_in_simple_updown_decr, hwif_out_simple_updown3_incrthreshold, hwif_out_simple_updown3_decrthreshold, hwif_in_simple_updown3_incrvalue, hwif_in_simple_updown3_decrvalue, hwif_out_simple_do_count_up, hwif_out_simple_do_count_up_incrthreshold, hwif_out_simple_do_count_up_decrthreshold, hwif_out_simple_do_count_down, hwif_out_simple_do_count_down_incrthreshold, hwif_out_simple_do_count_down_decrthreshold, hwif_out_wrap_counter_intr);
  input clk;
  wire clk;
  input rst;
  wire rst;
  input s_apb_psel;
  wire s_apb_psel;
  input s_apb_pwrite;
  wire s_apb_pwrite;
  input s_apb_penable;
  wire s_apb_penable;
  input [2:0] s_apb_pprot;
  wire [2:0] s_apb_pprot;
  input [2:0] s_apb_paddr;
  wire [2:0] s_apb_paddr;
  input [31:0] s_apb_pwdata;
  wire [31:0] s_apb_pwdata;
  input [3:0] s_apb_pstrb;
  wire [3:0] s_apb_pstrb;
  output s_apb_pready;
  wire s_apb_pready;
  output [31:0] s_apb_prdata;
  wire [31:0] s_apb_prdata;
  output s_apb_pslverr;
  wire s_apb_pslverr;
  output [0:0] hwif_out_simple_intr;
  wire [0:0] hwif_out_simple_intr;
  output [0:0] hwif_out_simple_implied_up_incrthreshold;
  wire [0:0] hwif_out_simple_implied_up_incrthreshold;
  output [0:0] hwif_out_simple_implied_up_decrthreshold;
  wire [0:0] hwif_out_simple_implied_up_decrthreshold;
  input [0:0] hwif_in_simple_implied_up_incr;
  wire [0:0] hwif_in_simple_implied_up_incr;
  output [0:0] hwif_out_simple_up_incrthreshold;
  wire [0:0] hwif_out_simple_up_incrthreshold;
  output [0:0] hwif_out_simple_up_decrthreshold;
  wire [0:0] hwif_out_simple_up_decrthreshold;
  input [0:0] hwif_in_simple_up_incr;
  wire [0:0] hwif_in_simple_up_incr;
  output [0:0] hwif_out_simple_down_incrthreshold;
  wire [0:0] hwif_out_simple_down_incrthreshold;
  output [0:0] hwif_out_simple_down_decrthreshold;
  wire [0:0] hwif_out_simple_down_decrthreshold;
  input [0:0] hwif_in_simple_down_decr;
  wire [0:0] hwif_in_simple_down_decr;
  output [3:0] hwif_out_simple_updown;
  wire [3:0] hwif_out_simple_updown;
  output [0:0] hwif_out_simple_updown_overflow;
  wire [0:0] hwif_out_simple_updown_overflow;
  output [0:0] hwif_out_simple_updown_underflow;
  wire [0:0] hwif_out_simple_updown_underflow;
  output [0:0] hwif_out_simple_updown_incrthreshold;
  wire [0:0] hwif_out_simple_updown_incrthreshold;
  output [0:0] hwif_out_simple_updown_decrthreshold;
  wire [0:0] hwif_out_simple_updown_decrthreshold;
  input [0:0] hwif_in_simple_updown_incr;
  wire [0:0] hwif_in_simple_updown_incr;
  input [0:0] hwif_in_simple_updown_decr;
  wire [0:0] hwif_in_simple_updown_decr;
  output [0:0] hwif_out_simple_updown3_incrthreshold;
  wire [0:0] hwif_out_simple_updown3_incrthreshold;
  output [0:0] hwif_out_simple_updown3_decrthreshold;
  wire [0:0] hwif_out_simple_updown3_decrthreshold;
  input [3:0] hwif_in_simple_updown3_incrvalue;
  wire [3:0] hwif_in_simple_updown3_incrvalue;
  input [3:0] hwif_in_simple_updown3_decrvalue;
  wire [3:0] hwif_in_simple_updown3_decrvalue;
  output [0:0] hwif_out_simple_do_count_up;
  wire [0:0] hwif_out_simple_do_count_up;
  output [0:0] hwif_out_simple_do_count_up_incrthreshold;
  wire [0:0] hwif_out_simple_do_count_up_incrthreshold;
  output [0:0] hwif_out_simple_do_count_up_decrthreshold;
  wire [0:0] hwif_out_simple_do_count_up_decrthreshold;
  output [0:0] hwif_out_simple_do_count_down;
  wire [0:0] hwif_out_simple_do_count_down;
  output [0:0] hwif_out_simple_do_count_down_incrthreshold;
  wire [0:0] hwif_out_simple_do_count_down_incrthreshold;
  output [0:0] hwif_out_simple_do_count_down_decrthreshold;
  wire [0:0] hwif_out_simple_do_count_down_decrthreshold;
  output [0:0] hwif_out_wrap_counter_intr;
  wire [0:0] hwif_out_wrap_counter_intr;
  wire _000_;
  wire [1:0] _001_;
  wire [1:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire [1:0] _012_;
  wire [1:0] _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire [1:0] _021_;
  wire [1:0] _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire [3:0] _027_;
  wire [3:0] _028_;
  wire [3:0] _029_;
  wire [3:0] _030_;
  wire [3:0] _031_;
  wire [3:0] _032_;
  wire [4:0] _033_;
  wire [4:0] _034_;
  wire [4:0] _035_;
  wire [3:0] _036_;
  wire [3:0] _037_;
  wire [3:0] _038_;
  wire [4:0] _039_;
  wire [4:0] _040_;
  wire [4:0] _041_;
  wire [4:0] _042_;
  wire [3:0] _043_;
  wire [3:0] _044_;
  wire [3:0] _045_;
  wire [3:0] _046_;
  wire [7:0] _047_;
  wire [7:0] _048_;
  wire [7:0] _049_;
  wire [7:0] _050_;
  wire [7:0] _051_;
  wire [7:0] _052_;
  wire [7:0] _053_;
  wire [7:0] _054_;
  wire [4:0] _055_;
  wire [4:0] _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire [4:0] _060_;
  wire [4:0] _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire [3:0] _065_;
  wire [3:0] _066_;
  wire [3:0] _067_;
  wire [3:0] _068_;
  wire [3:0] _069_;
  wire [3:0] _070_;
  wire [3:0] _071_;
  wire [3:0] _072_;
  wire [3:0] _073_;
  wire [3:0] _074_;
  wire [3:0] _075_;
  wire [3:0] _076_;
  wire [3:0] _077_;
  wire [3:0] _078_;
  wire [3:0] _079_;
  wire [3:0] _080_;
  wire [3:0] _081_;
  wire [3:0] _082_;
  wire [3:0] _083_;
  wire [3:0] _084_;
  wire [3:0] _085_;
  wire [3:0] _086_;
  wire [3:0] _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire [2:0] cpuif_addr;
  wire cpuif_rd_ack;
  wire [31:0] cpuif_rd_data;
  wire cpuif_rd_err;
  reg cpuif_req;
  reg cpuif_req_is_wr;
  wire cpuif_req_masked;
  wire cpuif_req_stall_rd;
  wire cpuif_req_stall_wr;
  wire cpuif_wr_ack;
  wire [31:0] cpuif_wr_biten;
  wire [31:0] cpuif_wr_data;
  wire cpuif_wr_err;
  wire [0:0] decoded_reg_strb_simple;
  wire [0:0] decoded_reg_strb_wrap_counter;
  wire decoded_req;
  wire decoded_req_is_wr;
  wire [31:0] decoded_wr_biten;
  wire [31:0] decoded_wr_data;
  wire field_combo_simple_do_count_down_load_next;
  wire field_combo_simple_do_count_up_load_next;
  wire field_combo_simple_down_load_next;
  wire field_combo_simple_implied_up_load_next;
  wire field_combo_simple_step_load_next;
  wire field_combo_simple_up_load_next;
  wire field_combo_simple_updown2_load_next;
  wire [3:0] field_combo_simple_updown2_next;
  wire field_combo_simple_updown3_load_next;
  wire [3:0] field_combo_simple_updown3_next;
  wire field_combo_simple_updown3_overflow;
  wire field_combo_simple_updown3_underflow;
  wire field_combo_simple_updown4_load_next;
  wire [3:0] field_combo_simple_updown4_next;
  wire field_combo_simple_updown_load_next;
  wire [3:0] field_combo_simple_updown_next;
  wire field_combo_simple_updown_overflow;
  wire field_combo_simple_updown_underflow;
  wire field_combo_wrap_counter_overflow_count_load_next;
  wire [7:0] field_combo_wrap_counter_overflow_count_next;
  wire field_combo_wrap_counter_underflow_count_load_next;
  wire [7:0] field_combo_wrap_counter_underflow_count_next;
  reg [0:0] field_storage_simple_do_count_down_value;
  reg [0:0] field_storage_simple_do_count_up_value;
  reg [3:0] field_storage_simple_down_value;
  reg [3:0] field_storage_simple_implied_up_value;
  reg [1:0] field_storage_simple_step_value;
  reg [3:0] field_storage_simple_up_value;
  reg [3:0] field_storage_simple_updown2_value;
  reg [3:0] field_storage_simple_updown3_value;
  reg [3:0] field_storage_simple_updown4_value;
  reg [3:0] field_storage_simple_updown_value;
  reg [7:0] field_storage_wrap_counter_overflow_count_value;
  reg [7:0] field_storage_wrap_counter_underflow_count_value;
  reg is_active;
  wire [31:0] \readback_array[0] ;
  wire [31:0] \readback_array[1] ;
  wire [31:0] readback_data;
  wire readback_done;
  wire readback_err;
  wire readback_external_rd_ack;
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_overflow_count_value[1] <= 1'h0;
    else if (field_combo_wrap_counter_overflow_count_load_next) field_storage_wrap_counter_overflow_count_value[1] <= field_combo_wrap_counter_overflow_count_next[1];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_overflow_count_value[2] <= 1'h0;
    else if (field_combo_wrap_counter_overflow_count_load_next) field_storage_wrap_counter_overflow_count_value[2] <= field_combo_wrap_counter_overflow_count_next[2];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_overflow_count_value[3] <= 1'h0;
    else if (field_combo_wrap_counter_overflow_count_load_next) field_storage_wrap_counter_overflow_count_value[3] <= field_combo_wrap_counter_overflow_count_next[3];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_overflow_count_value[4] <= 1'h0;
    else if (field_combo_wrap_counter_overflow_count_load_next) field_storage_wrap_counter_overflow_count_value[4] <= field_combo_wrap_counter_overflow_count_next[4];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_overflow_count_value[5] <= 1'h0;
    else if (field_combo_wrap_counter_overflow_count_load_next) field_storage_wrap_counter_overflow_count_value[5] <= field_combo_wrap_counter_overflow_count_next[5];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_overflow_count_value[6] <= 1'h0;
    else if (field_combo_wrap_counter_overflow_count_load_next) field_storage_wrap_counter_overflow_count_value[6] <= field_combo_wrap_counter_overflow_count_next[6];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_overflow_count_value[7] <= 1'h0;
    else if (field_combo_wrap_counter_overflow_count_load_next) field_storage_wrap_counter_overflow_count_value[7] <= field_combo_wrap_counter_overflow_count_next[7];
  always @(posedge clk)
    if (_009_) field_storage_simple_do_count_down_value <= 1'h0;
    else field_storage_simple_do_count_down_value <= _024_;
  reg \cpuif_addr_reg[2] ;
  always @(posedge clk)
    if (rst) \cpuif_addr_reg[2]  <= 1'h0;
    else if (_007_) \cpuif_addr_reg[2]  <= s_apb_paddr[2];
  assign cpuif_addr[2] = \cpuif_addr_reg[2] ;
  always @(posedge clk)
    if (_009_) field_storage_simple_do_count_up_value <= 1'h0;
    else field_storage_simple_do_count_up_value <= _023_;
  always @(posedge clk)
    if (rst) field_storage_simple_updown4_value[0] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown4_value[0] <= field_combo_simple_updown4_next[0];
  always @(posedge clk)
    if (rst) field_storage_simple_updown4_value[1] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown4_value[1] <= field_combo_simple_updown4_next[1];
  always @(posedge clk)
    if (rst) field_storage_simple_updown4_value[2] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown4_value[2] <= field_combo_simple_updown4_next[2];
  always @(posedge clk)
    if (rst) field_storage_simple_updown4_value[3] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown4_value[3] <= field_combo_simple_updown4_next[3];
  always @(posedge clk)
    if (rst) field_storage_simple_updown3_value[0] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown3_value[0] <= field_combo_simple_updown3_next[0];
  always @(posedge clk)
    if (rst) field_storage_simple_updown3_value[1] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown3_value[1] <= field_combo_simple_updown3_next[1];
  always @(posedge clk)
    if (rst) field_storage_simple_updown3_value[2] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown3_value[2] <= field_combo_simple_updown3_next[2];
  always @(posedge clk)
    if (rst) field_storage_simple_updown3_value[3] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown3_value[3] <= field_combo_simple_updown3_next[3];
  always @(posedge clk)
    if (rst) field_storage_simple_updown2_value[0] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown2_value[0] <= field_combo_simple_updown2_next[0];
  always @(posedge clk)
    if (rst) field_storage_simple_updown2_value[1] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown2_value[1] <= field_combo_simple_updown2_next[1];
  always @(posedge clk)
    if (rst) field_storage_simple_updown2_value[2] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown2_value[2] <= field_combo_simple_updown2_next[2];
  always @(posedge clk)
    if (rst) field_storage_simple_updown2_value[3] <= 1'h0;
    else if (field_combo_simple_updown2_load_next) field_storage_simple_updown2_value[3] <= field_combo_simple_updown2_next[3];
  always @(posedge clk)
    if (rst) field_storage_simple_updown_value[0] <= 1'h0;
    else if (field_combo_simple_updown_load_next) field_storage_simple_updown_value[0] <= field_combo_simple_updown_next[0];
  always @(posedge clk)
    if (rst) field_storage_simple_updown_value[1] <= 1'h0;
    else if (field_combo_simple_updown_load_next) field_storage_simple_updown_value[1] <= field_combo_simple_updown_next[1];
  always @(posedge clk)
    if (rst) field_storage_simple_updown_value[2] <= 1'h0;
    else if (field_combo_simple_updown_load_next) field_storage_simple_updown_value[2] <= field_combo_simple_updown_next[2];
  always @(posedge clk)
    if (rst) field_storage_simple_updown_value[3] <= 1'h0;
    else if (field_combo_simple_updown_load_next) field_storage_simple_updown_value[3] <= field_combo_simple_updown_next[3];
  always @(posedge clk)
    if (rst) field_storage_simple_up_value[0] <= 1'h1;
    else if (hwif_in_simple_up_incr) field_storage_simple_up_value[0] <= _031_[0];
  always @(posedge clk)
    if (rst) field_storage_simple_up_value[1] <= 1'h0;
    else if (hwif_in_simple_up_incr) field_storage_simple_up_value[1] <= _032_[1];
  always @(posedge clk)
    if (rst) field_storage_simple_up_value[2] <= 1'h1;
    else if (hwif_in_simple_up_incr) field_storage_simple_up_value[2] <= _032_[2];
  always @(posedge clk)
    if (rst) field_storage_simple_up_value[3] <= 1'h1;
    else if (hwif_in_simple_up_incr) field_storage_simple_up_value[3] <= _032_[3];
  always @(posedge clk)
    if (rst) field_storage_simple_step_value[0] <= 1'h0;
    else if (field_combo_simple_step_load_next) field_storage_simple_step_value[0] <= _022_[0];
  always @(posedge clk)
    if (rst) field_storage_simple_step_value[1] <= 1'h0;
    else if (field_combo_simple_step_load_next) field_storage_simple_step_value[1] <= _022_[1];
  always @(posedge clk)
    if (_008_) cpuif_req <= 1'h0;
    else if (s_apb_psel) cpuif_req <= 1'h1;
  always @(posedge clk)
    if (rst) cpuif_req_is_wr <= 1'h0;
    else if (_007_) cpuif_req_is_wr <= s_apb_pwrite;
  reg \cpuif_wr_data_reg[28] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[28]  <= 1'h0;
    else if (_007_) \cpuif_wr_data_reg[28]  <= s_apb_pwdata[28];
  assign cpuif_wr_data[28] = \cpuif_wr_data_reg[28] ;
  reg \cpuif_wr_data_reg[29] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[29]  <= 1'h0;
    else if (_007_) \cpuif_wr_data_reg[29]  <= s_apb_pwdata[29];
  assign cpuif_wr_data[29] = \cpuif_wr_data_reg[29] ;
  reg \cpuif_wr_data_reg[30] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[30]  <= 1'h0;
    else if (_007_) \cpuif_wr_data_reg[30]  <= s_apb_pwdata[30];
  assign cpuif_wr_data[30] = \cpuif_wr_data_reg[30] ;
  reg \cpuif_wr_data_reg[31] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[31]  <= 1'h0;
    else if (_007_) \cpuif_wr_data_reg[31]  <= s_apb_pwdata[31];
  assign cpuif_wr_data[31] = \cpuif_wr_data_reg[31] ;
  always @(posedge clk)
    if (rst) field_storage_simple_implied_up_value[0] <= 1'h1;
    else if (hwif_in_simple_implied_up_incr) field_storage_simple_implied_up_value[0] <= _028_[0];
  always @(posedge clk)
    if (rst) field_storage_simple_implied_up_value[1] <= 1'h0;
    else if (hwif_in_simple_implied_up_incr) field_storage_simple_implied_up_value[1] <= _029_[1];
  always @(posedge clk)
    if (rst) field_storage_simple_implied_up_value[2] <= 1'h1;
    else if (hwif_in_simple_implied_up_incr) field_storage_simple_implied_up_value[2] <= _029_[2];
  always @(posedge clk)
    if (rst) field_storage_simple_implied_up_value[3] <= 1'h1;
    else if (hwif_in_simple_implied_up_incr) field_storage_simple_implied_up_value[3] <= _029_[3];
  always @(posedge clk)
    if (rst) is_active <= 1'h0;
    else is_active <= _026_;
  always @(posedge clk)
    if (rst) field_storage_simple_down_value[0] <= 1'h0;
    else if (hwif_in_simple_down_decr) field_storage_simple_down_value[0] <= _077_[0];
  always @(posedge clk)
    if (rst) field_storage_simple_down_value[1] <= 1'h0;
    else if (hwif_in_simple_down_decr) field_storage_simple_down_value[1] <= _077_[1];
  always @(posedge clk)
    if (rst) field_storage_simple_down_value[2] <= 1'h1;
    else if (hwif_in_simple_down_decr) field_storage_simple_down_value[2] <= _077_[2];
  always @(posedge clk)
    if (rst) field_storage_simple_down_value[3] <= 1'h0;
    else if (hwif_in_simple_down_decr) field_storage_simple_down_value[3] <= _077_[3];
  reg \cpuif_wr_biten_reg[30] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[30]  <= 1'h0;
    else if (_007_) \cpuif_wr_biten_reg[30]  <= s_apb_pstrb[3];
  assign cpuif_wr_biten[30] = \cpuif_wr_biten_reg[30] ;
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_underflow_count_value[0] <= 1'h0;
    else if (field_combo_wrap_counter_underflow_count_load_next) field_storage_wrap_counter_underflow_count_value[0] <= field_combo_wrap_counter_underflow_count_next[0];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_underflow_count_value[1] <= 1'h0;
    else if (field_combo_wrap_counter_underflow_count_load_next) field_storage_wrap_counter_underflow_count_value[1] <= field_combo_wrap_counter_underflow_count_next[1];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_underflow_count_value[2] <= 1'h0;
    else if (field_combo_wrap_counter_underflow_count_load_next) field_storage_wrap_counter_underflow_count_value[2] <= field_combo_wrap_counter_underflow_count_next[2];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_underflow_count_value[3] <= 1'h0;
    else if (field_combo_wrap_counter_underflow_count_load_next) field_storage_wrap_counter_underflow_count_value[3] <= field_combo_wrap_counter_underflow_count_next[3];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_underflow_count_value[4] <= 1'h0;
    else if (field_combo_wrap_counter_underflow_count_load_next) field_storage_wrap_counter_underflow_count_value[4] <= field_combo_wrap_counter_underflow_count_next[4];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_underflow_count_value[5] <= 1'h0;
    else if (field_combo_wrap_counter_underflow_count_load_next) field_storage_wrap_counter_underflow_count_value[5] <= field_combo_wrap_counter_underflow_count_next[5];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_underflow_count_value[6] <= 1'h0;
    else if (field_combo_wrap_counter_underflow_count_load_next) field_storage_wrap_counter_underflow_count_value[6] <= field_combo_wrap_counter_underflow_count_next[6];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_underflow_count_value[7] <= 1'h0;
    else if (field_combo_wrap_counter_underflow_count_load_next) field_storage_wrap_counter_underflow_count_value[7] <= field_combo_wrap_counter_underflow_count_next[7];
  always @(posedge clk)
    if (rst) field_storage_wrap_counter_overflow_count_value[0] <= 1'h0;
    else if (field_combo_wrap_counter_overflow_count_load_next) field_storage_wrap_counter_overflow_count_value[0] <= field_combo_wrap_counter_overflow_count_next[0];
  assign _037_[1] = ~field_storage_simple_updown2_value[1];
  assign _037_[0] = ~field_storage_simple_updown2_value[0];
  assign _080_[3] = ~_078_[3];
  assign _080_[2] = ~_078_[2];
  assign _085_[3] = ~_082_[3];
  assign _085_[2] = ~_082_[2];
  assign _061_[4] = ~_039_[3];
  assign _049_[0] = ~_047_[0];
  assign _053_[0] = ~_051_[0];
  assign _034_[0] = ~field_storage_simple_updown_value[0];
  assign _056_[4] = ~_033_[3];
  assign _086_[0] = ~_085_[0];
  assign _081_[0] = ~_078_[0];
  assign _067_[2] = ~_065_[2];
  assign _067_[3] = ~_065_[3];
  assign _067_[1] = ~_065_[1];
  assign _073_[0] = ~_072_[0];
  assign _068_[0] = ~_065_[0];
  assign _077_[0] = ~field_storage_simple_down_value[0];
  assign _031_[0] = ~field_storage_simple_up_value[0];
  assign _028_[0] = ~field_storage_simple_implied_up_value[0];
  assign _076_[1] = ~field_storage_simple_down_value[1];
  assign _076_[2] = ~field_storage_simple_down_value[2];
  assign _076_[3] = ~field_storage_simple_down_value[3];
  assign _060_[1] = _040_[0] & _041_[1];
  assign _012_[1] = _041_[2] & _041_[3];
  assign _063_ = _060_[3] & _061_[4];
  assign _055_[1] = _034_[0] & _035_[1];
  assign _013_[1] = _035_[2] & _035_[3];
  assign _055_[3] = _055_[1] & _013_[1];
  assign _058_ = _055_[3] & _056_[4];
  assign _007_ = s_apb_psel & _010_;
  assign _008_ = rst | is_active;
  assign _009_ = rst | _011_;
  assign _014_ = ~cpuif_addr[2];
  assign _018_ = ~cpuif_req_is_wr;
  assign s_apb_pready = cpuif_rd_ack | cpuif_wr_ack;
  assign field_combo_simple_step_load_next = decoded_reg_strb_simple & cpuif_req_is_wr;
  assign _017_ = decoded_reg_strb_simple & _018_;
  assign _000_ = decoded_reg_strb_wrap_counter & _018_;
  assign \readback_array[0] [0] = _017_ ? field_storage_simple_implied_up_value[0] : 1'h0;
  assign \readback_array[0] [1] = _017_ ? field_storage_simple_implied_up_value[1] : 1'h0;
  assign \readback_array[0] [2] = _017_ ? field_storage_simple_implied_up_value[2] : 1'h0;
  assign \readback_array[0] [3] = _017_ ? field_storage_simple_implied_up_value[3] : 1'h0;
  assign \readback_array[0] [4] = _017_ ? field_storage_simple_up_value[0] : 1'h0;
  assign \readback_array[0] [5] = _017_ ? field_storage_simple_up_value[1] : 1'h0;
  assign \readback_array[0] [6] = _017_ ? field_storage_simple_up_value[2] : 1'h0;
  assign \readback_array[0] [7] = _017_ ? field_storage_simple_up_value[3] : 1'h0;
  assign \readback_array[0] [8] = _017_ ? field_storage_simple_down_value[0] : 1'h0;
  assign \readback_array[0] [9] = _017_ ? field_storage_simple_down_value[1] : 1'h0;
  assign \readback_array[0] [10] = _017_ ? field_storage_simple_down_value[2] : 1'h0;
  assign \readback_array[0] [11] = _017_ ? field_storage_simple_down_value[3] : 1'h0;
  assign \readback_array[0] [12] = _017_ ? field_storage_simple_updown_value[0] : 1'h0;
  assign \readback_array[0] [13] = _017_ ? field_storage_simple_updown_value[1] : 1'h0;
  assign \readback_array[0] [14] = _017_ ? field_storage_simple_updown_value[2] : 1'h0;
  assign \readback_array[0] [15] = _017_ ? field_storage_simple_updown_value[3] : 1'h0;
  assign \readback_array[0] [16] = _017_ ? field_storage_simple_updown2_value[0] : 1'h0;
  assign \readback_array[0] [17] = _017_ ? field_storage_simple_updown2_value[1] : 1'h0;
  assign \readback_array[0] [18] = _017_ ? field_storage_simple_updown2_value[2] : 1'h0;
  assign \readback_array[0] [19] = _017_ ? field_storage_simple_updown2_value[3] : 1'h0;
  assign \readback_array[0] [20] = _017_ ? field_storage_simple_updown3_value[0] : 1'h0;
  assign \readback_array[0] [21] = _017_ ? field_storage_simple_updown3_value[1] : 1'h0;
  assign \readback_array[0] [22] = _017_ ? field_storage_simple_updown3_value[2] : 1'h0;
  assign \readback_array[0] [23] = _017_ ? field_storage_simple_updown3_value[3] : 1'h0;
  assign \readback_array[0] [24] = _017_ ? field_storage_simple_updown4_value[0] : 1'h0;
  assign \readback_array[0] [25] = _017_ ? field_storage_simple_updown4_value[1] : 1'h0;
  assign \readback_array[0] [26] = _017_ ? field_storage_simple_updown4_value[2] : 1'h0;
  assign \readback_array[0] [27] = _017_ ? field_storage_simple_updown4_value[3] : 1'h0;
  assign \readback_array[0] [28] = _017_ ? field_storage_simple_step_value[0] : 1'h0;
  assign \readback_array[0] [29] = _017_ ? field_storage_simple_step_value[1] : 1'h0;
  assign \readback_array[1] [0] = _000_ ? field_storage_wrap_counter_overflow_count_value[0] : 1'h0;
  assign \readback_array[1] [1] = _000_ ? field_storage_wrap_counter_overflow_count_value[1] : 1'h0;
  assign \readback_array[1] [2] = _000_ ? field_storage_wrap_counter_overflow_count_value[2] : 1'h0;
  assign \readback_array[1] [3] = _000_ ? field_storage_wrap_counter_overflow_count_value[3] : 1'h0;
  assign \readback_array[1] [4] = _000_ ? field_storage_wrap_counter_overflow_count_value[4] : 1'h0;
  assign \readback_array[1] [5] = _000_ ? field_storage_wrap_counter_overflow_count_value[5] : 1'h0;
  assign \readback_array[1] [6] = _000_ ? field_storage_wrap_counter_overflow_count_value[6] : 1'h0;
  assign \readback_array[1] [7] = _000_ ? field_storage_wrap_counter_overflow_count_value[7] : 1'h0;
  assign \readback_array[1] [8] = _000_ ? field_storage_wrap_counter_underflow_count_value[0] : 1'h0;
  assign \readback_array[1] [9] = _000_ ? field_storage_wrap_counter_underflow_count_value[1] : 1'h0;
  assign \readback_array[1] [10] = _000_ ? field_storage_wrap_counter_underflow_count_value[2] : 1'h0;
  assign \readback_array[1] [11] = _000_ ? field_storage_wrap_counter_underflow_count_value[3] : 1'h0;
  assign \readback_array[1] [12] = _000_ ? field_storage_wrap_counter_underflow_count_value[4] : 1'h0;
  assign \readback_array[1] [13] = _000_ ? field_storage_wrap_counter_underflow_count_value[5] : 1'h0;
  assign \readback_array[1] [14] = _000_ ? field_storage_wrap_counter_underflow_count_value[6] : 1'h0;
  assign \readback_array[1] [15] = _000_ ? field_storage_wrap_counter_underflow_count_value[7] : 1'h0;
  assign field_combo_wrap_counter_underflow_count_load_next = field_combo_simple_updown3_underflow ? 1'h1 : _000_;
  assign field_combo_wrap_counter_underflow_count_next[0] = field_combo_simple_updown3_underflow ? _053_[0] : _051_[0];
  assign field_combo_wrap_counter_underflow_count_next[1] = field_combo_simple_updown3_underflow ? _054_[1] : _051_[1];
  assign field_combo_wrap_counter_underflow_count_next[2] = field_combo_simple_updown3_underflow ? _054_[2] : _051_[2];
  assign field_combo_wrap_counter_underflow_count_next[3] = field_combo_simple_updown3_underflow ? _054_[3] : _051_[3];
  assign field_combo_wrap_counter_underflow_count_next[4] = field_combo_simple_updown3_underflow ? _054_[4] : _051_[4];
  assign field_combo_wrap_counter_underflow_count_next[5] = field_combo_simple_updown3_underflow ? _054_[5] : _051_[5];
  assign field_combo_wrap_counter_underflow_count_next[6] = field_combo_simple_updown3_underflow ? _054_[6] : _051_[6];
  assign field_combo_wrap_counter_underflow_count_next[7] = field_combo_simple_updown3_underflow ? _054_[7] : _051_[7];
  assign _051_[0] = _000_ ? 1'h0 : field_storage_wrap_counter_underflow_count_value[0];
  assign _051_[1] = _000_ ? 1'h0 : field_storage_wrap_counter_underflow_count_value[1];
  assign _051_[2] = _000_ ? 1'h0 : field_storage_wrap_counter_underflow_count_value[2];
  assign _051_[3] = _000_ ? 1'h0 : field_storage_wrap_counter_underflow_count_value[3];
  assign _051_[4] = _000_ ? 1'h0 : field_storage_wrap_counter_underflow_count_value[4];
  assign _051_[5] = _000_ ? 1'h0 : field_storage_wrap_counter_underflow_count_value[5];
  assign _051_[6] = _000_ ? 1'h0 : field_storage_wrap_counter_underflow_count_value[6];
  assign _051_[7] = _000_ ? 1'h0 : field_storage_wrap_counter_underflow_count_value[7];
  assign field_combo_wrap_counter_overflow_count_load_next = field_combo_simple_updown3_overflow ? 1'h1 : _000_;
  assign field_combo_wrap_counter_overflow_count_next[0] = field_combo_simple_updown3_overflow ? _049_[0] : _047_[0];
  assign field_combo_wrap_counter_overflow_count_next[1] = field_combo_simple_updown3_overflow ? _050_[1] : _047_[1];
  assign field_combo_wrap_counter_overflow_count_next[2] = field_combo_simple_updown3_overflow ? _050_[2] : _047_[2];
  assign field_combo_wrap_counter_overflow_count_next[3] = field_combo_simple_updown3_overflow ? _050_[3] : _047_[3];
  assign field_combo_wrap_counter_overflow_count_next[4] = field_combo_simple_updown3_overflow ? _050_[4] : _047_[4];
  assign field_combo_wrap_counter_overflow_count_next[5] = field_combo_simple_updown3_overflow ? _050_[5] : _047_[5];
  assign field_combo_wrap_counter_overflow_count_next[6] = field_combo_simple_updown3_overflow ? _050_[6] : _047_[6];
  assign field_combo_wrap_counter_overflow_count_next[7] = field_combo_simple_updown3_overflow ? _050_[7] : _047_[7];
  assign _047_[0] = _000_ ? 1'h0 : field_storage_wrap_counter_overflow_count_value[0];
  assign _047_[1] = _000_ ? 1'h0 : field_storage_wrap_counter_overflow_count_value[1];
  assign _047_[2] = _000_ ? 1'h0 : field_storage_wrap_counter_overflow_count_value[2];
  assign _047_[3] = _000_ ? 1'h0 : field_storage_wrap_counter_overflow_count_value[3];
  assign _047_[4] = _000_ ? 1'h0 : field_storage_wrap_counter_overflow_count_value[4];
  assign _047_[5] = _000_ ? 1'h0 : field_storage_wrap_counter_overflow_count_value[5];
  assign _047_[6] = _000_ ? 1'h0 : field_storage_wrap_counter_overflow_count_value[6];
  assign _047_[7] = _000_ ? 1'h0 : field_storage_wrap_counter_overflow_count_value[7];
  assign field_combo_simple_updown4_next[0] = field_storage_simple_do_count_down_value ? _086_[0] : _082_[0];
  assign field_combo_simple_updown4_next[1] = field_storage_simple_do_count_down_value ? _086_[1] : _082_[1];
  assign field_combo_simple_updown4_next[2] = field_storage_simple_do_count_down_value ? _086_[2] : _082_[2];
  assign field_combo_simple_updown4_next[3] = field_storage_simple_do_count_down_value ? _086_[3] : _082_[3];
  assign _082_[0] = field_storage_simple_do_count_up_value ? _044_[0] : field_storage_simple_updown4_value[0];
  assign _082_[1] = field_storage_simple_do_count_up_value ? _045_[1] : field_storage_simple_updown4_value[1];
  assign _082_[2] = field_storage_simple_do_count_up_value ? _045_[2] : field_storage_simple_updown4_value[2];
  assign _082_[3] = field_storage_simple_do_count_up_value ? _045_[3] : field_storage_simple_updown4_value[3];
  assign field_combo_simple_updown3_next[0] = field_storage_simple_do_count_down_value ? _073_[0] : _069_[0];
  assign field_combo_simple_updown3_next[1] = field_storage_simple_do_count_down_value ? _073_[1] : _069_[1];
  assign field_combo_simple_updown3_next[2] = field_storage_simple_do_count_down_value ? _073_[2] : _069_[2];
  assign field_combo_simple_updown3_next[3] = field_storage_simple_do_count_down_value ? _073_[3] : _069_[3];
  assign field_combo_simple_updown3_underflow = field_storage_simple_do_count_down_value ? _020_ : 1'h0;
  assign _069_[0] = field_storage_simple_do_count_up_value ? _040_[0] : field_storage_simple_updown3_value[0];
  assign _069_[1] = field_storage_simple_do_count_up_value ? _041_[1] : field_storage_simple_updown3_value[1];
  assign _069_[2] = field_storage_simple_do_count_up_value ? _041_[2] : field_storage_simple_updown3_value[2];
  assign _069_[3] = field_storage_simple_do_count_up_value ? _041_[3] : field_storage_simple_updown3_value[3];
  assign field_combo_simple_updown3_overflow = field_storage_simple_do_count_up_value ? _016_ : 1'h0;
  assign field_combo_simple_updown2_load_next = field_storage_simple_do_count_down_value ? 1'h1 : field_storage_simple_do_count_up_value;
  assign field_combo_simple_updown2_next[0] = field_storage_simple_do_count_down_value ? _081_[0] : _078_[0];
  assign field_combo_simple_updown2_next[1] = field_storage_simple_do_count_down_value ? _081_[1] : _078_[1];
  assign field_combo_simple_updown2_next[2] = field_storage_simple_do_count_down_value ? _081_[2] : _078_[2];
  assign field_combo_simple_updown2_next[3] = field_storage_simple_do_count_down_value ? _081_[3] : _078_[3];
  assign _078_[0] = field_storage_simple_do_count_up_value ? _037_[0] : field_storage_simple_updown2_value[0];
  assign _078_[1] = field_storage_simple_do_count_up_value ? _038_[1] : field_storage_simple_updown2_value[1];
  assign _078_[2] = field_storage_simple_do_count_up_value ? _038_[2] : field_storage_simple_updown2_value[2];
  assign _078_[3] = field_storage_simple_do_count_up_value ? _038_[3] : field_storage_simple_updown2_value[3];
  assign field_combo_simple_updown_load_next = hwif_in_simple_updown_decr ? 1'h1 : hwif_in_simple_updown_incr;
  assign field_combo_simple_updown_next[0] = hwif_in_simple_updown_decr ? _068_[0] : _065_[0];
  assign field_combo_simple_updown_next[1] = hwif_in_simple_updown_decr ? _068_[1] : _065_[1];
  assign field_combo_simple_updown_next[2] = hwif_in_simple_updown_decr ? _068_[2] : _065_[2];
  assign field_combo_simple_updown_next[3] = hwif_in_simple_updown_decr ? _068_[3] : _065_[3];
  assign hwif_out_simple_updown_underflow = hwif_in_simple_updown_decr ? _019_ : 1'h0;
  assign _065_[0] = hwif_in_simple_updown_incr ? _034_[0] : field_storage_simple_updown_value[0];
  assign _065_[1] = hwif_in_simple_updown_incr ? _035_[1] : field_storage_simple_updown_value[1];
  assign _065_[2] = hwif_in_simple_updown_incr ? _035_[2] : field_storage_simple_updown_value[2];
  assign _065_[3] = hwif_in_simple_updown_incr ? _035_[3] : field_storage_simple_updown_value[3];
  assign hwif_out_simple_updown_overflow = hwif_in_simple_updown_incr ? _015_ : 1'h0;
  assign _025_ = ~s_apb_pready;
  assign _026_ = is_active ? _025_ : s_apb_psel;
  assign _020_ = ~_071_[3];
  assign _016_ = ~_064_;
  assign _062_ = ~_060_[4];
  assign _019_ = ~_066_[3];
  assign _015_ = ~_059_;
  assign _057_ = ~_055_[4];
  assign _083_[0] = ~field_storage_simple_step_value[0];
  assign _083_[1] = ~field_storage_simple_step_value[1];
  assign _070_[0] = ~hwif_in_simple_updown3_decrvalue[0];
  assign _070_[1] = ~hwif_in_simple_updown3_decrvalue[1];
  assign _070_[2] = ~hwif_in_simple_updown3_decrvalue[2];
  assign _070_[3] = ~hwif_in_simple_updown3_decrvalue[3];
  assign _021_[1] = ~cpuif_wr_biten[30];
  assign _010_ = ~is_active;
  assign _011_ = ~field_combo_simple_step_load_next;
  assign _064_ = _062_ | _063_;
  assign _059_ = _057_ | _058_;
  assign _054_[1] = _051_[1] ^ _051_[0];
  assign _054_[2] = _051_[2] ^ _052_[1];
  assign _054_[3] = _051_[3] ^ _052_[2];
  assign _054_[4] = _051_[4] ^ _052_[3];
  assign _054_[5] = _051_[5] ^ _052_[4];
  assign _054_[6] = _051_[6] ^ _052_[5];
  assign _054_[7] = _051_[7] ^ _052_[6];
  assign _050_[1] = _047_[1] ^ _047_[0];
  assign _050_[2] = _047_[2] ^ _048_[1];
  assign _050_[3] = _047_[3] ^ _048_[2];
  assign _050_[4] = _047_[4] ^ _048_[3];
  assign _050_[5] = _047_[5] ^ _048_[4];
  assign _050_[6] = _047_[6] ^ _048_[5];
  assign _050_[7] = _047_[7] ^ _048_[6];
  assign _086_[1] = _085_[1] ^ _084_[0];
  assign _086_[2] = _085_[2] ^ _084_[1];
  assign _086_[3] = _085_[3] ^ _084_[2];
  assign _085_[0] = _082_[0] ^ _083_[0];
  assign _085_[1] = _082_[1] ^ _083_[1];
  assign _087_[0] = _082_[0] & _083_[0];
  assign _087_[1] = _082_[1] & _083_[1];
  assign _045_[1] = _044_[1] ^ _043_[0];
  assign _045_[2] = field_storage_simple_updown4_value[2] ^ _043_[1];
  assign _045_[3] = field_storage_simple_updown4_value[3] ^ _043_[2];
  assign _044_[0] = field_storage_simple_step_value[0] ^ field_storage_simple_updown4_value[0];
  assign _044_[1] = field_storage_simple_step_value[1] ^ field_storage_simple_updown4_value[1];
  assign _043_[0] = field_storage_simple_step_value[0] & field_storage_simple_updown4_value[0];
  assign _046_[1] = field_storage_simple_step_value[1] & field_storage_simple_updown4_value[1];
  assign _073_[1] = _072_[1] ^ _071_[0];
  assign _073_[2] = _072_[2] ^ _071_[1];
  assign _072_[0] = _069_[0] ^ _070_[0];
  assign _072_[1] = _069_[1] ^ _070_[1];
  assign _072_[2] = _069_[2] ^ _070_[2];
  assign _074_[0] = _069_[0] & _070_[0];
  assign _074_[1] = _069_[1] & _070_[1];
  assign _074_[2] = _069_[2] & _070_[2];
  assign _073_[3] = _072_[3] ^ _071_[2];
  assign _072_[3] = _069_[3] ^ _070_[3];
  assign _074_[3] = _069_[3] & _070_[3];
  assign _041_[1] = _040_[1] ^ _039_[0];
  assign _041_[3] = _040_[3] ^ _039_[2];
  assign _039_[0] = field_storage_simple_updown3_value[0] & hwif_in_simple_updown3_incrvalue[0];
  assign _042_[1] = field_storage_simple_updown3_value[1] & hwif_in_simple_updown3_incrvalue[1];
  assign _042_[2] = field_storage_simple_updown3_value[2] & hwif_in_simple_updown3_incrvalue[2];
  assign _042_[3] = field_storage_simple_updown3_value[3] & hwif_in_simple_updown3_incrvalue[3];
  assign _041_[2] = _040_[2] ^ _039_[1];
  assign _040_[0] = hwif_in_simple_updown3_incrvalue[0] ^ field_storage_simple_updown3_value[0];
  assign _040_[1] = hwif_in_simple_updown3_incrvalue[1] ^ field_storage_simple_updown3_value[1];
  assign _040_[2] = hwif_in_simple_updown3_incrvalue[2] ^ field_storage_simple_updown3_value[2];
  assign _040_[3] = hwif_in_simple_updown3_incrvalue[3] ^ field_storage_simple_updown3_value[3];
  assign _081_[1] = _078_[1] ^ _078_[0];
  assign _081_[2] = _080_[2] ^ _079_[1];
  assign _081_[3] = _080_[3] ^ _079_[2];
  assign _038_[1] = _037_[1] ^ field_storage_simple_updown2_value[0];
  assign _038_[2] = field_storage_simple_updown2_value[2] ^ _036_[1];
  assign _038_[3] = field_storage_simple_updown2_value[3] ^ _036_[2];
  assign _068_[1] = _067_[1] ^ _065_[0];
  assign _068_[2] = _067_[2] ^ _066_[1];
  assign _068_[3] = _067_[3] ^ _066_[2];
  assign _035_[2] = field_storage_simple_updown_value[2] ^ _033_[1];
  assign _035_[1] = field_storage_simple_updown_value[1] ^ field_storage_simple_updown_value[0];
  assign _035_[3] = field_storage_simple_updown_value[3] ^ _033_[2];
  assign _077_[1] = _076_[1] ^ field_storage_simple_down_value[0];
  assign _077_[2] = _076_[2] ^ _075_[1];
  assign _077_[3] = _076_[3] ^ _075_[2];
  assign _032_[1] = field_storage_simple_up_value[1] ^ field_storage_simple_up_value[0];
  assign _032_[2] = field_storage_simple_up_value[2] ^ _030_[1];
  assign _032_[3] = field_storage_simple_up_value[3] ^ _030_[2];
  assign _029_[1] = field_storage_simple_implied_up_value[1] ^ field_storage_simple_implied_up_value[0];
  assign _029_[2] = field_storage_simple_implied_up_value[2] ^ _027_[1];
  assign _029_[3] = field_storage_simple_implied_up_value[3] ^ _027_[2];
  assign _052_[1] = _051_[1] & _051_[0];
  assign _052_[3] = _099_ & _052_[1];
  assign _099_ = _051_[3] & _051_[2];
  assign _100_ = _051_[5] & _051_[4];
  assign _052_[5] = _100_ & _052_[3];
  assign _052_[2] = _051_[2] & _052_[1];
  assign _052_[4] = _051_[4] & _052_[3];
  assign _052_[6] = _051_[6] & _052_[5];
  assign _048_[1] = _047_[1] & _047_[0];
  assign _048_[3] = _097_ & _048_[1];
  assign _097_ = _047_[3] & _047_[2];
  assign _098_ = _047_[5] & _047_[4];
  assign _048_[5] = _098_ & _048_[3];
  assign _048_[2] = _047_[2] & _048_[1];
  assign _048_[4] = _047_[4] & _048_[3];
  assign _048_[6] = _047_[6] & _048_[5];
  assign _116_ = _085_[1] & _084_[0];
  assign _117_ = _085_[2] & _084_[1];
  assign _084_[0] = _087_[0] | _085_[0];
  assign _084_[1] = _087_[1] | _116_;
  assign _084_[2] = _082_[2] | _117_;
  assign _096_ = _044_[1] & _043_[0];
  assign _043_[2] = field_storage_simple_updown4_value[2] & _043_[1];
  assign _043_[1] = _046_[1] | _096_;
  assign _107_ = _072_[1] & _071_[0];
  assign _108_ = _072_[3] & _074_[2];
  assign _109_ = _110_ & _071_[1];
  assign _110_ = _072_[3] & _072_[2];
  assign _111_ = _072_[2] & _071_[1];
  assign _071_[0] = _074_[0] | _072_[0];
  assign _071_[1] = _074_[1] | _107_;
  assign _112_ = _074_[3] | _108_;
  assign _071_[3] = _112_ | _109_;
  assign _071_[2] = _074_[2] | _111_;
  assign _090_ = _040_[1] & _039_[0];
  assign _091_ = _040_[3] & _042_[2];
  assign _092_ = _093_ & _039_[1];
  assign _093_ = _040_[3] & _040_[2];
  assign _094_ = _040_[2] & _039_[1];
  assign _039_[1] = _042_[1] | _090_;
  assign _095_ = _042_[3] | _091_;
  assign _039_[3] = _095_ | _092_;
  assign _039_[2] = _042_[2] | _094_;
  assign _060_[3] = _012_[1] & _060_[1];
  assign _060_[4] = _039_[3] | _063_;
  assign _079_[1] = _078_[1] & _078_[0];
  assign _115_ = _080_[2] & _079_[1];
  assign _079_[2] = _078_[2] | _115_;
  assign _089_ = _037_[1] & field_storage_simple_updown2_value[0];
  assign _036_[2] = field_storage_simple_updown2_value[2] & _036_[1];
  assign _036_[1] = field_storage_simple_updown2_value[1] | _089_;
  assign _101_ = _067_[1] & _065_[0];
  assign _102_ = _067_[3] & _065_[2];
  assign _103_ = _104_ & _066_[1];
  assign _104_ = _067_[3] & _067_[2];
  assign _105_ = _067_[2] & _066_[1];
  assign _066_[1] = _065_[1] | _101_;
  assign _106_ = _065_[3] | _102_;
  assign _066_[3] = _106_ | _103_;
  assign _066_[2] = _065_[2] | _105_;
  assign _033_[1] = field_storage_simple_updown_value[1] & field_storage_simple_updown_value[0];
  assign _033_[3] = _088_ & _033_[1];
  assign _088_ = field_storage_simple_updown_value[3] & field_storage_simple_updown_value[2];
  assign _033_[2] = field_storage_simple_updown_value[2] & _033_[1];
  assign _055_[4] = _033_[3] | _058_;
  assign _113_ = _076_[1] & field_storage_simple_down_value[0];
  assign _114_ = _076_[2] & _075_[1];
  assign _075_[1] = field_storage_simple_down_value[1] | _113_;
  assign _075_[2] = field_storage_simple_down_value[2] | _114_;
  assign _030_[1] = field_storage_simple_up_value[1] & field_storage_simple_up_value[0];
  assign _030_[2] = field_storage_simple_up_value[2] & _030_[1];
  assign _027_[1] = field_storage_simple_implied_up_value[1] & field_storage_simple_implied_up_value[0];
  assign _027_[2] = field_storage_simple_implied_up_value[2] & _027_[1];
  assign decoded_reg_strb_simple = cpuif_req & _014_;
  assign decoded_reg_strb_wrap_counter = cpuif_req & cpuif_addr[2];
  assign _001_[0] = field_storage_simple_step_value[0] & _021_[1];
  assign _001_[1] = field_storage_simple_step_value[1] & _021_[1];
  assign _002_[0] = cpuif_wr_data[28] & cpuif_wr_biten[30];
  assign _002_[1] = cpuif_wr_data[29] & cpuif_wr_biten[30];
  assign _022_[0] = _001_[0] | _002_[0];
  assign _022_[1] = _001_[1] | _002_[1];
  assign _003_ = field_storage_simple_do_count_up_value & _021_[1];
  assign _004_ = cpuif_wr_data[30] & cpuif_wr_biten[30];
  assign _023_ = _003_ | _004_;
  assign _005_ = field_storage_simple_do_count_down_value & _021_[1];
  assign _006_ = cpuif_wr_data[31] & cpuif_wr_biten[30];
  assign _024_ = _005_ | _006_;
  assign cpuif_wr_ack = cpuif_req & cpuif_req_is_wr;
  assign cpuif_rd_ack = cpuif_req & _018_;
  assign s_apb_prdata[0] = \readback_array[0] [0] | \readback_array[1] [0];
  assign s_apb_prdata[1] = \readback_array[0] [1] | \readback_array[1] [1];
  assign s_apb_prdata[2] = \readback_array[0] [2] | \readback_array[1] [2];
  assign s_apb_prdata[3] = \readback_array[0] [3] | \readback_array[1] [3];
  assign s_apb_prdata[4] = \readback_array[0] [4] | \readback_array[1] [4];
  assign s_apb_prdata[5] = \readback_array[0] [5] | \readback_array[1] [5];
  assign s_apb_prdata[6] = \readback_array[0] [6] | \readback_array[1] [6];
  assign s_apb_prdata[7] = \readback_array[0] [7] | \readback_array[1] [7];
  assign s_apb_prdata[8] = \readback_array[0] [8] | \readback_array[1] [8];
  assign s_apb_prdata[9] = \readback_array[0] [9] | \readback_array[1] [9];
  assign s_apb_prdata[10] = \readback_array[0] [10] | \readback_array[1] [10];
  assign s_apb_prdata[11] = \readback_array[0] [11] | \readback_array[1] [11];
  assign s_apb_prdata[12] = \readback_array[0] [12] | \readback_array[1] [12];
  assign s_apb_prdata[13] = \readback_array[0] [13] | \readback_array[1] [13];
  assign s_apb_prdata[14] = \readback_array[0] [14] | \readback_array[1] [14];
  assign s_apb_prdata[15] = \readback_array[0] [15] | \readback_array[1] [15];
  assign _012_[0] = _060_[1];
  assign _013_[0] = _055_[1];
  assign _021_[0] = _021_[1];
  assign _027_[0] = field_storage_simple_implied_up_value[0];
  assign _028_[3:1] = field_storage_simple_implied_up_value[3:1];
  assign _029_[0] = _028_[0];
  assign _030_[0] = field_storage_simple_up_value[0];
  assign _031_[3:1] = field_storage_simple_up_value[3:1];
  assign _032_[0] = _031_[0];
  assign { _033_[4], _033_[0] } = { 1'h0, field_storage_simple_updown_value[0] };
  assign _034_[4:1] = { 1'h0, field_storage_simple_updown_value[3:1] };
  assign { _035_[4], _035_[0] } = { _033_[3], _034_[0] };
  assign _036_[0] = field_storage_simple_updown2_value[0];
  assign _037_[3:2] = field_storage_simple_updown2_value[3:2];
  assign _038_[0] = _037_[0];
  assign _039_[4] = 1'h0;
  assign _040_[4] = 1'h0;
  assign { _041_[4], _041_[0] } = { _039_[3], _040_[0] };
  assign { _042_[4], _042_[0] } = { 1'h0, _039_[0] };
  assign _044_[3:2] = field_storage_simple_updown4_value[3:2];
  assign _045_[0] = _044_[0];
  assign { _046_[3:2], _046_[0] } = { 2'h0, _043_[0] };
  assign _048_[0] = _047_[0];
  assign _049_[7:1] = _047_[7:1];
  assign _050_[0] = _049_[0];
  assign _052_[0] = _051_[0];
  assign _053_[7:1] = _051_[7:1];
  assign _054_[0] = _053_[0];
  assign _055_[0] = _034_[0];
  assign _056_[3:0] = { _035_[3:1], _034_[0] };
  assign _060_[0] = _040_[0];
  assign _061_[3:0] = { _041_[3:1], _040_[0] };
  assign _066_[0] = _065_[0];
  assign _067_[0] = _065_[0];
  assign _075_[0] = field_storage_simple_down_value[0];
  assign _076_[0] = field_storage_simple_down_value[0];
  assign _079_[0] = _078_[0];
  assign _080_[1:0] = _078_[1:0];
  assign _083_[3:2] = 2'h3;
  assign _087_[3:2] = _082_[3:2];
  assign cpuif_addr[1:0] = 2'h0;
  assign cpuif_rd_data = { 2'h0, \readback_array[0] [29:16], s_apb_prdata[15:0] };
  assign cpuif_rd_err = 1'h0;
  assign cpuif_req_masked = cpuif_req;
  assign cpuif_req_stall_rd = 1'h0;
  assign cpuif_req_stall_wr = 1'h0;
  assign { cpuif_wr_biten[31], cpuif_wr_biten[29:24] } = { cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30] };
  assign cpuif_wr_err = 1'h0;
  assign decoded_req = cpuif_req;
  assign decoded_req_is_wr = cpuif_req_is_wr;
  assign decoded_wr_biten = { cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[30], cpuif_wr_biten[23:0] };
  assign decoded_wr_data = cpuif_wr_data;
  assign field_combo_simple_do_count_down_load_next = 1'h1;
  assign field_combo_simple_do_count_up_load_next = 1'h1;
  assign field_combo_simple_down_load_next = hwif_in_simple_down_decr;
  assign field_combo_simple_implied_up_load_next = hwif_in_simple_implied_up_incr;
  assign field_combo_simple_up_load_next = hwif_in_simple_up_incr;
  assign field_combo_simple_updown3_load_next = field_combo_simple_updown2_load_next;
  assign field_combo_simple_updown4_load_next = field_combo_simple_updown2_load_next;
  assign field_combo_simple_updown_overflow = hwif_out_simple_updown_overflow;
  assign field_combo_simple_updown_underflow = hwif_out_simple_updown_underflow;
  assign hwif_out_simple_do_count_down = field_storage_simple_do_count_down_value;
  assign hwif_out_simple_do_count_up = field_storage_simple_do_count_up_value;
  assign hwif_out_simple_updown = field_storage_simple_updown_value;
  assign \readback_array[0] [31:30] = 2'h0;
  assign \readback_array[1] [31:16] = 16'h0000;
  assign readback_data = { 2'h0, \readback_array[0] [29:16], s_apb_prdata[15:0] };
  assign readback_done = cpuif_rd_ack;
  assign readback_err = 1'h0;
  assign readback_external_rd_ack = 1'h0;
  assign s_apb_prdata[31:16] = { 2'h0, \readback_array[0] [29:16] };
  assign s_apb_pslverr = 1'h0;
endmodule
