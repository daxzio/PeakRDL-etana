/* Generated by Yosys 0.58 (git sha1 157aabb58, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module regblock(clk, rst, s_cpuif_req, s_cpuif_req_is_wr, s_cpuif_addr, s_cpuif_wr_data, s_cpuif_wr_biten, s_cpuif_req_stall_wr, s_cpuif_req_stall_rd, s_cpuif_rd_ack, s_cpuif_rd_err, s_cpuif_rd_data, s_cpuif_wr_ack, s_cpuif_wr_err);
  input clk;
  wire clk;
  input rst;
  wire rst;
  input s_cpuif_req;
  wire s_cpuif_req;
  input s_cpuif_req_is_wr;
  wire s_cpuif_req_is_wr;
  input [3:0] s_cpuif_addr;
  wire [3:0] s_cpuif_addr;
  input [31:0] s_cpuif_wr_data;
  wire [31:0] s_cpuif_wr_data;
  input [31:0] s_cpuif_wr_biten;
  wire [31:0] s_cpuif_wr_biten;
  output s_cpuif_req_stall_wr;
  wire s_cpuif_req_stall_wr;
  output s_cpuif_req_stall_rd;
  wire s_cpuif_req_stall_rd;
  output s_cpuif_rd_ack;
  wire s_cpuif_rd_ack;
  output s_cpuif_rd_err;
  wire s_cpuif_rd_err;
  output [31:0] s_cpuif_rd_data;
  wire [31:0] s_cpuif_rd_data;
  output s_cpuif_wr_ack;
  wire s_cpuif_wr_ack;
  output s_cpuif_wr_err;
  wire s_cpuif_wr_err;
  wire [3:0] _000_;
  wire [3:0] _001_;
  wire [3:0] _002_;
  wire [3:0] _003_;
  wire [3:0] _004_;
  wire [3:0] _005_;
  wire [3:0] _006_;
  wire [7:0] _007_;
  wire _008_;
  wire _009_;
  wire [1:0] _010_;
  wire [1:0] _011_;
  wire [1:0] _012_;
  wire [1:0] _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire [3:0] _026_;
  wire [3:0] _027_;
  wire [3:0] _028_;
  wire [3:0] _029_;
  wire [7:0] _030_;
  wire [3:0] _031_;
  wire [3:0] _032_;
  wire [3:0] _033_;
  wire [7:0] _034_;
  wire [31:0] _035_;
  wire [31:0] _036_;
  wire [3:0] _037_;
  wire [3:0] _038_;
  wire [3:0] cpuif_addr;
  wire cpuif_rd_ack;
  wire [31:0] cpuif_rd_data;
  wire cpuif_rd_err;
  wire cpuif_req;
  wire cpuif_req_is_wr;
  wire cpuif_req_masked;
  wire cpuif_req_stall_rd;
  wire cpuif_req_stall_wr;
  wire cpuif_wr_ack;
  wire [31:0] cpuif_wr_biten;
  wire [31:0] cpuif_wr_data;
  wire cpuif_wr_err;
  wire [0:0] decoded_reg_strb_r1;
  wire [0:0] decoded_reg_strb_r2;
  wire [0:0] decoded_reg_strb_r3;
  wire [0:0] decoded_reg_strb_r4;
  wire decoded_req;
  wire decoded_req_is_wr;
  wire [31:0] decoded_wr_biten;
  wire [31:0] decoded_wr_data;
  wire field_combo_r1_f1_load_next;
  wire field_combo_r1_f2_load_next;
  wire field_combo_r1_f3_load_next;
  wire field_combo_r2_f1_load_next;
  wire field_combo_r2_f2_load_next;
  wire field_combo_r2_f3_load_next;
  wire field_combo_r3_f1_load_next;
  wire field_combo_r3_f2_load_next;
  wire field_combo_r4_f3_load_next;
  reg [3:0] field_storage_r1_f1_value;
  reg [3:0] field_storage_r1_f2_value;
  reg [3:0] field_storage_r1_f3_value;
  reg [3:0] field_storage_r2_f1_value;
  reg [3:0] field_storage_r2_f2_value;
  reg [3:0] field_storage_r2_f3_value;
  wire [7:0] field_storage_r3_f1_value;
  wire [7:0] field_storage_r3_f2_value;
  reg [7:0] field_storage_r4_f3_value;
  wire [31:0] \readback_array[0] ;
  wire [31:0] \readback_array[1] ;
  wire [31:0] \readback_array[2] ;
  wire [31:0] \readback_array[3] ;
  wire [31:0] readback_data;
  wire readback_done;
  wire readback_err;
  wire readback_external_rd_ack;
  reg \field_storage_r3_f2_value_reg[4] ;
  always @(posedge clk)
    if (rst) \field_storage_r3_f2_value_reg[4]  <= 1'h0;
    else if (field_combo_r3_f1_load_next) \field_storage_r3_f2_value_reg[4]  <= 1'h1;
  assign field_storage_r3_f2_value[4] = \field_storage_r3_f2_value_reg[4] ;
  always @(posedge clk)
    if (rst) field_storage_r4_f3_value[0] <= 1'h0;
    else if (field_combo_r4_f3_load_next) field_storage_r4_f3_value[0] <= _034_[0];
  always @(posedge clk)
    if (rst) field_storage_r4_f3_value[1] <= 1'h0;
    else if (field_combo_r4_f3_load_next) field_storage_r4_f3_value[1] <= _034_[1];
  always @(posedge clk)
    if (rst) field_storage_r4_f3_value[2] <= 1'h0;
    else if (field_combo_r4_f3_load_next) field_storage_r4_f3_value[2] <= _034_[2];
  always @(posedge clk)
    if (rst) field_storage_r4_f3_value[3] <= 1'h0;
    else if (field_combo_r4_f3_load_next) field_storage_r4_f3_value[3] <= _034_[3];
  always @(posedge clk)
    if (rst) field_storage_r4_f3_value[4] <= 1'h0;
    else if (field_combo_r4_f3_load_next) field_storage_r4_f3_value[4] <= _034_[4];
  always @(posedge clk)
    if (rst) field_storage_r4_f3_value[5] <= 1'h0;
    else if (field_combo_r4_f3_load_next) field_storage_r4_f3_value[5] <= _034_[5];
  always @(posedge clk)
    if (rst) field_storage_r4_f3_value[6] <= 1'h0;
    else if (field_combo_r4_f3_load_next) field_storage_r4_f3_value[6] <= _034_[6];
  always @(posedge clk)
    if (rst) field_storage_r4_f3_value[7] <= 1'h0;
    else if (field_combo_r4_f3_load_next) field_storage_r4_f3_value[7] <= _034_[7];
  always @(posedge clk)
    if (rst) field_storage_r2_f3_value[0] <= 1'h0;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f3_value[0] <= _038_[0];
  always @(posedge clk)
    if (rst) field_storage_r2_f3_value[1] <= 1'h0;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f3_value[1] <= _038_[1];
  always @(posedge clk)
    if (rst) field_storage_r2_f3_value[2] <= 1'h0;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f3_value[2] <= _038_[2];
  always @(posedge clk)
    if (rst) field_storage_r2_f3_value[3] <= 1'h0;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f3_value[3] <= _038_[3];
  always @(posedge clk)
    if (rst) field_storage_r2_f2_value[0] <= 1'h1;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f2_value[0] <= _005_[0];
  always @(posedge clk)
    if (rst) field_storage_r2_f2_value[1] <= 1'h1;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f2_value[1] <= _005_[1];
  always @(posedge clk)
    if (rst) field_storage_r2_f2_value[2] <= 1'h1;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f2_value[2] <= _005_[2];
  always @(posedge clk)
    if (rst) field_storage_r2_f2_value[3] <= 1'h1;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f2_value[3] <= _005_[3];
  always @(posedge clk)
    if (rst) field_storage_r2_f1_value[0] <= 1'h0;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f1_value[0] <= _032_[0];
  always @(posedge clk)
    if (rst) field_storage_r2_f1_value[1] <= 1'h0;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f1_value[1] <= _032_[1];
  always @(posedge clk)
    if (rst) field_storage_r2_f1_value[2] <= 1'h0;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f1_value[2] <= _032_[2];
  always @(posedge clk)
    if (rst) field_storage_r2_f1_value[3] <= 1'h0;
    else if (field_combo_r2_f1_load_next) field_storage_r2_f1_value[3] <= _032_[3];
  always @(posedge clk)
    if (rst) field_storage_r1_f3_value[0] <= 1'h0;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f3_value[0] <= _037_[0];
  always @(posedge clk)
    if (rst) field_storage_r1_f3_value[1] <= 1'h0;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f3_value[1] <= _037_[1];
  always @(posedge clk)
    if (rst) field_storage_r1_f3_value[2] <= 1'h0;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f3_value[2] <= _037_[2];
  always @(posedge clk)
    if (rst) field_storage_r1_f3_value[3] <= 1'h0;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f3_value[3] <= _037_[3];
  always @(posedge clk)
    if (rst) field_storage_r1_f2_value[0] <= 1'h1;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f2_value[0] <= _002_[0];
  always @(posedge clk)
    if (rst) field_storage_r1_f2_value[1] <= 1'h1;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f2_value[1] <= _002_[1];
  always @(posedge clk)
    if (rst) field_storage_r1_f2_value[2] <= 1'h1;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f2_value[2] <= _002_[2];
  always @(posedge clk)
    if (rst) field_storage_r1_f2_value[3] <= 1'h1;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f2_value[3] <= _002_[3];
  always @(posedge clk)
    if (rst) field_storage_r1_f1_value[0] <= 1'h0;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f1_value[0] <= _031_[0];
  always @(posedge clk)
    if (rst) field_storage_r1_f1_value[1] <= 1'h0;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f1_value[1] <= _031_[1];
  always @(posedge clk)
    if (rst) field_storage_r1_f1_value[2] <= 1'h0;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f1_value[2] <= _031_[2];
  always @(posedge clk)
    if (rst) field_storage_r1_f1_value[3] <= 1'h0;
    else if (field_combo_r1_f1_load_next) field_storage_r1_f1_value[3] <= _031_[3];
  reg \field_storage_r3_f1_value_reg[6] ;
  always @(posedge clk)
    if (rst) \field_storage_r3_f1_value_reg[6]  <= 1'h1;
    else if (field_combo_r3_f1_load_next) \field_storage_r3_f1_value_reg[6]  <= 1'h0;
  assign field_storage_r3_f1_value[6] = \field_storage_r3_f1_value_reg[6] ;
  assign _009_ = ~s_cpuif_addr[3];
  assign _008_ = ~s_cpuif_addr[2];
  assign decoded_reg_strb_r1 = s_cpuif_req & _018_;
  assign decoded_reg_strb_r2 = s_cpuif_req & _019_;
  assign decoded_reg_strb_r3 = s_cpuif_req & _020_;
  assign decoded_reg_strb_r4 = s_cpuif_req & _021_;
  assign _031_[0] = field_storage_r1_f1_value[0] | _000_[0];
  assign _031_[1] = field_storage_r1_f1_value[1] | _000_[1];
  assign _031_[2] = field_storage_r1_f1_value[2] | _000_[2];
  assign _031_[3] = field_storage_r1_f1_value[3] | _000_[3];
  assign _001_[3] = s_cpuif_wr_data[7] & s_cpuif_wr_biten[7];
  assign _002_[0] = field_storage_r1_f2_value[0] & _026_[0];
  assign _002_[1] = field_storage_r1_f2_value[1] & _026_[1];
  assign _002_[2] = field_storage_r1_f2_value[2] & _026_[2];
  assign _002_[3] = field_storage_r1_f2_value[3] & _026_[3];
  assign _003_[0] = s_cpuif_wr_data[8] & s_cpuif_wr_biten[8];
  assign _003_[1] = s_cpuif_wr_data[9] & s_cpuif_wr_biten[9];
  assign _003_[2] = s_cpuif_wr_data[10] & s_cpuif_wr_biten[10];
  assign _003_[3] = s_cpuif_wr_data[11] & s_cpuif_wr_biten[11];
  assign _037_[0] = field_storage_r1_f3_value[0] ^ _003_[0];
  assign _037_[1] = field_storage_r1_f3_value[1] ^ _003_[1];
  assign _037_[2] = field_storage_r1_f3_value[2] ^ _003_[2];
  assign _037_[3] = field_storage_r1_f3_value[3] ^ _003_[3];
  assign _004_[0] = _027_[0] & s_cpuif_wr_biten[0];
  assign _004_[1] = _027_[1] & s_cpuif_wr_biten[1];
  assign _004_[2] = _027_[2] & s_cpuif_wr_biten[2];
  assign _004_[3] = _027_[3] & s_cpuif_wr_biten[3];
  assign _032_[0] = field_storage_r2_f1_value[0] | _004_[0];
  assign _032_[1] = field_storage_r2_f1_value[1] | _004_[1];
  assign _032_[2] = field_storage_r2_f1_value[2] | _004_[2];
  assign _032_[3] = field_storage_r2_f1_value[3] | _004_[3];
  assign _033_[0] = s_cpuif_wr_data[4] | _028_[0];
  assign _033_[1] = s_cpuif_wr_data[5] | _028_[1];
  assign _033_[2] = s_cpuif_wr_data[6] | _028_[2];
  assign _033_[3] = s_cpuif_wr_data[7] | _028_[3];
  assign _005_[0] = field_storage_r2_f2_value[0] & _033_[0];
  assign _005_[1] = field_storage_r2_f2_value[1] & _033_[1];
  assign _005_[2] = field_storage_r2_f2_value[2] & _033_[2];
  assign _005_[3] = field_storage_r2_f2_value[3] & _033_[3];
  assign _006_[0] = _029_[0] & s_cpuif_wr_biten[8];
  assign _006_[1] = _029_[1] & s_cpuif_wr_biten[9];
  assign _006_[2] = _029_[2] & s_cpuif_wr_biten[10];
  assign _006_[3] = _029_[3] & s_cpuif_wr_biten[11];
  assign _038_[0] = field_storage_r2_f3_value[0] ^ _006_[0];
  assign _038_[1] = field_storage_r2_f3_value[1] ^ _006_[1];
  assign _038_[2] = field_storage_r2_f3_value[2] ^ _006_[2];
  assign _038_[3] = field_storage_r2_f3_value[3] ^ _006_[3];
  assign _007_[0] = field_storage_r4_f3_value[0] & _030_[0];
  assign _007_[1] = field_storage_r4_f3_value[1] & _030_[1];
  assign _007_[2] = field_storage_r4_f3_value[2] & _030_[2];
  assign _007_[3] = field_storage_r4_f3_value[3] & _030_[3];
  assign _007_[4] = field_storage_r4_f3_value[4] & _028_[0];
  assign _007_[5] = field_storage_r4_f3_value[5] & _028_[1];
  assign _007_[6] = field_storage_r4_f3_value[6] & _028_[2];
  assign _007_[7] = field_storage_r4_f3_value[7] & _028_[3];
  assign _000_[0] = s_cpuif_wr_data[0] & s_cpuif_wr_biten[0];
  assign _000_[1] = s_cpuif_wr_data[1] & s_cpuif_wr_biten[1];
  assign _000_[2] = s_cpuif_wr_data[2] & s_cpuif_wr_biten[2];
  assign _000_[3] = s_cpuif_wr_data[3] & s_cpuif_wr_biten[3];
  assign _001_[0] = s_cpuif_wr_data[4] & s_cpuif_wr_biten[4];
  assign _001_[1] = s_cpuif_wr_data[5] & s_cpuif_wr_biten[5];
  assign _001_[2] = s_cpuif_wr_data[6] & s_cpuif_wr_biten[6];
  assign _034_[0] = _007_[0] | _000_[0];
  assign _034_[1] = _007_[1] | _000_[1];
  assign _034_[2] = _007_[2] | _000_[2];
  assign _034_[3] = _007_[3] | _000_[3];
  assign _034_[4] = _007_[4] | _001_[0];
  assign _034_[5] = _007_[5] | _001_[1];
  assign _034_[6] = _007_[6] | _001_[2];
  assign _034_[7] = _007_[7] | _001_[3];
  assign s_cpuif_wr_ack = s_cpuif_req & s_cpuif_req_is_wr;
  assign s_cpuif_rd_ack = s_cpuif_req & _025_;
  assign _035_[0] = \readback_array[0] [0] | \readback_array[1] [0];
  assign _035_[1] = \readback_array[0] [1] | \readback_array[1] [1];
  assign _035_[2] = \readback_array[0] [2] | \readback_array[1] [2];
  assign _035_[3] = \readback_array[0] [3] | \readback_array[1] [3];
  assign _035_[4] = \readback_array[0] [4] | \readback_array[1] [4];
  assign _035_[5] = \readback_array[0] [5] | \readback_array[1] [5];
  assign _035_[6] = \readback_array[0] [6] | \readback_array[1] [6];
  assign _035_[7] = \readback_array[0] [7] | \readback_array[1] [7];
  assign _035_[8] = \readback_array[0] [8] | \readback_array[1] [8];
  assign _035_[9] = \readback_array[0] [9] | \readback_array[1] [9];
  assign _035_[10] = \readback_array[0] [10] | \readback_array[1] [10];
  assign _035_[11] = \readback_array[0] [11] | \readback_array[1] [11];
  assign _036_[4] = _035_[4] | \readback_array[2] [7];
  assign _036_[5] = _035_[5] | \readback_array[2] [7];
  assign _036_[6] = _035_[6] | \readback_array[2] [7];
  assign _036_[7] = _035_[7] | \readback_array[2] [7];
  assign s_cpuif_rd_data[8] = _035_[8] | \readback_array[2] [11];
  assign s_cpuif_rd_data[9] = _035_[9] | \readback_array[2] [11];
  assign s_cpuif_rd_data[10] = _035_[10] | \readback_array[2] [11];
  assign s_cpuif_rd_data[11] = _035_[11] | \readback_array[2] [11];
  assign s_cpuif_rd_data[0] = _035_[0] | \readback_array[3] [0];
  assign s_cpuif_rd_data[1] = _035_[1] | \readback_array[3] [1];
  assign s_cpuif_rd_data[2] = _035_[2] | \readback_array[3] [2];
  assign s_cpuif_rd_data[3] = _035_[3] | \readback_array[3] [3];
  assign s_cpuif_rd_data[4] = _036_[4] | \readback_array[3] [4];
  assign s_cpuif_rd_data[5] = _036_[5] | \readback_array[3] [5];
  assign s_cpuif_rd_data[6] = _036_[6] | \readback_array[3] [6];
  assign s_cpuif_rd_data[7] = _036_[7] | \readback_array[3] [7];
  assign _010_[1] = _008_ | s_cpuif_addr[3];
  assign _015_ = _010_[0] | _010_[1];
  assign _011_[1] = s_cpuif_addr[2] | _009_;
  assign _016_ = _010_[0] | _011_[1];
  assign _010_[0] = s_cpuif_addr[0] | s_cpuif_addr[1];
  assign _012_[1] = _008_ | _009_;
  assign _017_ = _010_[0] | _012_[1];
  assign _013_[1] = s_cpuif_addr[2] | s_cpuif_addr[3];
  assign _014_ = _010_[0] | _013_[1];
  assign _018_ = ~_014_;
  assign _019_ = ~_015_;
  assign _020_ = ~_016_;
  assign _021_ = ~_017_;
  assign _025_ = ~s_cpuif_req_is_wr;
  assign field_combo_r1_f1_load_next = decoded_reg_strb_r1 & s_cpuif_req_is_wr;
  assign field_combo_r2_f1_load_next = decoded_reg_strb_r2 & s_cpuif_req_is_wr;
  assign field_combo_r3_f1_load_next = decoded_reg_strb_r3 & s_cpuif_req_is_wr;
  assign field_combo_r4_f3_load_next = decoded_reg_strb_r4 & s_cpuif_req_is_wr;
  assign _022_ = decoded_reg_strb_r1 & _025_;
  assign _023_ = decoded_reg_strb_r2 & _025_;
  assign \readback_array[2] [11] = decoded_reg_strb_r3 & _025_;
  assign _024_ = decoded_reg_strb_r4 & _025_;
  assign \readback_array[0] [0] = _022_ ? field_storage_r1_f1_value[0] : 1'h0;
  assign \readback_array[0] [1] = _022_ ? field_storage_r1_f1_value[1] : 1'h0;
  assign \readback_array[0] [2] = _022_ ? field_storage_r1_f1_value[2] : 1'h0;
  assign \readback_array[0] [3] = _022_ ? field_storage_r1_f1_value[3] : 1'h0;
  assign \readback_array[0] [4] = _022_ ? field_storage_r1_f2_value[0] : 1'h0;
  assign \readback_array[0] [5] = _022_ ? field_storage_r1_f2_value[1] : 1'h0;
  assign \readback_array[0] [6] = _022_ ? field_storage_r1_f2_value[2] : 1'h0;
  assign \readback_array[0] [7] = _022_ ? field_storage_r1_f2_value[3] : 1'h0;
  assign \readback_array[0] [8] = _022_ ? field_storage_r1_f3_value[0] : 1'h0;
  assign \readback_array[0] [9] = _022_ ? field_storage_r1_f3_value[1] : 1'h0;
  assign \readback_array[0] [10] = _022_ ? field_storage_r1_f3_value[2] : 1'h0;
  assign \readback_array[0] [11] = _022_ ? field_storage_r1_f3_value[3] : 1'h0;
  assign \readback_array[1] [0] = _023_ ? field_storage_r2_f1_value[0] : 1'h0;
  assign \readback_array[1] [1] = _023_ ? field_storage_r2_f1_value[1] : 1'h0;
  assign \readback_array[1] [2] = _023_ ? field_storage_r2_f1_value[2] : 1'h0;
  assign \readback_array[1] [3] = _023_ ? field_storage_r2_f1_value[3] : 1'h0;
  assign \readback_array[1] [4] = _023_ ? field_storage_r2_f2_value[0] : 1'h0;
  assign \readback_array[1] [5] = _023_ ? field_storage_r2_f2_value[1] : 1'h0;
  assign \readback_array[1] [6] = _023_ ? field_storage_r2_f2_value[2] : 1'h0;
  assign \readback_array[1] [7] = _023_ ? field_storage_r2_f2_value[3] : 1'h0;
  assign \readback_array[1] [8] = _023_ ? field_storage_r2_f3_value[0] : 1'h0;
  assign \readback_array[1] [9] = _023_ ? field_storage_r2_f3_value[1] : 1'h0;
  assign \readback_array[1] [10] = _023_ ? field_storage_r2_f3_value[2] : 1'h0;
  assign \readback_array[1] [11] = _023_ ? field_storage_r2_f3_value[3] : 1'h0;
  assign \readback_array[2] [7] = \readback_array[2] [11] ? field_storage_r3_f1_value[6] : 1'h0;
  assign \readback_array[2] [12] = \readback_array[2] [11] ? field_storage_r3_f2_value[4] : 1'h0;
  assign \readback_array[3] [0] = _024_ ? field_storage_r4_f3_value[0] : 1'h0;
  assign \readback_array[3] [1] = _024_ ? field_storage_r4_f3_value[1] : 1'h0;
  assign \readback_array[3] [2] = _024_ ? field_storage_r4_f3_value[2] : 1'h0;
  assign \readback_array[3] [3] = _024_ ? field_storage_r4_f3_value[3] : 1'h0;
  assign \readback_array[3] [4] = _024_ ? field_storage_r4_f3_value[4] : 1'h0;
  assign \readback_array[3] [5] = _024_ ? field_storage_r4_f3_value[5] : 1'h0;
  assign \readback_array[3] [6] = _024_ ? field_storage_r4_f3_value[6] : 1'h0;
  assign \readback_array[3] [7] = _024_ ? field_storage_r4_f3_value[7] : 1'h0;
  assign _026_[0] = ~_001_[0];
  assign _026_[1] = ~_001_[1];
  assign _026_[2] = ~_001_[2];
  assign _026_[3] = ~_001_[3];
  assign _027_[0] = ~s_cpuif_wr_data[0];
  assign _027_[1] = ~s_cpuif_wr_data[1];
  assign _027_[2] = ~s_cpuif_wr_data[2];
  assign _027_[3] = ~s_cpuif_wr_data[3];
  assign _028_[3] = ~s_cpuif_wr_biten[7];
  assign _029_[0] = ~s_cpuif_wr_data[8];
  assign _029_[1] = ~s_cpuif_wr_data[9];
  assign _029_[2] = ~s_cpuif_wr_data[10];
  assign _029_[3] = ~s_cpuif_wr_data[11];
  assign _030_[0] = ~s_cpuif_wr_biten[0];
  assign _030_[1] = ~s_cpuif_wr_biten[1];
  assign _030_[2] = ~s_cpuif_wr_biten[2];
  assign _030_[3] = ~s_cpuif_wr_biten[3];
  assign _028_[0] = ~s_cpuif_wr_biten[4];
  assign _028_[1] = ~s_cpuif_wr_biten[5];
  assign _028_[2] = ~s_cpuif_wr_biten[6];
  assign _011_[0] = _010_[0];
  assign _012_[0] = _010_[0];
  assign _013_[0] = _010_[0];
  assign _030_[7:4] = _028_;
  assign _035_[31:12] = 20'h00000;
  assign { _036_[31:8], _036_[3:0] } = { 16'h0000, \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12], s_cpuif_rd_data[11:8], _035_[3:0] };
  assign cpuif_addr = s_cpuif_addr;
  assign cpuif_rd_ack = s_cpuif_rd_ack;
  assign cpuif_rd_data = { 16'h0000, \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12], s_cpuif_rd_data[11:0] };
  assign cpuif_rd_err = 1'h0;
  assign cpuif_req = s_cpuif_req;
  assign cpuif_req_is_wr = s_cpuif_req_is_wr;
  assign cpuif_req_masked = s_cpuif_req;
  assign cpuif_req_stall_rd = 1'h0;
  assign cpuif_req_stall_wr = 1'h0;
  assign cpuif_wr_ack = s_cpuif_wr_ack;
  assign cpuif_wr_biten = s_cpuif_wr_biten;
  assign cpuif_wr_data = s_cpuif_wr_data;
  assign cpuif_wr_err = 1'h0;
  assign decoded_req = s_cpuif_req;
  assign decoded_req_is_wr = s_cpuif_req_is_wr;
  assign decoded_wr_biten = s_cpuif_wr_biten;
  assign decoded_wr_data = s_cpuif_wr_data;
  assign field_combo_r1_f2_load_next = field_combo_r1_f1_load_next;
  assign field_combo_r1_f3_load_next = field_combo_r1_f1_load_next;
  assign field_combo_r2_f2_load_next = field_combo_r2_f1_load_next;
  assign field_combo_r2_f3_load_next = field_combo_r2_f1_load_next;
  assign field_combo_r3_f2_load_next = field_combo_r3_f1_load_next;
  assign { field_storage_r3_f1_value[7], field_storage_r3_f1_value[5:0] } = { field_storage_r3_f1_value[6], field_storage_r3_f1_value[6], field_storage_r3_f1_value[6], 4'h0 };
  assign { field_storage_r3_f2_value[7:5], field_storage_r3_f2_value[3:0] } = { field_storage_r3_f2_value[4], field_storage_r3_f2_value[4], field_storage_r3_f2_value[4], 4'hf };
  assign \readback_array[0] [31:12] = 20'h00000;
  assign \readback_array[1] [31:12] = 20'h00000;
  assign { \readback_array[2] [31:13], \readback_array[2] [10:8], \readback_array[2] [6:0] } = { 16'h0000, \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12:11], \readback_array[2] [11], \readback_array[2] [11], \readback_array[2] [7], \readback_array[2] [7], \readback_array[2] [7], 4'h0 };
  assign \readback_array[3] [31:8] = 24'h000000;
  assign readback_data = { 16'h0000, \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12], s_cpuif_rd_data[11:0] };
  assign readback_done = s_cpuif_rd_ack;
  assign readback_err = 1'h0;
  assign readback_external_rd_ack = 1'h0;
  assign s_cpuif_rd_data[31:12] = { 16'h0000, \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12], \readback_array[2] [12] };
  assign s_cpuif_rd_err = 1'h0;
  assign s_cpuif_req_stall_rd = 1'h0;
  assign s_cpuif_req_stall_wr = 1'h0;
  assign s_cpuif_wr_err = 1'h0;
endmodule
