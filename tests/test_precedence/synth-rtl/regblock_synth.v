/* Generated by Yosys 0.58 (git sha1 157aabb58, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module regblock(clk, rst, s_apb_psel, s_apb_pwrite, s_apb_penable, s_apb_pprot, s_apb_paddr, s_apb_pwdata, s_apb_pstrb, s_apb_pready, s_apb_prdata, s_apb_pslverr, hwif_in_r1_f_sw, hwif_in_r1_f_sw_we, hwif_in_r1_f_hw, hwif_in_r1_f_hw_we);
  input clk;
  wire clk;
  input rst;
  wire rst;
  input s_apb_psel;
  wire s_apb_psel;
  input s_apb_pwrite;
  wire s_apb_pwrite;
  input s_apb_penable;
  wire s_apb_penable;
  input [2:0] s_apb_pprot;
  wire [2:0] s_apb_pprot;
  input [2:0] s_apb_paddr;
  wire [2:0] s_apb_paddr;
  input [31:0] s_apb_pwdata;
  wire [31:0] s_apb_pwdata;
  input [3:0] s_apb_pstrb;
  wire [3:0] s_apb_pstrb;
  output s_apb_pready;
  wire s_apb_pready;
  output [31:0] s_apb_prdata;
  wire [31:0] s_apb_prdata;
  output s_apb_pslverr;
  wire s_apb_pslverr;
  input [0:0] hwif_in_r1_f_sw;
  wire [0:0] hwif_in_r1_f_sw;
  input [0:0] hwif_in_r1_f_sw_we;
  wire [0:0] hwif_in_r1_f_sw_we;
  input [0:0] hwif_in_r1_f_hw;
  wire [0:0] hwif_in_r1_f_hw;
  input [0:0] hwif_in_r1_f_hw_we;
  wire [0:0] hwif_in_r1_f_hw_we;
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire [3:0] _023_;
  wire [3:0] _024_;
  wire [3:0] _025_;
  wire [3:0] _026_;
  wire [3:0] _027_;
  wire [3:0] _028_;
  wire [2:0] cpuif_addr;
  wire cpuif_rd_ack;
  wire [31:0] cpuif_rd_data;
  wire cpuif_rd_err;
  reg cpuif_req;
  reg cpuif_req_is_wr;
  wire cpuif_req_masked;
  wire cpuif_req_stall_rd;
  wire cpuif_req_stall_wr;
  wire cpuif_wr_ack;
  wire [31:0] cpuif_wr_biten;
  wire [31:0] cpuif_wr_data;
  wire cpuif_wr_err;
  wire [0:0] decoded_reg_strb_r1;
  wire [0:0] decoded_reg_strb_r1_events;
  wire decoded_req;
  wire decoded_req_is_wr;
  wire [31:0] decoded_wr_biten;
  wire [31:0] decoded_wr_data;
  wire field_combo_r1_events_f_hw_count_load_next;
  wire field_combo_r1_events_f_sw_count_load_next;
  wire field_combo_r1_f_hw_load_next;
  wire [0:0] field_combo_r1_f_hw_next;
  wire field_combo_r1_f_sw_load_next;
  wire [0:0] field_combo_r1_f_sw_next;
  reg [3:0] field_storage_r1_events_f_hw_count_value;
  reg [3:0] field_storage_r1_events_f_sw_count_value;
  reg [0:0] field_storage_r1_f_hw_value;
  reg [0:0] field_storage_r1_f_sw_value;
  reg is_active;
  wire [31:0] \readback_array[0] ;
  wire [31:0] \readback_array[1] ;
  wire [31:0] readback_data;
  wire readback_done;
  wire readback_err;
  wire readback_external_rd_ack;
  always @(posedge clk)
    if (rst) field_storage_r1_f_hw_value <= 1'h0;
    else if (_010_) field_storage_r1_f_hw_value <= field_combo_r1_f_hw_next;
  always @(posedge clk)
    if (rst) field_storage_r1_f_sw_value <= 1'h0;
    else if (_011_) field_storage_r1_f_sw_value <= field_combo_r1_f_sw_next;
  always @(posedge clk)
    if (rst) field_storage_r1_events_f_hw_count_value[0] <= 1'h0;
    else if (field_storage_r1_f_hw_value) field_storage_r1_events_f_hw_count_value[0] <= _027_[0];
  always @(posedge clk)
    if (rst) field_storage_r1_events_f_hw_count_value[1] <= 1'h0;
    else if (field_storage_r1_f_hw_value) field_storage_r1_events_f_hw_count_value[1] <= _028_[1];
  always @(posedge clk)
    if (rst) field_storage_r1_events_f_hw_count_value[2] <= 1'h0;
    else if (field_storage_r1_f_hw_value) field_storage_r1_events_f_hw_count_value[2] <= _028_[2];
  always @(posedge clk)
    if (rst) field_storage_r1_events_f_hw_count_value[3] <= 1'h0;
    else if (field_storage_r1_f_hw_value) field_storage_r1_events_f_hw_count_value[3] <= _028_[3];
  always @(posedge clk)
    if (rst) field_storage_r1_events_f_sw_count_value[0] <= 1'h0;
    else if (field_storage_r1_f_sw_value) field_storage_r1_events_f_sw_count_value[0] <= _024_[0];
  always @(posedge clk)
    if (rst) field_storage_r1_events_f_sw_count_value[1] <= 1'h0;
    else if (field_storage_r1_f_sw_value) field_storage_r1_events_f_sw_count_value[1] <= _025_[1];
  always @(posedge clk)
    if (rst) field_storage_r1_events_f_sw_count_value[2] <= 1'h0;
    else if (field_storage_r1_f_sw_value) field_storage_r1_events_f_sw_count_value[2] <= _025_[2];
  always @(posedge clk)
    if (rst) field_storage_r1_events_f_sw_count_value[3] <= 1'h0;
    else if (field_storage_r1_f_sw_value) field_storage_r1_events_f_sw_count_value[3] <= _025_[3];
  always @(posedge clk)
    if (_012_) cpuif_req <= 1'h0;
    else if (s_apb_psel) cpuif_req <= 1'h1;
  always @(posedge clk)
    if (rst) cpuif_req_is_wr <= 1'h0;
    else if (_009_) cpuif_req_is_wr <= s_apb_pwrite;
  reg \cpuif_wr_data_reg[0] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[0]  <= 1'h0;
    else if (_009_) \cpuif_wr_data_reg[0]  <= s_apb_pwdata[0];
  assign cpuif_wr_data[0] = \cpuif_wr_data_reg[0] ;
  reg \cpuif_wr_data_reg[1] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_data_reg[1]  <= 1'h0;
    else if (_009_) \cpuif_wr_data_reg[1]  <= s_apb_pwdata[1];
  assign cpuif_wr_data[1] = \cpuif_wr_data_reg[1] ;
  reg \cpuif_wr_biten_reg[3] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[3]  <= 1'h0;
    else if (_009_) \cpuif_wr_biten_reg[3]  <= s_apb_pstrb[0];
  assign cpuif_wr_biten[3] = \cpuif_wr_biten_reg[3] ;
  reg \cpuif_addr_reg[2] ;
  always @(posedge clk)
    if (rst) \cpuif_addr_reg[2]  <= 1'h0;
    else if (_009_) \cpuif_addr_reg[2]  <= s_apb_paddr[2];
  assign cpuif_addr[2] = \cpuif_addr_reg[2] ;
  always @(posedge clk)
    if (rst) is_active <= 1'h0;
    else is_active <= _022_;
  assign _027_[0] = ~field_storage_r1_events_f_hw_count_value[0];
  assign _024_[0] = ~field_storage_r1_events_f_sw_count_value[0];
  assign decoded_reg_strb_r1 = cpuif_req & _014_;
  assign decoded_reg_strb_r1_events = cpuif_req & cpuif_addr[2];
  assign _003_ = field_storage_r1_f_sw_value & _018_;
  assign _004_ = cpuif_wr_data[0] & cpuif_wr_biten[3];
  assign _019_ = _003_ | _004_;
  assign _005_ = field_storage_r1_f_hw_value & _018_;
  assign _006_ = cpuif_wr_data[1] & cpuif_wr_biten[3];
  assign _020_ = _005_ | _006_;
  assign cpuif_wr_ack = cpuif_req & cpuif_req_is_wr;
  assign cpuif_rd_ack = cpuif_req & _017_;
  assign s_apb_prdata[0] = \readback_array[0] [0] | \readback_array[1] [0];
  assign s_apb_prdata[1] = \readback_array[0] [1] | \readback_array[1] [1];
  assign _025_[1] = field_storage_r1_events_f_sw_count_value[1] ^ field_storage_r1_events_f_sw_count_value[0];
  assign _025_[2] = field_storage_r1_events_f_sw_count_value[2] ^ _023_[1];
  assign _025_[3] = field_storage_r1_events_f_sw_count_value[3] ^ _023_[2];
  assign _028_[1] = field_storage_r1_events_f_hw_count_value[1] ^ field_storage_r1_events_f_hw_count_value[0];
  assign _028_[2] = field_storage_r1_events_f_hw_count_value[2] ^ _026_[1];
  assign _028_[3] = field_storage_r1_events_f_hw_count_value[3] ^ _026_[2];
  assign _023_[1] = field_storage_r1_events_f_sw_count_value[1] & field_storage_r1_events_f_sw_count_value[0];
  assign _023_[2] = field_storage_r1_events_f_sw_count_value[2] & _023_[1];
  assign _026_[1] = field_storage_r1_events_f_hw_count_value[1] & field_storage_r1_events_f_hw_count_value[0];
  assign _026_[2] = field_storage_r1_events_f_hw_count_value[2] & _026_[1];
  assign _011_ = field_combo_r1_f_sw_load_next & _008_;
  assign _007_ = hwif_in_r1_f_hw_we | _001_;
  assign _010_ = field_combo_r1_f_hw_load_next & _007_;
  assign _009_ = s_apb_psel & _013_;
  assign _008_ = hwif_in_r1_f_sw_we | _001_;
  assign _012_ = rst | is_active;
  assign _014_ = ~cpuif_addr[2];
  assign _017_ = ~cpuif_req_is_wr;
  assign s_apb_pready = cpuif_rd_ack | cpuif_wr_ack;
  assign _001_ = decoded_reg_strb_r1 & cpuif_req_is_wr;
  assign _015_ = decoded_reg_strb_r1 & _017_;
  assign _016_ = decoded_reg_strb_r1_events & _017_;
  assign \readback_array[0] [0] = _015_ ? field_storage_r1_f_sw_value : 1'h0;
  assign \readback_array[0] [1] = _015_ ? field_storage_r1_f_hw_value : 1'h0;
  assign \readback_array[1] [0] = _016_ ? field_storage_r1_events_f_sw_count_value[0] : 1'h0;
  assign \readback_array[1] [1] = _016_ ? field_storage_r1_events_f_sw_count_value[1] : 1'h0;
  assign \readback_array[1] [2] = _016_ ? field_storage_r1_events_f_sw_count_value[2] : 1'h0;
  assign \readback_array[1] [3] = _016_ ? field_storage_r1_events_f_sw_count_value[3] : 1'h0;
  assign \readback_array[1] [4] = _016_ ? field_storage_r1_events_f_hw_count_value[0] : 1'h0;
  assign \readback_array[1] [5] = _016_ ? field_storage_r1_events_f_hw_count_value[1] : 1'h0;
  assign \readback_array[1] [6] = _016_ ? field_storage_r1_events_f_hw_count_value[2] : 1'h0;
  assign \readback_array[1] [7] = _016_ ? field_storage_r1_events_f_hw_count_value[3] : 1'h0;
  assign _002_ = _001_ ? _020_ : 1'hx;
  assign field_combo_r1_f_hw_load_next = hwif_in_r1_f_hw_we ? 1'h1 : _001_;
  assign field_combo_r1_f_hw_next = hwif_in_r1_f_hw_we ? hwif_in_r1_f_hw : _002_;
  assign _000_ = hwif_in_r1_f_sw_we ? hwif_in_r1_f_sw : 1'hx;
  assign field_combo_r1_f_sw_load_next = _001_ ? 1'h1 : hwif_in_r1_f_sw_we;
  assign field_combo_r1_f_sw_next = _001_ ? _019_ : _000_;
  assign _021_ = ~s_apb_pready;
  assign _022_ = is_active ? _021_ : s_apb_psel;
  assign _018_ = ~cpuif_wr_biten[3];
  assign _013_ = ~is_active;
  assign _023_[0] = field_storage_r1_events_f_sw_count_value[0];
  assign _024_[3:1] = field_storage_r1_events_f_sw_count_value[3:1];
  assign _025_[0] = _024_[0];
  assign _026_[0] = field_storage_r1_events_f_hw_count_value[0];
  assign _027_[3:1] = field_storage_r1_events_f_hw_count_value[3:1];
  assign _028_[0] = _027_[0];
  assign cpuif_addr[1:0] = 2'h0;
  assign cpuif_rd_data = { 24'h000000, \readback_array[1] [7:2], s_apb_prdata[1:0] };
  assign cpuif_rd_err = 1'h0;
  assign cpuif_req_masked = cpuif_req;
  assign cpuif_req_stall_rd = 1'h0;
  assign cpuif_req_stall_wr = 1'h0;
  assign { cpuif_wr_biten[7:4], cpuif_wr_biten[2:0] } = { cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3] };
  assign cpuif_wr_err = 1'h0;
  assign decoded_req = cpuif_req;
  assign decoded_req_is_wr = cpuif_req_is_wr;
  assign decoded_wr_biten = { cpuif_wr_biten[31:8], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3] };
  assign decoded_wr_data = cpuif_wr_data;
  assign field_combo_r1_events_f_hw_count_load_next = field_storage_r1_f_hw_value;
  assign field_combo_r1_events_f_sw_count_load_next = field_storage_r1_f_sw_value;
  assign \readback_array[0] [31:2] = 30'h00000000;
  assign \readback_array[1] [31:8] = 24'h000000;
  assign readback_data = { 24'h000000, \readback_array[1] [7:2], s_apb_prdata[1:0] };
  assign readback_done = cpuif_rd_ack;
  assign readback_err = 1'h0;
  assign readback_external_rd_ack = 1'h0;
  assign s_apb_prdata[31:2] = { 24'h000000, \readback_array[1] [7:2] };
  assign s_apb_pslverr = 1'h0;
endmodule
