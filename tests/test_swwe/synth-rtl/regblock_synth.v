/* Generated by Yosys 0.57 (git sha1 3aca86049, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module regblock(clk, rst, s_apb_psel, s_apb_pwrite, s_apb_penable, s_apb_pprot, s_apb_paddr, s_apb_pwdata, s_apb_pstrb, s_apb_pready, s_apb_prdata, s_apb_pslverr, hwif_out_lock_intr, hwif_out_r1_intr, hwif_out_r1_f_incrthreshold, hwif_out_r1_f_decrthreshold, hwif_in_r1_f_swwe, hwif_out_r2_intr, hwif_out_r2_f_incrthreshold, hwif_out_r2_f_decrthreshold, hwif_in_r2_f_swwel
, hwif_out_r3_intr, hwif_out_r4_intr, hwif_out_r5_intr, hwif_out_r6_intr);
  input clk;
  wire clk;
  input rst;
  wire rst;
  input s_apb_psel;
  wire s_apb_psel;
  input s_apb_pwrite;
  wire s_apb_pwrite;
  input s_apb_penable;
  wire s_apb_penable;
  input [2:0] s_apb_pprot;
  wire [2:0] s_apb_pprot;
  input [2:0] s_apb_paddr;
  wire [2:0] s_apb_paddr;
  input [7:0] s_apb_pwdata;
  wire [7:0] s_apb_pwdata;
  input [0:0] s_apb_pstrb;
  wire [0:0] s_apb_pstrb;
  output s_apb_pready;
  wire s_apb_pready;
  output [7:0] s_apb_prdata;
  wire [7:0] s_apb_prdata;
  output s_apb_pslverr;
  wire s_apb_pslverr;
  output [0:0] hwif_out_lock_intr;
  wire [0:0] hwif_out_lock_intr;
  output [0:0] hwif_out_r1_intr;
  wire [0:0] hwif_out_r1_intr;
  output [0:0] hwif_out_r1_f_incrthreshold;
  wire [0:0] hwif_out_r1_f_incrthreshold;
  output [0:0] hwif_out_r1_f_decrthreshold;
  wire [0:0] hwif_out_r1_f_decrthreshold;
  input [0:0] hwif_in_r1_f_swwe;
  wire [0:0] hwif_in_r1_f_swwe;
  output [0:0] hwif_out_r2_intr;
  wire [0:0] hwif_out_r2_intr;
  output [0:0] hwif_out_r2_f_incrthreshold;
  wire [0:0] hwif_out_r2_f_incrthreshold;
  output [0:0] hwif_out_r2_f_decrthreshold;
  wire [0:0] hwif_out_r2_f_decrthreshold;
  input [0:0] hwif_in_r2_f_swwel;
  wire [0:0] hwif_in_r2_f_swwel;
  output [0:0] hwif_out_r3_intr;
  wire [0:0] hwif_out_r3_intr;
  output [0:0] hwif_out_r4_intr;
  wire [0:0] hwif_out_r4_intr;
  output [0:0] hwif_out_r5_intr;
  wire [0:0] hwif_out_r5_intr;
  output [0:0] hwif_out_r6_intr;
  wire [0:0] hwif_out_r6_intr;
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire [7:0] _004_;
  wire [7:0] _005_;
  wire [7:0] _006_;
  wire [7:0] _007_;
  wire [7:0] _008_;
  wire [7:0] _009_;
  wire [7:0] _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire [7:0] _054_;
  wire [7:0] _055_;
  wire [7:0] _056_;
  wire [7:0] _057_;
  wire [7:0] _058_;
  wire [7:0] _059_;
  wire [7:0] _060_;
  wire [7:0] _061_;
  wire [7:0] _062_;
  wire [7:0] _063_;
  wire [7:0] _064_;
  wire _065_;
  wire _066_;
  reg [2:0] cpuif_addr;
  wire cpuif_rd_ack;
  wire [7:0] cpuif_rd_data;
  wire cpuif_rd_err;
  reg cpuif_req;
  reg cpuif_req_is_wr;
  wire cpuif_req_masked;
  wire cpuif_req_stall_rd;
  wire cpuif_req_stall_wr;
  wire cpuif_wr_ack;
  wire [7:0] cpuif_wr_biten;
  reg [7:0] cpuif_wr_data;
  wire cpuif_wr_err;
  wire [0:0] decoded_reg_strb_lock;
  wire [0:0] decoded_reg_strb_r1;
  wire [0:0] decoded_reg_strb_r2;
  wire [0:0] decoded_reg_strb_r3;
  wire [0:0] decoded_reg_strb_r4;
  wire [0:0] decoded_reg_strb_r5;
  wire [0:0] decoded_reg_strb_r6;
  wire decoded_req;
  wire decoded_req_is_wr;
  wire [7:0] decoded_wr_biten;
  wire [7:0] decoded_wr_data;
  wire field_combo_lock_r3_swwe_load_next;
  wire field_combo_lock_r4_swwel_load_next;
  wire field_combo_r1_f_load_next;
  wire field_combo_r2_f_load_next;
  wire field_combo_r3_f_load_next;
  wire field_combo_r4_f_load_next;
  wire field_combo_r5_f_load_next;
  wire field_combo_r6_f_load_next;
  reg [0:0] field_storage_lock_r3_swwe_value;
  reg [0:0] field_storage_lock_r4_swwel_value;
  reg [7:0] field_storage_r1_f_value;
  reg [7:0] field_storage_r2_f_value;
  reg [7:0] field_storage_r3_f_value;
  reg [7:0] field_storage_r4_f_value;
  reg [7:0] field_storage_r5_f_value;
  reg [7:0] field_storage_r6_f_value;
  reg is_active;
  wire [7:0] \readback_array[0] ;
  wire [7:0] \readback_array[1] ;
  wire [7:0] \readback_array[2] ;
  wire [7:0] \readback_array[3] ;
  wire [7:0] \readback_array[4] ;
  wire [7:0] \readback_array[5] ;
  wire [7:0] \readback_array[6] ;
  wire [7:0] readback_data;
  wire readback_done;
  wire readback_err;
  wire readback_external_rd_ack;
  always @(posedge clk)
    if (rst) field_storage_lock_r4_swwel_value <= 1'h0;
    else if (field_combo_lock_r3_swwe_load_next) field_storage_lock_r4_swwel_value <= _053_;
  always @(posedge clk)
    if (rst) field_storage_lock_r3_swwe_value <= 1'h1;
    else if (field_combo_lock_r3_swwe_load_next) field_storage_lock_r3_swwe_value <= _052_;
  always @(posedge clk)
    if (rst) field_storage_r6_f_value[0] <= 1'h0;
    else if (field_combo_r6_f_load_next) field_storage_r6_f_value[0] <= _059_[0];
  always @(posedge clk)
    if (rst) field_storage_r6_f_value[1] <= 1'h1;
    else if (field_combo_r6_f_load_next) field_storage_r6_f_value[1] <= _059_[1];
  always @(posedge clk)
    if (rst) field_storage_r6_f_value[2] <= 1'h1;
    else if (field_combo_r6_f_load_next) field_storage_r6_f_value[2] <= _059_[2];
  always @(posedge clk)
    if (rst) field_storage_r6_f_value[3] <= 1'h0;
    else if (field_combo_r6_f_load_next) field_storage_r6_f_value[3] <= _059_[3];
  always @(posedge clk)
    if (rst) field_storage_r6_f_value[4] <= 1'h0;
    else if (field_combo_r6_f_load_next) field_storage_r6_f_value[4] <= _059_[4];
  always @(posedge clk)
    if (rst) field_storage_r6_f_value[5] <= 1'h1;
    else if (field_combo_r6_f_load_next) field_storage_r6_f_value[5] <= _059_[5];
  always @(posedge clk)
    if (rst) field_storage_r6_f_value[6] <= 1'h1;
    else if (field_combo_r6_f_load_next) field_storage_r6_f_value[6] <= _059_[6];
  always @(posedge clk)
    if (rst) field_storage_r6_f_value[7] <= 1'h0;
    else if (field_combo_r6_f_load_next) field_storage_r6_f_value[7] <= _059_[7];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[0] <= 1'h1;
    else if (field_combo_r5_f_load_next) field_storage_r5_f_value[0] <= _058_[0];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[1] <= 1'h0;
    else if (field_combo_r5_f_load_next) field_storage_r5_f_value[1] <= _058_[1];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[2] <= 1'h1;
    else if (field_combo_r5_f_load_next) field_storage_r5_f_value[2] <= _058_[2];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[3] <= 1'h0;
    else if (field_combo_r5_f_load_next) field_storage_r5_f_value[3] <= _058_[3];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[4] <= 1'h1;
    else if (field_combo_r5_f_load_next) field_storage_r5_f_value[4] <= _058_[4];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[5] <= 1'h0;
    else if (field_combo_r5_f_load_next) field_storage_r5_f_value[5] <= _058_[5];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[6] <= 1'h1;
    else if (field_combo_r5_f_load_next) field_storage_r5_f_value[6] <= _058_[6];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[7] <= 1'h0;
    else if (field_combo_r5_f_load_next) field_storage_r5_f_value[7] <= _058_[7];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[0] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[0] <= _057_[0];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[1] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[1] <= _057_[1];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[2] <= 1'h1;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[2] <= _057_[2];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[3] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[3] <= _057_[3];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[4] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[4] <= _057_[4];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[5] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[5] <= _057_[5];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[6] <= 1'h1;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[6] <= _057_[6];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[7] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[7] <= _057_[7];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[0] <= 1'h1;
    else if (field_combo_r3_f_load_next) field_storage_r3_f_value[0] <= _056_[0];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[1] <= 1'h1;
    else if (field_combo_r3_f_load_next) field_storage_r3_f_value[1] <= _056_[1];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[2] <= 1'h0;
    else if (field_combo_r3_f_load_next) field_storage_r3_f_value[2] <= _056_[2];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[3] <= 1'h0;
    else if (field_combo_r3_f_load_next) field_storage_r3_f_value[3] <= _056_[3];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[4] <= 1'h1;
    else if (field_combo_r3_f_load_next) field_storage_r3_f_value[4] <= _056_[4];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[5] <= 1'h1;
    else if (field_combo_r3_f_load_next) field_storage_r3_f_value[5] <= _056_[5];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[6] <= 1'h0;
    else if (field_combo_r3_f_load_next) field_storage_r3_f_value[6] <= _056_[6];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[7] <= 1'h0;
    else if (field_combo_r3_f_load_next) field_storage_r3_f_value[7] <= _056_[7];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[0] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[0] <= _055_[0];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[1] <= 1'h1;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[1] <= _055_[1];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[2] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[2] <= _055_[2];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[3] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[3] <= _055_[3];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[4] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[4] <= _055_[4];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[5] <= 1'h1;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[5] <= _055_[5];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[6] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[6] <= _055_[6];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[7] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[7] <= _055_[7];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[0] <= 1'h1;
    else if (field_combo_r1_f_load_next) field_storage_r1_f_value[0] <= _054_[0];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[1] <= 1'h0;
    else if (field_combo_r1_f_load_next) field_storage_r1_f_value[1] <= _054_[1];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[2] <= 1'h0;
    else if (field_combo_r1_f_load_next) field_storage_r1_f_value[2] <= _054_[2];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[3] <= 1'h0;
    else if (field_combo_r1_f_load_next) field_storage_r1_f_value[3] <= _054_[3];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[4] <= 1'h1;
    else if (field_combo_r1_f_load_next) field_storage_r1_f_value[4] <= _054_[4];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[5] <= 1'h0;
    else if (field_combo_r1_f_load_next) field_storage_r1_f_value[5] <= _054_[5];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[6] <= 1'h0;
    else if (field_combo_r1_f_load_next) field_storage_r1_f_value[6] <= _054_[6];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[7] <= 1'h0;
    else if (field_combo_r1_f_load_next) field_storage_r1_f_value[7] <= _054_[7];
  always @(posedge clk)
    if (_012_) cpuif_req <= 1'h0;
    else if (s_apb_psel) cpuif_req <= 1'h1;
  always @(posedge clk)
    if (rst) cpuif_req_is_wr <= 1'h0;
    else if (_011_) cpuif_req_is_wr <= s_apb_pwrite;
  always @(posedge clk)
    if (rst) cpuif_addr[0] <= 1'h0;
    else if (_011_) cpuif_addr[0] <= s_apb_paddr[0];
  always @(posedge clk)
    if (rst) cpuif_addr[1] <= 1'h0;
    else if (_011_) cpuif_addr[1] <= s_apb_paddr[1];
  always @(posedge clk)
    if (rst) cpuif_addr[2] <= 1'h0;
    else if (_011_) cpuif_addr[2] <= s_apb_paddr[2];
  always @(posedge clk)
    if (rst) cpuif_wr_data[0] <= 1'h0;
    else if (_011_) cpuif_wr_data[0] <= s_apb_pwdata[0];
  always @(posedge clk)
    if (rst) cpuif_wr_data[1] <= 1'h0;
    else if (_011_) cpuif_wr_data[1] <= s_apb_pwdata[1];
  always @(posedge clk)
    if (rst) cpuif_wr_data[2] <= 1'h0;
    else if (_011_) cpuif_wr_data[2] <= s_apb_pwdata[2];
  always @(posedge clk)
    if (rst) cpuif_wr_data[3] <= 1'h0;
    else if (_011_) cpuif_wr_data[3] <= s_apb_pwdata[3];
  always @(posedge clk)
    if (rst) cpuif_wr_data[4] <= 1'h0;
    else if (_011_) cpuif_wr_data[4] <= s_apb_pwdata[4];
  always @(posedge clk)
    if (rst) cpuif_wr_data[5] <= 1'h0;
    else if (_011_) cpuif_wr_data[5] <= s_apb_pwdata[5];
  always @(posedge clk)
    if (rst) cpuif_wr_data[6] <= 1'h0;
    else if (_011_) cpuif_wr_data[6] <= s_apb_pwdata[6];
  always @(posedge clk)
    if (rst) cpuif_wr_data[7] <= 1'h0;
    else if (_011_) cpuif_wr_data[7] <= s_apb_pwdata[7];
  reg \cpuif_wr_biten_reg[6] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[6]  <= 1'h0;
    else if (_011_) \cpuif_wr_biten_reg[6]  <= s_apb_pstrb;
  assign cpuif_wr_biten[6] = \cpuif_wr_biten_reg[6] ;
  always @(posedge clk)
    if (rst) is_active <= 1'h0;
    else is_active <= _066_;
  assign _014_ = ~cpuif_addr[1];
  assign _015_ = ~cpuif_addr[2];
  assign _016_ = ~cpuif_addr[0];
  assign _022_ = _017_ | cpuif_addr[2];
  assign _023_ = _018_ | cpuif_addr[2];
  assign _019_ = _016_ | _014_;
  assign _024_ = _019_ | cpuif_addr[2];
  assign _020_ = cpuif_addr[0] | cpuif_addr[1];
  assign _025_ = _020_ | _015_;
  assign _017_ = _016_ | cpuif_addr[1];
  assign _026_ = _017_ | _015_;
  assign _018_ = cpuif_addr[0] | _014_;
  assign _027_ = _018_ | _015_;
  assign _011_ = s_apb_psel & _013_;
  assign _012_ = rst | is_active;
  assign _021_ = _020_ | cpuif_addr[2];
  assign _028_ = ~_021_;
  assign _029_ = ~_022_;
  assign _030_ = ~_023_;
  assign _031_ = ~_024_;
  assign _032_ = ~_025_;
  assign _033_ = ~_026_;
  assign _034_ = ~_027_;
  assign _048_ = ~hwif_in_r2_f_swwel;
  assign _049_ = ~field_storage_lock_r4_swwel_value;
  assign _050_ = ~cpuif_req_is_wr;
  assign s_apb_pready = cpuif_rd_ack | cpuif_wr_ack;
  assign field_combo_lock_r3_swwe_load_next = decoded_reg_strb_lock & cpuif_req_is_wr;
  assign _035_ = decoded_reg_strb_r1 & cpuif_req_is_wr;
  assign field_combo_r1_f_load_next = _035_ & hwif_in_r1_f_swwe;
  assign _036_ = decoded_reg_strb_r2 & cpuif_req_is_wr;
  assign field_combo_r2_f_load_next = _036_ & _048_;
  assign _037_ = decoded_reg_strb_r3 & cpuif_req_is_wr;
  assign field_combo_r3_f_load_next = _037_ & field_storage_lock_r3_swwe_value;
  assign _038_ = decoded_reg_strb_r4 & cpuif_req_is_wr;
  assign field_combo_r4_f_load_next = _038_ & _049_;
  assign _039_ = decoded_reg_strb_r5 & cpuif_req_is_wr;
  assign field_combo_r5_f_load_next = _039_ & field_storage_lock_r3_swwe_value;
  assign _040_ = decoded_reg_strb_r6 & cpuif_req_is_wr;
  assign field_combo_r6_f_load_next = _040_ & field_storage_lock_r4_swwel_value;
  assign _041_ = decoded_reg_strb_lock & _050_;
  assign _042_ = decoded_reg_strb_r1 & _050_;
  assign _043_ = decoded_reg_strb_r2 & _050_;
  assign _044_ = decoded_reg_strb_r3 & _050_;
  assign _045_ = decoded_reg_strb_r4 & _050_;
  assign _046_ = decoded_reg_strb_r5 & _050_;
  assign _047_ = decoded_reg_strb_r6 & _050_;
  assign \readback_array[0] [0] = _041_ ? field_storage_lock_r3_swwe_value : 1'h0;
  assign \readback_array[0] [1] = _041_ ? field_storage_lock_r4_swwel_value : 1'h0;
  assign \readback_array[1] [0] = _042_ ? field_storage_r1_f_value[0] : 1'h0;
  assign \readback_array[1] [1] = _042_ ? field_storage_r1_f_value[1] : 1'h0;
  assign \readback_array[1] [2] = _042_ ? field_storage_r1_f_value[2] : 1'h0;
  assign \readback_array[1] [3] = _042_ ? field_storage_r1_f_value[3] : 1'h0;
  assign \readback_array[1] [4] = _042_ ? field_storage_r1_f_value[4] : 1'h0;
  assign \readback_array[1] [5] = _042_ ? field_storage_r1_f_value[5] : 1'h0;
  assign \readback_array[1] [6] = _042_ ? field_storage_r1_f_value[6] : 1'h0;
  assign \readback_array[1] [7] = _042_ ? field_storage_r1_f_value[7] : 1'h0;
  assign \readback_array[2] [0] = _043_ ? field_storage_r2_f_value[0] : 1'h0;
  assign \readback_array[2] [1] = _043_ ? field_storage_r2_f_value[1] : 1'h0;
  assign \readback_array[2] [2] = _043_ ? field_storage_r2_f_value[2] : 1'h0;
  assign \readback_array[2] [3] = _043_ ? field_storage_r2_f_value[3] : 1'h0;
  assign \readback_array[2] [4] = _043_ ? field_storage_r2_f_value[4] : 1'h0;
  assign \readback_array[2] [5] = _043_ ? field_storage_r2_f_value[5] : 1'h0;
  assign \readback_array[2] [6] = _043_ ? field_storage_r2_f_value[6] : 1'h0;
  assign \readback_array[2] [7] = _043_ ? field_storage_r2_f_value[7] : 1'h0;
  assign \readback_array[3] [0] = _044_ ? field_storage_r3_f_value[0] : 1'h0;
  assign \readback_array[3] [1] = _044_ ? field_storage_r3_f_value[1] : 1'h0;
  assign \readback_array[3] [2] = _044_ ? field_storage_r3_f_value[2] : 1'h0;
  assign \readback_array[3] [3] = _044_ ? field_storage_r3_f_value[3] : 1'h0;
  assign \readback_array[3] [4] = _044_ ? field_storage_r3_f_value[4] : 1'h0;
  assign \readback_array[3] [5] = _044_ ? field_storage_r3_f_value[5] : 1'h0;
  assign \readback_array[3] [6] = _044_ ? field_storage_r3_f_value[6] : 1'h0;
  assign \readback_array[3] [7] = _044_ ? field_storage_r3_f_value[7] : 1'h0;
  assign \readback_array[4] [0] = _045_ ? field_storage_r4_f_value[0] : 1'h0;
  assign \readback_array[4] [1] = _045_ ? field_storage_r4_f_value[1] : 1'h0;
  assign \readback_array[4] [2] = _045_ ? field_storage_r4_f_value[2] : 1'h0;
  assign \readback_array[4] [3] = _045_ ? field_storage_r4_f_value[3] : 1'h0;
  assign \readback_array[4] [4] = _045_ ? field_storage_r4_f_value[4] : 1'h0;
  assign \readback_array[4] [5] = _045_ ? field_storage_r4_f_value[5] : 1'h0;
  assign \readback_array[4] [6] = _045_ ? field_storage_r4_f_value[6] : 1'h0;
  assign \readback_array[4] [7] = _045_ ? field_storage_r4_f_value[7] : 1'h0;
  assign \readback_array[5] [0] = _046_ ? field_storage_r5_f_value[0] : 1'h0;
  assign \readback_array[5] [1] = _046_ ? field_storage_r5_f_value[1] : 1'h0;
  assign \readback_array[5] [2] = _046_ ? field_storage_r5_f_value[2] : 1'h0;
  assign \readback_array[5] [3] = _046_ ? field_storage_r5_f_value[3] : 1'h0;
  assign \readback_array[5] [4] = _046_ ? field_storage_r5_f_value[4] : 1'h0;
  assign \readback_array[5] [5] = _046_ ? field_storage_r5_f_value[5] : 1'h0;
  assign \readback_array[5] [6] = _046_ ? field_storage_r5_f_value[6] : 1'h0;
  assign \readback_array[5] [7] = _046_ ? field_storage_r5_f_value[7] : 1'h0;
  assign \readback_array[6] [0] = _047_ ? field_storage_r6_f_value[0] : 1'h0;
  assign \readback_array[6] [1] = _047_ ? field_storage_r6_f_value[1] : 1'h0;
  assign \readback_array[6] [2] = _047_ ? field_storage_r6_f_value[2] : 1'h0;
  assign \readback_array[6] [3] = _047_ ? field_storage_r6_f_value[3] : 1'h0;
  assign \readback_array[6] [4] = _047_ ? field_storage_r6_f_value[4] : 1'h0;
  assign \readback_array[6] [5] = _047_ ? field_storage_r6_f_value[5] : 1'h0;
  assign \readback_array[6] [6] = _047_ ? field_storage_r6_f_value[6] : 1'h0;
  assign \readback_array[6] [7] = _047_ ? field_storage_r6_f_value[7] : 1'h0;
  assign _065_ = ~s_apb_pready;
  assign _066_ = is_active ? _065_ : s_apb_psel;
  assign _051_ = ~cpuif_wr_biten[6];
  assign _013_ = ~is_active;
  assign decoded_reg_strb_lock = cpuif_req & _028_;
  assign decoded_reg_strb_r1 = cpuif_req & _029_;
  assign decoded_reg_strb_r2 = cpuif_req & _030_;
  assign decoded_reg_strb_r3 = cpuif_req & _031_;
  assign decoded_reg_strb_r4 = cpuif_req & _032_;
  assign decoded_reg_strb_r5 = cpuif_req & _033_;
  assign decoded_reg_strb_r6 = cpuif_req & _034_;
  assign _000_ = field_storage_lock_r3_swwe_value & _051_;
  assign _052_ = _000_ | _001_;
  assign _002_ = field_storage_lock_r4_swwel_value & _051_;
  assign _053_ = _002_ | _003_;
  assign _004_[0] = field_storage_r1_f_value[0] & _051_;
  assign _004_[1] = field_storage_r1_f_value[1] & _051_;
  assign _004_[2] = field_storage_r1_f_value[2] & _051_;
  assign _004_[3] = field_storage_r1_f_value[3] & _051_;
  assign _004_[4] = field_storage_r1_f_value[4] & _051_;
  assign _004_[5] = field_storage_r1_f_value[5] & _051_;
  assign _004_[6] = field_storage_r1_f_value[6] & _051_;
  assign _004_[7] = field_storage_r1_f_value[7] & _051_;
  assign _054_[0] = _004_[0] | _001_;
  assign _054_[1] = _004_[1] | _003_;
  assign _054_[2] = _004_[2] | _005_[2];
  assign _054_[3] = _004_[3] | _005_[3];
  assign _054_[4] = _004_[4] | _005_[4];
  assign _054_[5] = _004_[5] | _005_[5];
  assign _054_[6] = _004_[6] | _005_[6];
  assign _054_[7] = _004_[7] | _005_[7];
  assign _006_[0] = field_storage_r2_f_value[0] & _051_;
  assign _006_[1] = field_storage_r2_f_value[1] & _051_;
  assign _006_[2] = field_storage_r2_f_value[2] & _051_;
  assign _006_[3] = field_storage_r2_f_value[3] & _051_;
  assign _006_[4] = field_storage_r2_f_value[4] & _051_;
  assign _006_[5] = field_storage_r2_f_value[5] & _051_;
  assign _006_[6] = field_storage_r2_f_value[6] & _051_;
  assign _006_[7] = field_storage_r2_f_value[7] & _051_;
  assign _055_[0] = _006_[0] | _001_;
  assign _055_[1] = _006_[1] | _003_;
  assign _055_[2] = _006_[2] | _005_[2];
  assign _055_[3] = _006_[3] | _005_[3];
  assign _055_[4] = _006_[4] | _005_[4];
  assign _055_[5] = _006_[5] | _005_[5];
  assign _055_[6] = _006_[6] | _005_[6];
  assign _055_[7] = _006_[7] | _005_[7];
  assign _007_[0] = field_storage_r3_f_value[0] & _051_;
  assign _007_[1] = field_storage_r3_f_value[1] & _051_;
  assign _007_[2] = field_storage_r3_f_value[2] & _051_;
  assign _007_[3] = field_storage_r3_f_value[3] & _051_;
  assign _007_[4] = field_storage_r3_f_value[4] & _051_;
  assign _007_[5] = field_storage_r3_f_value[5] & _051_;
  assign _007_[6] = field_storage_r3_f_value[6] & _051_;
  assign _007_[7] = field_storage_r3_f_value[7] & _051_;
  assign _056_[0] = _007_[0] | _001_;
  assign _056_[1] = _007_[1] | _003_;
  assign _056_[2] = _007_[2] | _005_[2];
  assign _056_[3] = _007_[3] | _005_[3];
  assign _056_[4] = _007_[4] | _005_[4];
  assign _056_[5] = _007_[5] | _005_[5];
  assign _056_[6] = _007_[6] | _005_[6];
  assign _056_[7] = _007_[7] | _005_[7];
  assign _008_[0] = field_storage_r4_f_value[0] & _051_;
  assign _008_[1] = field_storage_r4_f_value[1] & _051_;
  assign _008_[2] = field_storage_r4_f_value[2] & _051_;
  assign _008_[3] = field_storage_r4_f_value[3] & _051_;
  assign _008_[4] = field_storage_r4_f_value[4] & _051_;
  assign _008_[5] = field_storage_r4_f_value[5] & _051_;
  assign _008_[6] = field_storage_r4_f_value[6] & _051_;
  assign _008_[7] = field_storage_r4_f_value[7] & _051_;
  assign _057_[0] = _008_[0] | _001_;
  assign _057_[1] = _008_[1] | _003_;
  assign _057_[2] = _008_[2] | _005_[2];
  assign _057_[3] = _008_[3] | _005_[3];
  assign _057_[4] = _008_[4] | _005_[4];
  assign _057_[5] = _008_[5] | _005_[5];
  assign _057_[6] = _008_[6] | _005_[6];
  assign _057_[7] = _008_[7] | _005_[7];
  assign _009_[0] = field_storage_r5_f_value[0] & _051_;
  assign _009_[1] = field_storage_r5_f_value[1] & _051_;
  assign _009_[2] = field_storage_r5_f_value[2] & _051_;
  assign _009_[3] = field_storage_r5_f_value[3] & _051_;
  assign _009_[4] = field_storage_r5_f_value[4] & _051_;
  assign _009_[5] = field_storage_r5_f_value[5] & _051_;
  assign _009_[6] = field_storage_r5_f_value[6] & _051_;
  assign _009_[7] = field_storage_r5_f_value[7] & _051_;
  assign _058_[0] = _009_[0] | _001_;
  assign _058_[1] = _009_[1] | _003_;
  assign _058_[2] = _009_[2] | _005_[2];
  assign _058_[3] = _009_[3] | _005_[3];
  assign _058_[4] = _009_[4] | _005_[4];
  assign _058_[5] = _009_[5] | _005_[5];
  assign _058_[6] = _009_[6] | _005_[6];
  assign _058_[7] = _009_[7] | _005_[7];
  assign _010_[0] = field_storage_r6_f_value[0] & _051_;
  assign _010_[1] = field_storage_r6_f_value[1] & _051_;
  assign _010_[2] = field_storage_r6_f_value[2] & _051_;
  assign _010_[3] = field_storage_r6_f_value[3] & _051_;
  assign _010_[4] = field_storage_r6_f_value[4] & _051_;
  assign _010_[5] = field_storage_r6_f_value[5] & _051_;
  assign _010_[6] = field_storage_r6_f_value[6] & _051_;
  assign _010_[7] = field_storage_r6_f_value[7] & _051_;
  assign _001_ = cpuif_wr_data[0] & cpuif_wr_biten[6];
  assign _003_ = cpuif_wr_data[1] & cpuif_wr_biten[6];
  assign _005_[2] = cpuif_wr_data[2] & cpuif_wr_biten[6];
  assign _005_[3] = cpuif_wr_data[3] & cpuif_wr_biten[6];
  assign _005_[4] = cpuif_wr_data[4] & cpuif_wr_biten[6];
  assign _005_[5] = cpuif_wr_data[5] & cpuif_wr_biten[6];
  assign _005_[6] = cpuif_wr_data[6] & cpuif_wr_biten[6];
  assign _005_[7] = cpuif_wr_data[7] & cpuif_wr_biten[6];
  assign _059_[0] = _010_[0] | _001_;
  assign _059_[1] = _010_[1] | _003_;
  assign _059_[2] = _010_[2] | _005_[2];
  assign _059_[3] = _010_[3] | _005_[3];
  assign _059_[4] = _010_[4] | _005_[4];
  assign _059_[5] = _010_[5] | _005_[5];
  assign _059_[6] = _010_[6] | _005_[6];
  assign _059_[7] = _010_[7] | _005_[7];
  assign cpuif_wr_ack = cpuif_req & cpuif_req_is_wr;
  assign cpuif_rd_ack = cpuif_req & _050_;
  assign _060_[0] = \readback_array[0] [0] | \readback_array[1] [0];
  assign _060_[1] = \readback_array[0] [1] | \readback_array[1] [1];
  assign _061_[0] = _060_[0] | \readback_array[2] [0];
  assign _061_[1] = _060_[1] | \readback_array[2] [1];
  assign _061_[2] = \readback_array[1] [2] | \readback_array[2] [2];
  assign _061_[3] = \readback_array[1] [3] | \readback_array[2] [3];
  assign _061_[4] = \readback_array[1] [4] | \readback_array[2] [4];
  assign _061_[5] = \readback_array[1] [5] | \readback_array[2] [5];
  assign _061_[6] = \readback_array[1] [6] | \readback_array[2] [6];
  assign _061_[7] = \readback_array[1] [7] | \readback_array[2] [7];
  assign _062_[0] = _061_[0] | \readback_array[3] [0];
  assign _062_[1] = _061_[1] | \readback_array[3] [1];
  assign _062_[2] = _061_[2] | \readback_array[3] [2];
  assign _062_[3] = _061_[3] | \readback_array[3] [3];
  assign _062_[4] = _061_[4] | \readback_array[3] [4];
  assign _062_[5] = _061_[5] | \readback_array[3] [5];
  assign _062_[6] = _061_[6] | \readback_array[3] [6];
  assign _062_[7] = _061_[7] | \readback_array[3] [7];
  assign _063_[0] = _062_[0] | \readback_array[4] [0];
  assign _063_[1] = _062_[1] | \readback_array[4] [1];
  assign _063_[2] = _062_[2] | \readback_array[4] [2];
  assign _063_[3] = _062_[3] | \readback_array[4] [3];
  assign _063_[4] = _062_[4] | \readback_array[4] [4];
  assign _063_[5] = _062_[5] | \readback_array[4] [5];
  assign _063_[6] = _062_[6] | \readback_array[4] [6];
  assign _063_[7] = _062_[7] | \readback_array[4] [7];
  assign _064_[0] = _063_[0] | \readback_array[5] [0];
  assign _064_[1] = _063_[1] | \readback_array[5] [1];
  assign _064_[2] = _063_[2] | \readback_array[5] [2];
  assign _064_[3] = _063_[3] | \readback_array[5] [3];
  assign _064_[4] = _063_[4] | \readback_array[5] [4];
  assign _064_[5] = _063_[5] | \readback_array[5] [5];
  assign _064_[6] = _063_[6] | \readback_array[5] [6];
  assign _064_[7] = _063_[7] | \readback_array[5] [7];
  assign s_apb_prdata[0] = _064_[0] | \readback_array[6] [0];
  assign s_apb_prdata[1] = _064_[1] | \readback_array[6] [1];
  assign s_apb_prdata[2] = _064_[2] | \readback_array[6] [2];
  assign s_apb_prdata[3] = _064_[3] | \readback_array[6] [3];
  assign s_apb_prdata[4] = _064_[4] | \readback_array[6] [4];
  assign s_apb_prdata[5] = _064_[5] | \readback_array[6] [5];
  assign s_apb_prdata[6] = _064_[6] | \readback_array[6] [6];
  assign s_apb_prdata[7] = _064_[7] | \readback_array[6] [7];
  assign _005_[1:0] = { _003_, _001_ };
  assign _060_[7:2] = \readback_array[1] [7:2];
  assign cpuif_rd_data = s_apb_prdata;
  assign cpuif_rd_err = 1'h0;
  assign cpuif_req_masked = cpuif_req;
  assign cpuif_req_stall_rd = 1'h0;
  assign cpuif_req_stall_wr = 1'h0;
  assign { cpuif_wr_biten[7], cpuif_wr_biten[5:0] } = { cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6] };
  assign cpuif_wr_err = 1'h0;
  assign decoded_req = cpuif_req;
  assign decoded_req_is_wr = cpuif_req_is_wr;
  assign decoded_wr_biten = { cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6], cpuif_wr_biten[6] };
  assign decoded_wr_data = cpuif_wr_data;
  assign field_combo_lock_r4_swwel_load_next = field_combo_lock_r3_swwe_load_next;
  assign \readback_array[0] [7:2] = 6'h00;
  assign readback_data = s_apb_prdata;
  assign readback_done = cpuif_rd_ack;
  assign readback_err = 1'h0;
  assign readback_external_rd_ack = 1'h0;
  assign s_apb_pslverr = 1'h0;
endmodule
