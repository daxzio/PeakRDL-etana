/* Generated by Yosys 0.58 (git sha1 157aabb58, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module regblock(clk, rst, s_apb_psel, s_apb_pwrite, s_apb_penable, s_apb_pprot, s_apb_paddr, s_apb_pwdata, s_apb_pstrb, s_apb_pready, s_apb_prdata, s_apb_pslverr, hwif_in_r1_f, hwif_out_r1_f_rd_swacc, hwif_out_r2_f, hwif_out_r2_f_wr_swacc);
  input clk;
  wire clk;
  input rst;
  wire rst;
  input s_apb_psel;
  wire s_apb_psel;
  input s_apb_pwrite;
  wire s_apb_pwrite;
  input s_apb_penable;
  wire s_apb_penable;
  input [2:0] s_apb_pprot;
  wire [2:0] s_apb_pprot;
  input [0:0] s_apb_paddr;
  wire [0:0] s_apb_paddr;
  input [7:0] s_apb_pwdata;
  wire [7:0] s_apb_pwdata;
  input [0:0] s_apb_pstrb;
  wire [0:0] s_apb_pstrb;
  output s_apb_pready;
  wire s_apb_pready;
  output [7:0] s_apb_prdata;
  wire [7:0] s_apb_prdata;
  output s_apb_pslverr;
  wire s_apb_pslverr;
  input [7:0] hwif_in_r1_f;
  wire [7:0] hwif_in_r1_f;
  output [0:0] hwif_out_r1_f_rd_swacc;
  wire [0:0] hwif_out_r1_f_rd_swacc;
  output [7:0] hwif_out_r2_f;
  wire [7:0] hwif_out_r2_f;
  output [0:0] hwif_out_r2_f_wr_swacc;
  wire [0:0] hwif_out_r2_f_wr_swacc;
  wire [7:0] _00_;
  wire [7:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire [7:0] _08_;
  wire [7:0] _09_;
  wire _10_;
  wire _11_;
  reg [0:0] cpuif_addr;
  wire cpuif_rd_ack;
  wire [7:0] cpuif_rd_data;
  wire cpuif_rd_err;
  reg cpuif_req;
  reg cpuif_req_is_wr;
  wire cpuif_req_masked;
  wire cpuif_req_stall_rd;
  wire cpuif_req_stall_wr;
  wire cpuif_wr_ack;
  wire [7:0] cpuif_wr_biten;
  reg [7:0] cpuif_wr_data;
  wire cpuif_wr_err;
  wire [0:0] decoded_reg_strb_r1;
  wire [0:0] decoded_reg_strb_r2;
  wire decoded_req;
  wire decoded_req_is_wr;
  wire [7:0] decoded_wr_biten;
  wire [7:0] decoded_wr_data;
  wire field_combo_r2_f_load_next;
  reg [7:0] field_storage_r2_f_value;
  reg is_active;
  wire [7:0] \readback_array[0] ;
  wire [7:0] \readback_array[1] ;
  wire [7:0] readback_data;
  wire readback_done;
  wire readback_err;
  wire readback_external_rd_ack;
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[0] <= 1'h0;
    else if (hwif_out_r2_f_wr_swacc) field_storage_r2_f_value[0] <= _09_[0];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[1] <= 1'h0;
    else if (hwif_out_r2_f_wr_swacc) field_storage_r2_f_value[1] <= _09_[1];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[2] <= 1'h1;
    else if (hwif_out_r2_f_wr_swacc) field_storage_r2_f_value[2] <= _09_[2];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[3] <= 1'h0;
    else if (hwif_out_r2_f_wr_swacc) field_storage_r2_f_value[3] <= _09_[3];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[4] <= 1'h1;
    else if (hwif_out_r2_f_wr_swacc) field_storage_r2_f_value[4] <= _09_[4];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[5] <= 1'h0;
    else if (hwif_out_r2_f_wr_swacc) field_storage_r2_f_value[5] <= _09_[5];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[6] <= 1'h0;
    else if (hwif_out_r2_f_wr_swacc) field_storage_r2_f_value[6] <= _09_[6];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[7] <= 1'h0;
    else if (hwif_out_r2_f_wr_swacc) field_storage_r2_f_value[7] <= _09_[7];
  always @(posedge clk)
    if (_03_) cpuif_req <= 1'h0;
    else if (s_apb_psel) cpuif_req <= 1'h1;
  always @(posedge clk)
    if (rst) cpuif_req_is_wr <= 1'h0;
    else if (_02_) cpuif_req_is_wr <= s_apb_pwrite;
  always @(posedge clk)
    if (rst) cpuif_addr <= 1'h0;
    else if (_02_) cpuif_addr <= s_apb_paddr;
  always @(posedge clk)
    if (rst) cpuif_wr_data[0] <= 1'h0;
    else if (_02_) cpuif_wr_data[0] <= s_apb_pwdata[0];
  always @(posedge clk)
    if (rst) cpuif_wr_data[1] <= 1'h0;
    else if (_02_) cpuif_wr_data[1] <= s_apb_pwdata[1];
  always @(posedge clk)
    if (rst) cpuif_wr_data[2] <= 1'h0;
    else if (_02_) cpuif_wr_data[2] <= s_apb_pwdata[2];
  always @(posedge clk)
    if (rst) cpuif_wr_data[3] <= 1'h0;
    else if (_02_) cpuif_wr_data[3] <= s_apb_pwdata[3];
  always @(posedge clk)
    if (rst) cpuif_wr_data[4] <= 1'h0;
    else if (_02_) cpuif_wr_data[4] <= s_apb_pwdata[4];
  always @(posedge clk)
    if (rst) cpuif_wr_data[5] <= 1'h0;
    else if (_02_) cpuif_wr_data[5] <= s_apb_pwdata[5];
  always @(posedge clk)
    if (rst) cpuif_wr_data[6] <= 1'h0;
    else if (_02_) cpuif_wr_data[6] <= s_apb_pwdata[6];
  always @(posedge clk)
    if (rst) cpuif_wr_data[7] <= 1'h0;
    else if (_02_) cpuif_wr_data[7] <= s_apb_pwdata[7];
  reg \cpuif_wr_biten_reg[3] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[3]  <= 1'h0;
    else if (_02_) \cpuif_wr_biten_reg[3]  <= s_apb_pstrb;
  assign cpuif_wr_biten[3] = \cpuif_wr_biten_reg[3] ;
  always @(posedge clk)
    if (rst) is_active <= 1'h0;
    else is_active <= _11_;
  assign decoded_reg_strb_r1 = cpuif_req & _05_;
  assign decoded_reg_strb_r2 = cpuif_req & cpuif_addr;
  assign _00_[0] = field_storage_r2_f_value[0] & _08_[7];
  assign _00_[1] = field_storage_r2_f_value[1] & _08_[7];
  assign _00_[2] = field_storage_r2_f_value[2] & _08_[7];
  assign _00_[3] = field_storage_r2_f_value[3] & _08_[7];
  assign _00_[4] = field_storage_r2_f_value[4] & _08_[7];
  assign _00_[5] = field_storage_r2_f_value[5] & _08_[7];
  assign _00_[6] = field_storage_r2_f_value[6] & _08_[7];
  assign _00_[7] = field_storage_r2_f_value[7] & _08_[7];
  assign _01_[0] = cpuif_wr_data[0] & cpuif_wr_biten[3];
  assign _01_[1] = cpuif_wr_data[1] & cpuif_wr_biten[3];
  assign _01_[2] = cpuif_wr_data[2] & cpuif_wr_biten[3];
  assign _01_[3] = cpuif_wr_data[3] & cpuif_wr_biten[3];
  assign _01_[4] = cpuif_wr_data[4] & cpuif_wr_biten[3];
  assign _01_[5] = cpuif_wr_data[5] & cpuif_wr_biten[3];
  assign _01_[6] = cpuif_wr_data[6] & cpuif_wr_biten[3];
  assign _01_[7] = cpuif_wr_data[7] & cpuif_wr_biten[3];
  assign _09_[0] = _00_[0] | _01_[0];
  assign _09_[1] = _00_[1] | _01_[1];
  assign _09_[2] = _00_[2] | _01_[2];
  assign _09_[3] = _00_[3] | _01_[3];
  assign _09_[4] = _00_[4] | _01_[4];
  assign _09_[5] = _00_[5] | _01_[5];
  assign _09_[6] = _00_[6] | _01_[6];
  assign _09_[7] = _00_[7] | _01_[7];
  assign cpuif_wr_ack = cpuif_req & cpuif_req_is_wr;
  assign cpuif_rd_ack = cpuif_req & _07_;
  assign s_apb_prdata[0] = \readback_array[0] [0] | \readback_array[1] [0];
  assign s_apb_prdata[1] = \readback_array[0] [1] | \readback_array[1] [1];
  assign s_apb_prdata[2] = \readback_array[0] [2] | \readback_array[1] [2];
  assign s_apb_prdata[3] = \readback_array[0] [3] | \readback_array[1] [3];
  assign s_apb_prdata[4] = \readback_array[0] [4] | \readback_array[1] [4];
  assign s_apb_prdata[5] = \readback_array[0] [5] | \readback_array[1] [5];
  assign s_apb_prdata[6] = \readback_array[0] [6] | \readback_array[1] [6];
  assign s_apb_prdata[7] = \readback_array[0] [7] | \readback_array[1] [7];
  assign _02_ = s_apb_psel & _04_;
  assign _03_ = rst | is_active;
  assign _07_ = ~cpuif_req_is_wr;
  assign s_apb_pready = cpuif_rd_ack | cpuif_wr_ack;
  assign hwif_out_r2_f_wr_swacc = decoded_reg_strb_r2 & cpuif_req_is_wr;
  assign hwif_out_r1_f_rd_swacc = decoded_reg_strb_r1 & _07_;
  assign _06_ = decoded_reg_strb_r2 & _07_;
  assign \readback_array[0] [0] = hwif_out_r1_f_rd_swacc ? hwif_in_r1_f[0] : 1'h0;
  assign \readback_array[0] [1] = hwif_out_r1_f_rd_swacc ? hwif_in_r1_f[1] : 1'h0;
  assign \readback_array[0] [2] = hwif_out_r1_f_rd_swacc ? hwif_in_r1_f[2] : 1'h0;
  assign \readback_array[0] [3] = hwif_out_r1_f_rd_swacc ? hwif_in_r1_f[3] : 1'h0;
  assign \readback_array[0] [4] = hwif_out_r1_f_rd_swacc ? hwif_in_r1_f[4] : 1'h0;
  assign \readback_array[0] [5] = hwif_out_r1_f_rd_swacc ? hwif_in_r1_f[5] : 1'h0;
  assign \readback_array[0] [6] = hwif_out_r1_f_rd_swacc ? hwif_in_r1_f[6] : 1'h0;
  assign \readback_array[0] [7] = hwif_out_r1_f_rd_swacc ? hwif_in_r1_f[7] : 1'h0;
  assign \readback_array[1] [0] = _06_ ? field_storage_r2_f_value[0] : 1'h0;
  assign \readback_array[1] [1] = _06_ ? field_storage_r2_f_value[1] : 1'h0;
  assign \readback_array[1] [2] = _06_ ? field_storage_r2_f_value[2] : 1'h0;
  assign \readback_array[1] [3] = _06_ ? field_storage_r2_f_value[3] : 1'h0;
  assign \readback_array[1] [4] = _06_ ? field_storage_r2_f_value[4] : 1'h0;
  assign \readback_array[1] [5] = _06_ ? field_storage_r2_f_value[5] : 1'h0;
  assign \readback_array[1] [6] = _06_ ? field_storage_r2_f_value[6] : 1'h0;
  assign \readback_array[1] [7] = _06_ ? field_storage_r2_f_value[7] : 1'h0;
  assign _10_ = ~s_apb_pready;
  assign _11_ = is_active ? _10_ : s_apb_psel;
  assign _05_ = ~cpuif_addr;
  assign _04_ = ~is_active;
  assign _08_[7] = ~cpuif_wr_biten[3];
  assign _08_[6:0] = { _08_[7], _08_[7], _08_[7], _08_[7], _08_[7], _08_[7], _08_[7] };
  assign cpuif_rd_data = s_apb_prdata;
  assign cpuif_rd_err = 1'h0;
  assign cpuif_req_masked = cpuif_req;
  assign cpuif_req_stall_rd = 1'h0;
  assign cpuif_req_stall_wr = 1'h0;
  assign { cpuif_wr_biten[7:4], cpuif_wr_biten[2:0] } = { cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3] };
  assign cpuif_wr_err = 1'h0;
  assign decoded_req = cpuif_req;
  assign decoded_req_is_wr = cpuif_req_is_wr;
  assign decoded_wr_biten = { cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3], cpuif_wr_biten[3] };
  assign decoded_wr_data = cpuif_wr_data;
  assign field_combo_r2_f_load_next = hwif_out_r2_f_wr_swacc;
  assign hwif_out_r2_f = field_storage_r2_f_value;
  assign readback_data = s_apb_prdata;
  assign readback_done = cpuif_rd_ack;
  assign readback_err = 1'h0;
  assign readback_external_rd_ack = 1'h0;
  assign s_apb_pslverr = 1'h0;
endmodule
