/* Generated by Yosys 0.57 (git sha1 3aca86049, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module regblock(clk, rst, s_apb_psel, s_apb_pwrite, s_apb_penable, s_apb_pprot, s_apb_paddr, s_apb_pwdata, s_apb_pstrb, s_apb_pready, s_apb_prdata, s_apb_pslverr, hwif_out_r1_intr, hwif_in_r1_f, hwif_out_r1_f, hwif_out_r1_f_incrthreshold, hwif_out_r1_f_decrthreshold, hwif_in_r1_f_we, hwif_out_r2_intr, hwif_out_r2_f, hwif_out_r2_f_incrthreshold
, hwif_out_r2_f_decrthreshold, hwif_out_r3_intr, hwif_in_r3_f, hwif_out_r3_f_incrthreshold, hwif_out_r3_f_decrthreshold, hwif_in_r3_f_wel, hwif_out_r4_intr, hwif_out_r5_intr, hwif_in_r5_f, hwif_out_r5_f, hwif_out_r5_f_incrthreshold, hwif_out_r5_f_decrthreshold, hwif_in_r5_f_we, hwif_out_r6_intr, hwif_out_r6_f, hwif_out_r6_f_incrthreshold, hwif_out_r6_f_decrthreshold, hwif_out_r7_intr, hwif_in_r7_f, hwif_out_r7_f_incrthreshold, hwif_out_r7_f_decrthreshold
, hwif_out_r8_intr, hwif_out_r9_intr, hwif_in_r9_f, hwif_out_r9_f, hwif_out_r9_f_incrthreshold, hwif_out_r9_f_decrthreshold, hwif_in_r9_f_we, hwif_out_r10_intr, hwif_out_r10_f, hwif_out_r10_f_incrthreshold, hwif_out_r10_f_decrthreshold);
  input clk;
  wire clk;
  input rst;
  wire rst;
  input s_apb_psel;
  wire s_apb_psel;
  input s_apb_pwrite;
  wire s_apb_pwrite;
  input s_apb_penable;
  wire s_apb_penable;
  input [2:0] s_apb_pprot;
  wire [2:0] s_apb_pprot;
  input [3:0] s_apb_paddr;
  wire [3:0] s_apb_paddr;
  input [7:0] s_apb_pwdata;
  wire [7:0] s_apb_pwdata;
  input [0:0] s_apb_pstrb;
  wire [0:0] s_apb_pstrb;
  output s_apb_pready;
  wire s_apb_pready;
  output [7:0] s_apb_prdata;
  wire [7:0] s_apb_prdata;
  output s_apb_pslverr;
  wire s_apb_pslverr;
  output [0:0] hwif_out_r1_intr;
  wire [0:0] hwif_out_r1_intr;
  input [7:0] hwif_in_r1_f;
  wire [7:0] hwif_in_r1_f;
  output [7:0] hwif_out_r1_f;
  wire [7:0] hwif_out_r1_f;
  output [0:0] hwif_out_r1_f_incrthreshold;
  wire [0:0] hwif_out_r1_f_incrthreshold;
  output [0:0] hwif_out_r1_f_decrthreshold;
  wire [0:0] hwif_out_r1_f_decrthreshold;
  input [0:0] hwif_in_r1_f_we;
  wire [0:0] hwif_in_r1_f_we;
  output [0:0] hwif_out_r2_intr;
  wire [0:0] hwif_out_r2_intr;
  output [7:0] hwif_out_r2_f;
  wire [7:0] hwif_out_r2_f;
  output [0:0] hwif_out_r2_f_incrthreshold;
  wire [0:0] hwif_out_r2_f_incrthreshold;
  output [0:0] hwif_out_r2_f_decrthreshold;
  wire [0:0] hwif_out_r2_f_decrthreshold;
  output [0:0] hwif_out_r3_intr;
  wire [0:0] hwif_out_r3_intr;
  input [7:0] hwif_in_r3_f;
  wire [7:0] hwif_in_r3_f;
  output [0:0] hwif_out_r3_f_incrthreshold;
  wire [0:0] hwif_out_r3_f_incrthreshold;
  output [0:0] hwif_out_r3_f_decrthreshold;
  wire [0:0] hwif_out_r3_f_decrthreshold;
  input [0:0] hwif_in_r3_f_wel;
  wire [0:0] hwif_in_r3_f_wel;
  output [0:0] hwif_out_r4_intr;
  wire [0:0] hwif_out_r4_intr;
  output [0:0] hwif_out_r5_intr;
  wire [0:0] hwif_out_r5_intr;
  input [7:0] hwif_in_r5_f;
  wire [7:0] hwif_in_r5_f;
  output [7:0] hwif_out_r5_f;
  wire [7:0] hwif_out_r5_f;
  output [0:0] hwif_out_r5_f_incrthreshold;
  wire [0:0] hwif_out_r5_f_incrthreshold;
  output [0:0] hwif_out_r5_f_decrthreshold;
  wire [0:0] hwif_out_r5_f_decrthreshold;
  input [0:0] hwif_in_r5_f_we;
  wire [0:0] hwif_in_r5_f_we;
  output [0:0] hwif_out_r6_intr;
  wire [0:0] hwif_out_r6_intr;
  output [7:0] hwif_out_r6_f;
  wire [7:0] hwif_out_r6_f;
  output [0:0] hwif_out_r6_f_incrthreshold;
  wire [0:0] hwif_out_r6_f_incrthreshold;
  output [0:0] hwif_out_r6_f_decrthreshold;
  wire [0:0] hwif_out_r6_f_decrthreshold;
  output [0:0] hwif_out_r7_intr;
  wire [0:0] hwif_out_r7_intr;
  input [7:0] hwif_in_r7_f;
  wire [7:0] hwif_in_r7_f;
  output [0:0] hwif_out_r7_f_incrthreshold;
  wire [0:0] hwif_out_r7_f_incrthreshold;
  output [0:0] hwif_out_r7_f_decrthreshold;
  wire [0:0] hwif_out_r7_f_decrthreshold;
  output [0:0] hwif_out_r8_intr;
  wire [0:0] hwif_out_r8_intr;
  output [0:0] hwif_out_r9_intr;
  wire [0:0] hwif_out_r9_intr;
  input [7:0] hwif_in_r9_f;
  wire [7:0] hwif_in_r9_f;
  output [7:0] hwif_out_r9_f;
  wire [7:0] hwif_out_r9_f;
  output [0:0] hwif_out_r9_f_incrthreshold;
  wire [0:0] hwif_out_r9_f_incrthreshold;
  output [0:0] hwif_out_r9_f_decrthreshold;
  wire [0:0] hwif_out_r9_f_decrthreshold;
  input [0:0] hwif_in_r9_f_we;
  wire [0:0] hwif_in_r9_f_we;
  output [0:0] hwif_out_r10_intr;
  wire [0:0] hwif_out_r10_intr;
  output [7:0] hwif_out_r10_f;
  wire [7:0] hwif_out_r10_f;
  output [0:0] hwif_out_r10_f_incrthreshold;
  wire [0:0] hwif_out_r10_f_incrthreshold;
  output [0:0] hwif_out_r10_f_decrthreshold;
  wire [0:0] hwif_out_r10_f_decrthreshold;
  wire [7:0] _000_;
  wire _001_;
  wire [7:0] _002_;
  wire [7:0] _003_;
  wire [7:0] _004_;
  wire [7:0] _005_;
  wire [7:0] _006_;
  wire [7:0] _007_;
  wire [7:0] _008_;
  wire [7:0] _009_;
  wire [7:0] _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire [1:0] _024_;
  wire [1:0] _025_;
  wire [1:0] _026_;
  wire [1:0] _027_;
  wire [1:0] _028_;
  wire _029_;
  wire [1:0] _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire [7:0] _059_;
  wire [7:0] _060_;
  wire [7:0] _061_;
  wire [7:0] _062_;
  wire [7:0] _063_;
  wire [7:0] _064_;
  wire [7:0] _065_;
  wire [7:0] _066_;
  wire [7:0] _067_;
  wire [7:0] _068_;
  wire [7:0] _069_;
  wire [7:0] _070_;
  wire [7:0] _071_;
  wire _072_;
  wire _073_;
  reg [3:0] cpuif_addr;
  wire cpuif_rd_ack;
  wire [7:0] cpuif_rd_data;
  wire cpuif_rd_err;
  reg cpuif_req;
  reg cpuif_req_is_wr;
  wire cpuif_req_masked;
  wire cpuif_req_stall_rd;
  wire cpuif_req_stall_wr;
  wire cpuif_wr_ack;
  wire [7:0] cpuif_wr_biten;
  reg [7:0] cpuif_wr_data;
  wire cpuif_wr_err;
  wire [0:0] decoded_reg_strb_r1;
  wire [0:0] decoded_reg_strb_r10;
  wire [0:0] decoded_reg_strb_r2;
  wire [0:0] decoded_reg_strb_r3;
  wire [0:0] decoded_reg_strb_r4;
  wire [0:0] decoded_reg_strb_r5;
  wire [0:0] decoded_reg_strb_r6;
  wire [0:0] decoded_reg_strb_r7;
  wire [0:0] decoded_reg_strb_r8;
  wire [0:0] decoded_reg_strb_r9;
  wire decoded_req;
  wire decoded_req_is_wr;
  wire [7:0] decoded_wr_biten;
  wire [7:0] decoded_wr_data;
  wire field_combo_r10_f_load_next;
  wire field_combo_r1_f_load_next;
  wire [7:0] field_combo_r1_f_next;
  wire field_combo_r2_f_load_next;
  wire field_combo_r3_f_load_next;
  wire [7:0] field_combo_r3_f_next;
  wire field_combo_r4_f_load_next;
  wire field_combo_r5_f_load_next;
  wire field_combo_r9_f_load_next;
  wire [7:0] field_combo_r9_f_next;
  reg [7:0] field_storage_r10_f_value;
  reg [7:0] field_storage_r1_f_value;
  reg [7:0] field_storage_r2_f_value;
  reg [7:0] field_storage_r3_f_value;
  reg [7:0] field_storage_r4_f_value;
  reg [7:0] field_storage_r5_f_value;
  reg [7:0] field_storage_r9_f_value;
  reg is_active;
  wire [7:0] \readback_array[0] ;
  wire [7:0] \readback_array[1] ;
  wire [7:0] \readback_array[2] ;
  wire [7:0] \readback_array[3] ;
  wire [7:0] \readback_array[4] ;
  wire [7:0] \readback_array[5] ;
  wire [7:0] \readback_array[6] ;
  wire [7:0] \readback_array[7] ;
  wire [7:0] readback_data;
  wire readback_done;
  wire readback_err;
  wire readback_external_rd_ack;
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[0] <= 1'h0;
    else if (_017_) field_storage_r1_f_value[0] <= field_combo_r1_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[1] <= 1'h1;
    else if (_017_) field_storage_r1_f_value[1] <= field_combo_r1_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[2] <= 1'h0;
    else if (_017_) field_storage_r1_f_value[2] <= field_combo_r1_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[3] <= 1'h1;
    else if (_017_) field_storage_r1_f_value[3] <= field_combo_r1_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[4] <= 1'h0;
    else if (_017_) field_storage_r1_f_value[4] <= field_combo_r1_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[5] <= 1'h0;
    else if (_017_) field_storage_r1_f_value[5] <= field_combo_r1_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[6] <= 1'h0;
    else if (_017_) field_storage_r1_f_value[6] <= field_combo_r1_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r1_f_value[7] <= 1'h0;
    else if (_017_) field_storage_r1_f_value[7] <= field_combo_r1_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_r10_f_value[0] <= 1'h0;
    else if (field_combo_r10_f_load_next) field_storage_r10_f_value[0] <= _065_[0];
  always @(posedge clk)
    if (rst) field_storage_r10_f_value[1] <= 1'h0;
    else if (field_combo_r10_f_load_next) field_storage_r10_f_value[1] <= _065_[1];
  always @(posedge clk)
    if (rst) field_storage_r10_f_value[2] <= 1'h1;
    else if (field_combo_r10_f_load_next) field_storage_r10_f_value[2] <= _065_[2];
  always @(posedge clk)
    if (rst) field_storage_r10_f_value[3] <= 1'h0;
    else if (field_combo_r10_f_load_next) field_storage_r10_f_value[3] <= _065_[3];
  always @(posedge clk)
    if (rst) field_storage_r10_f_value[4] <= 1'h0;
    else if (field_combo_r10_f_load_next) field_storage_r10_f_value[4] <= _065_[4];
  always @(posedge clk)
    if (rst) field_storage_r10_f_value[5] <= 1'h1;
    else if (field_combo_r10_f_load_next) field_storage_r10_f_value[5] <= _065_[5];
  always @(posedge clk)
    if (rst) field_storage_r10_f_value[6] <= 1'h1;
    else if (field_combo_r10_f_load_next) field_storage_r10_f_value[6] <= _065_[6];
  always @(posedge clk)
    if (rst) field_storage_r10_f_value[7] <= 1'h0;
    else if (field_combo_r10_f_load_next) field_storage_r10_f_value[7] <= _065_[7];
  always @(posedge clk)
    if (rst) field_storage_r9_f_value[0] <= 1'h0;
    else if (_016_) field_storage_r9_f_value[0] <= field_combo_r9_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r9_f_value[1] <= 1'h1;
    else if (_016_) field_storage_r9_f_value[1] <= field_combo_r9_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r9_f_value[2] <= 1'h0;
    else if (_016_) field_storage_r9_f_value[2] <= field_combo_r9_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r9_f_value[3] <= 1'h1;
    else if (_016_) field_storage_r9_f_value[3] <= field_combo_r9_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r9_f_value[4] <= 1'h1;
    else if (_016_) field_storage_r9_f_value[4] <= field_combo_r9_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r9_f_value[5] <= 1'h0;
    else if (_016_) field_storage_r9_f_value[5] <= field_combo_r9_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r9_f_value[6] <= 1'h1;
    else if (_016_) field_storage_r9_f_value[6] <= field_combo_r9_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r9_f_value[7] <= 1'h0;
    else if (_016_) field_storage_r9_f_value[7] <= field_combo_r9_f_next[7];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[0] <= 1'h0;
    else if (hwif_in_r5_f_we) field_storage_r5_f_value[0] <= hwif_in_r5_f[0];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[1] <= 1'h1;
    else if (hwif_in_r5_f_we) field_storage_r5_f_value[1] <= hwif_in_r5_f[1];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[2] <= 1'h0;
    else if (hwif_in_r5_f_we) field_storage_r5_f_value[2] <= hwif_in_r5_f[2];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[3] <= 1'h0;
    else if (hwif_in_r5_f_we) field_storage_r5_f_value[3] <= hwif_in_r5_f[3];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[4] <= 1'h1;
    else if (hwif_in_r5_f_we) field_storage_r5_f_value[4] <= hwif_in_r5_f[4];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[5] <= 1'h1;
    else if (hwif_in_r5_f_we) field_storage_r5_f_value[5] <= hwif_in_r5_f[5];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[6] <= 1'h0;
    else if (hwif_in_r5_f_we) field_storage_r5_f_value[6] <= hwif_in_r5_f[6];
  always @(posedge clk)
    if (rst) field_storage_r5_f_value[7] <= 1'h0;
    else if (hwif_in_r5_f_we) field_storage_r5_f_value[7] <= hwif_in_r5_f[7];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[0] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[0] <= _063_[0];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[1] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[1] <= _063_[1];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[2] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[2] <= _063_[2];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[3] <= 1'h1;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[3] <= _063_[3];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[4] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[4] <= _063_[4];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[5] <= 1'h1;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[5] <= _063_[5];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[6] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[6] <= _063_[6];
  always @(posedge clk)
    if (rst) field_storage_r4_f_value[7] <= 1'h0;
    else if (field_combo_r4_f_load_next) field_storage_r4_f_value[7] <= _063_[7];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[0] <= 1'h0;
    else if (_015_) field_storage_r3_f_value[0] <= field_combo_r3_f_next[0];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[1] <= 1'h1;
    else if (_015_) field_storage_r3_f_value[1] <= field_combo_r3_f_next[1];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[2] <= 1'h1;
    else if (_015_) field_storage_r3_f_value[2] <= field_combo_r3_f_next[2];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[3] <= 1'h1;
    else if (_015_) field_storage_r3_f_value[3] <= field_combo_r3_f_next[3];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[4] <= 1'h1;
    else if (_015_) field_storage_r3_f_value[4] <= field_combo_r3_f_next[4];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[5] <= 1'h0;
    else if (_015_) field_storage_r3_f_value[5] <= field_combo_r3_f_next[5];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[6] <= 1'h0;
    else if (_015_) field_storage_r3_f_value[6] <= field_combo_r3_f_next[6];
  always @(posedge clk)
    if (rst) field_storage_r3_f_value[7] <= 1'h0;
    else if (_015_) field_storage_r3_f_value[7] <= field_combo_r3_f_next[7];
  always @(posedge clk)
    if (_018_) cpuif_req <= 1'h0;
    else if (s_apb_psel) cpuif_req <= 1'h1;
  always @(posedge clk)
    if (rst) cpuif_req_is_wr <= 1'h0;
    else if (_014_) cpuif_req_is_wr <= s_apb_pwrite;
  always @(posedge clk)
    if (rst) cpuif_addr[0] <= 1'h0;
    else if (_014_) cpuif_addr[0] <= s_apb_paddr[0];
  always @(posedge clk)
    if (rst) cpuif_addr[1] <= 1'h0;
    else if (_014_) cpuif_addr[1] <= s_apb_paddr[1];
  always @(posedge clk)
    if (rst) cpuif_addr[2] <= 1'h0;
    else if (_014_) cpuif_addr[2] <= s_apb_paddr[2];
  always @(posedge clk)
    if (rst) cpuif_addr[3] <= 1'h0;
    else if (_014_) cpuif_addr[3] <= s_apb_paddr[3];
  always @(posedge clk)
    if (rst) cpuif_wr_data[0] <= 1'h0;
    else if (_014_) cpuif_wr_data[0] <= s_apb_pwdata[0];
  always @(posedge clk)
    if (rst) cpuif_wr_data[1] <= 1'h0;
    else if (_014_) cpuif_wr_data[1] <= s_apb_pwdata[1];
  always @(posedge clk)
    if (rst) cpuif_wr_data[2] <= 1'h0;
    else if (_014_) cpuif_wr_data[2] <= s_apb_pwdata[2];
  always @(posedge clk)
    if (rst) cpuif_wr_data[3] <= 1'h0;
    else if (_014_) cpuif_wr_data[3] <= s_apb_pwdata[3];
  always @(posedge clk)
    if (rst) cpuif_wr_data[4] <= 1'h0;
    else if (_014_) cpuif_wr_data[4] <= s_apb_pwdata[4];
  always @(posedge clk)
    if (rst) cpuif_wr_data[5] <= 1'h0;
    else if (_014_) cpuif_wr_data[5] <= s_apb_pwdata[5];
  always @(posedge clk)
    if (rst) cpuif_wr_data[6] <= 1'h0;
    else if (_014_) cpuif_wr_data[6] <= s_apb_pwdata[6];
  always @(posedge clk)
    if (rst) cpuif_wr_data[7] <= 1'h0;
    else if (_014_) cpuif_wr_data[7] <= s_apb_pwdata[7];
  reg \cpuif_wr_biten_reg[5] ;
  always @(posedge clk)
    if (rst) \cpuif_wr_biten_reg[5]  <= 1'h0;
    else if (_014_) \cpuif_wr_biten_reg[5]  <= s_apb_pstrb;
  assign cpuif_wr_biten[5] = \cpuif_wr_biten_reg[5] ;
  always @(posedge clk)
    if (rst) is_active <= 1'h0;
    else is_active <= _073_;
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[0] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[0] <= _061_[0];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[1] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[1] <= _061_[1];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[2] <= 1'h1;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[2] <= _061_[2];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[3] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[3] <= _061_[3];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[4] <= 1'h1;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[4] <= _061_[4];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[5] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[5] <= _061_[5];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[6] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[6] <= _061_[6];
  always @(posedge clk)
    if (rst) field_storage_r2_f_value[7] <= 1'h0;
    else if (field_combo_r2_f_load_next) field_storage_r2_f_value[7] <= _061_[7];
  assign _022_ = ~cpuif_addr[0];
  assign _001_ = ~hwif_in_r3_f_wel;
  assign _020_ = ~cpuif_addr[2];
  assign _021_ = ~cpuif_addr[1];
  assign _023_ = ~cpuif_addr[3];
  assign _014_ = s_apb_psel & _019_;
  assign _017_ = field_combo_r1_f_load_next & _013_;
  assign _013_ = hwif_in_r1_f_we | _050_;
  assign _016_ = field_combo_r9_f_load_next & _012_;
  assign _012_ = hwif_in_r9_f_we | _051_;
  assign _015_ = field_combo_r3_f_load_next & _011_;
  assign _031_ = _024_[0] | _024_[1];
  assign _032_ = _025_[0] | _024_[1];
  assign _024_[1] = cpuif_addr[2] | cpuif_addr[3];
  assign _033_ = _026_[0] | _024_[1];
  assign _034_ = _027_[0] | _027_[1];
  assign _035_ = _024_[0] | _027_[1];
  assign _025_[0] = cpuif_addr[0] | _021_;
  assign _036_ = _025_[0] | _027_[1];
  assign _026_[0] = _022_ | _021_;
  assign _027_[1] = _020_ | cpuif_addr[3];
  assign _037_ = _026_[0] | _027_[1];
  assign _027_[0] = cpuif_addr[0] | cpuif_addr[1];
  assign _038_ = _027_[0] | _028_[1];
  assign _024_[0] = _022_ | cpuif_addr[1];
  assign _028_[1] = cpuif_addr[2] | _023_;
  assign _039_ = _024_[0] | _028_[1];
  assign _011_ = _001_ | _030_[1];
  assign _018_ = rst | is_active;
  assign _029_ = _027_[0] | _024_[1];
  assign _040_ = ~_029_;
  assign _041_ = ~_031_;
  assign _042_ = ~_032_;
  assign _043_ = ~_033_;
  assign _044_ = ~_034_;
  assign _045_ = ~_035_;
  assign _046_ = ~_036_;
  assign _047_ = ~_037_;
  assign _048_ = ~_038_;
  assign _049_ = ~_039_;
  assign _058_ = ~cpuif_req_is_wr;
  assign s_apb_pready = cpuif_rd_ack | cpuif_wr_ack;
  assign _050_ = decoded_reg_strb_r1 & cpuif_req_is_wr;
  assign field_combo_r2_f_load_next = decoded_reg_strb_r2 & cpuif_req_is_wr;
  assign _030_[1] = decoded_reg_strb_r3 & cpuif_req_is_wr;
  assign field_combo_r4_f_load_next = decoded_reg_strb_r4 & cpuif_req_is_wr;
  assign _051_ = decoded_reg_strb_r9 & cpuif_req_is_wr;
  assign field_combo_r10_f_load_next = decoded_reg_strb_r10 & cpuif_req_is_wr;
  assign _052_ = decoded_reg_strb_r1 & _058_;
  assign _053_ = decoded_reg_strb_r2 & _058_;
  assign _054_ = decoded_reg_strb_r3 & _058_;
  assign _055_ = decoded_reg_strb_r4 & _058_;
  assign _056_ = decoded_reg_strb_r5 & _058_;
  assign \readback_array[5] [5] = decoded_reg_strb_r6 & _058_;
  assign _057_ = decoded_reg_strb_r7 & _058_;
  assign \readback_array[7] [6] = decoded_reg_strb_r8 & _058_;
  assign field_combo_r1_f_next[2] = _050_ ? _060_[2] : _000_[2];
  assign field_combo_r1_f_next[3] = _050_ ? _060_[3] : _000_[3];
  assign field_combo_r1_f_next[4] = _050_ ? _060_[4] : _000_[4];
  assign field_combo_r1_f_next[5] = _050_ ? _060_[5] : _000_[5];
  assign field_combo_r1_f_next[6] = _050_ ? _060_[6] : _000_[6];
  assign field_combo_r1_f_next[7] = _050_ ? _060_[7] : _000_[7];
  assign _072_ = ~s_apb_pready;
  assign _073_ = is_active ? _072_ : s_apb_psel;
  assign \readback_array[0] [0] = _052_ ? field_storage_r1_f_value[0] : 1'h0;
  assign \readback_array[0] [1] = _052_ ? field_storage_r1_f_value[1] : 1'h0;
  assign \readback_array[0] [2] = _052_ ? field_storage_r1_f_value[2] : 1'h0;
  assign \readback_array[0] [3] = _052_ ? field_storage_r1_f_value[3] : 1'h0;
  assign \readback_array[0] [4] = _052_ ? field_storage_r1_f_value[4] : 1'h0;
  assign \readback_array[0] [5] = _052_ ? field_storage_r1_f_value[5] : 1'h0;
  assign \readback_array[0] [6] = _052_ ? field_storage_r1_f_value[6] : 1'h0;
  assign \readback_array[0] [7] = _052_ ? field_storage_r1_f_value[7] : 1'h0;
  assign \readback_array[1] [0] = _053_ ? field_storage_r2_f_value[0] : 1'h0;
  assign \readback_array[1] [1] = _053_ ? field_storage_r2_f_value[1] : 1'h0;
  assign \readback_array[1] [2] = _053_ ? field_storage_r2_f_value[2] : 1'h0;
  assign \readback_array[1] [3] = _053_ ? field_storage_r2_f_value[3] : 1'h0;
  assign \readback_array[1] [4] = _053_ ? field_storage_r2_f_value[4] : 1'h0;
  assign \readback_array[1] [5] = _053_ ? field_storage_r2_f_value[5] : 1'h0;
  assign \readback_array[1] [6] = _053_ ? field_storage_r2_f_value[6] : 1'h0;
  assign \readback_array[1] [7] = _053_ ? field_storage_r2_f_value[7] : 1'h0;
  assign \readback_array[2] [0] = _054_ ? field_storage_r3_f_value[0] : 1'h0;
  assign \readback_array[2] [1] = _054_ ? field_storage_r3_f_value[1] : 1'h0;
  assign \readback_array[2] [2] = _054_ ? field_storage_r3_f_value[2] : 1'h0;
  assign \readback_array[2] [3] = _054_ ? field_storage_r3_f_value[3] : 1'h0;
  assign \readback_array[2] [4] = _054_ ? field_storage_r3_f_value[4] : 1'h0;
  assign \readback_array[2] [5] = _054_ ? field_storage_r3_f_value[5] : 1'h0;
  assign \readback_array[2] [6] = _054_ ? field_storage_r3_f_value[6] : 1'h0;
  assign \readback_array[2] [7] = _054_ ? field_storage_r3_f_value[7] : 1'h0;
  assign \readback_array[3] [0] = _055_ ? field_storage_r4_f_value[0] : 1'h0;
  assign \readback_array[3] [1] = _055_ ? field_storage_r4_f_value[1] : 1'h0;
  assign \readback_array[3] [2] = _055_ ? field_storage_r4_f_value[2] : 1'h0;
  assign \readback_array[3] [3] = _055_ ? field_storage_r4_f_value[3] : 1'h0;
  assign \readback_array[3] [4] = _055_ ? field_storage_r4_f_value[4] : 1'h0;
  assign \readback_array[3] [5] = _055_ ? field_storage_r4_f_value[5] : 1'h0;
  assign \readback_array[3] [6] = _055_ ? field_storage_r4_f_value[6] : 1'h0;
  assign \readback_array[3] [7] = _055_ ? field_storage_r4_f_value[7] : 1'h0;
  assign \readback_array[4] [0] = _056_ ? field_storage_r5_f_value[0] : 1'h0;
  assign \readback_array[4] [1] = _056_ ? field_storage_r5_f_value[1] : 1'h0;
  assign \readback_array[4] [2] = _056_ ? field_storage_r5_f_value[2] : 1'h0;
  assign \readback_array[4] [3] = _056_ ? field_storage_r5_f_value[3] : 1'h0;
  assign \readback_array[4] [4] = _056_ ? field_storage_r5_f_value[4] : 1'h0;
  assign \readback_array[4] [5] = _056_ ? field_storage_r5_f_value[5] : 1'h0;
  assign \readback_array[4] [6] = _056_ ? field_storage_r5_f_value[6] : 1'h0;
  assign \readback_array[4] [7] = _056_ ? field_storage_r5_f_value[7] : 1'h0;
  assign \readback_array[6] [0] = _057_ ? hwif_in_r7_f[0] : 1'h0;
  assign \readback_array[6] [1] = _057_ ? hwif_in_r7_f[1] : 1'h0;
  assign \readback_array[6] [2] = _057_ ? hwif_in_r7_f[2] : 1'h0;
  assign \readback_array[6] [3] = _057_ ? hwif_in_r7_f[3] : 1'h0;
  assign \readback_array[6] [4] = _057_ ? hwif_in_r7_f[4] : 1'h0;
  assign \readback_array[6] [5] = _057_ ? hwif_in_r7_f[5] : 1'h0;
  assign \readback_array[6] [6] = _057_ ? hwif_in_r7_f[6] : 1'h0;
  assign \readback_array[6] [7] = _057_ ? hwif_in_r7_f[7] : 1'h0;
  assign _003_[0] = hwif_in_r9_f_we ? hwif_in_r9_f[0] : 1'hx;
  assign _003_[1] = hwif_in_r9_f_we ? hwif_in_r9_f[1] : 1'hx;
  assign _003_[2] = hwif_in_r9_f_we ? hwif_in_r9_f[2] : 1'hx;
  assign _003_[3] = hwif_in_r9_f_we ? hwif_in_r9_f[3] : 1'hx;
  assign _003_[4] = hwif_in_r9_f_we ? hwif_in_r9_f[4] : 1'hx;
  assign _003_[5] = hwif_in_r9_f_we ? hwif_in_r9_f[5] : 1'hx;
  assign _003_[6] = hwif_in_r9_f_we ? hwif_in_r9_f[6] : 1'hx;
  assign _003_[7] = hwif_in_r9_f_we ? hwif_in_r9_f[7] : 1'hx;
  assign field_combo_r9_f_load_next = _051_ ? 1'h1 : hwif_in_r9_f_we;
  assign field_combo_r9_f_next[0] = _051_ ? _064_[0] : _003_[0];
  assign field_combo_r9_f_next[1] = _051_ ? _064_[1] : _003_[1];
  assign field_combo_r9_f_next[2] = _051_ ? _064_[2] : _003_[2];
  assign field_combo_r9_f_next[3] = _051_ ? _064_[3] : _003_[3];
  assign field_combo_r9_f_next[4] = _051_ ? _064_[4] : _003_[4];
  assign field_combo_r9_f_next[5] = _051_ ? _064_[5] : _003_[5];
  assign field_combo_r9_f_next[6] = _051_ ? _064_[6] : _003_[6];
  assign field_combo_r9_f_next[7] = _051_ ? _064_[7] : _003_[7];
  assign _002_[0] = hwif_in_r3_f_wel ? 1'hx : hwif_in_r3_f[0];
  assign _002_[1] = hwif_in_r3_f_wel ? 1'hx : hwif_in_r3_f[1];
  assign _002_[2] = hwif_in_r3_f_wel ? 1'hx : hwif_in_r3_f[2];
  assign _002_[3] = hwif_in_r3_f_wel ? 1'hx : hwif_in_r3_f[3];
  assign _002_[4] = hwif_in_r3_f_wel ? 1'hx : hwif_in_r3_f[4];
  assign _002_[5] = hwif_in_r3_f_wel ? 1'hx : hwif_in_r3_f[5];
  assign _002_[6] = hwif_in_r3_f_wel ? 1'hx : hwif_in_r3_f[6];
  assign _002_[7] = hwif_in_r3_f_wel ? 1'hx : hwif_in_r3_f[7];
  assign field_combo_r3_f_load_next = _030_[1] ? 1'h1 : _001_;
  assign field_combo_r3_f_next[0] = _030_[1] ? _062_[0] : _002_[0];
  assign field_combo_r3_f_next[1] = _030_[1] ? _062_[1] : _002_[1];
  assign field_combo_r3_f_next[2] = _030_[1] ? _062_[2] : _002_[2];
  assign field_combo_r3_f_next[3] = _030_[1] ? _062_[3] : _002_[3];
  assign field_combo_r3_f_next[4] = _030_[1] ? _062_[4] : _002_[4];
  assign field_combo_r3_f_next[5] = _030_[1] ? _062_[5] : _002_[5];
  assign field_combo_r3_f_next[6] = _030_[1] ? _062_[6] : _002_[6];
  assign field_combo_r3_f_next[7] = _030_[1] ? _062_[7] : _002_[7];
  assign _000_[0] = hwif_in_r1_f_we ? hwif_in_r1_f[0] : 1'hx;
  assign _000_[1] = hwif_in_r1_f_we ? hwif_in_r1_f[1] : 1'hx;
  assign _000_[2] = hwif_in_r1_f_we ? hwif_in_r1_f[2] : 1'hx;
  assign _000_[3] = hwif_in_r1_f_we ? hwif_in_r1_f[3] : 1'hx;
  assign _000_[4] = hwif_in_r1_f_we ? hwif_in_r1_f[4] : 1'hx;
  assign _000_[5] = hwif_in_r1_f_we ? hwif_in_r1_f[5] : 1'hx;
  assign _000_[6] = hwif_in_r1_f_we ? hwif_in_r1_f[6] : 1'hx;
  assign _000_[7] = hwif_in_r1_f_we ? hwif_in_r1_f[7] : 1'hx;
  assign field_combo_r1_f_load_next = _050_ ? 1'h1 : hwif_in_r1_f_we;
  assign field_combo_r1_f_next[0] = _050_ ? _060_[0] : _000_[0];
  assign field_combo_r1_f_next[1] = _050_ ? _060_[1] : _000_[1];
  assign _059_[7] = ~cpuif_wr_biten[5];
  assign _019_ = ~is_active;
  assign decoded_reg_strb_r1 = cpuif_req & _040_;
  assign decoded_reg_strb_r2 = cpuif_req & _041_;
  assign decoded_reg_strb_r3 = cpuif_req & _042_;
  assign decoded_reg_strb_r4 = cpuif_req & _043_;
  assign decoded_reg_strb_r5 = cpuif_req & _044_;
  assign decoded_reg_strb_r6 = cpuif_req & _045_;
  assign decoded_reg_strb_r7 = cpuif_req & _046_;
  assign decoded_reg_strb_r8 = cpuif_req & _047_;
  assign decoded_reg_strb_r9 = cpuif_req & _048_;
  assign decoded_reg_strb_r10 = cpuif_req & _049_;
  assign _004_[0] = field_storage_r1_f_value[0] & _059_[7];
  assign _004_[1] = field_storage_r1_f_value[1] & _059_[7];
  assign _004_[2] = field_storage_r1_f_value[2] & _059_[7];
  assign _004_[3] = field_storage_r1_f_value[3] & _059_[7];
  assign _004_[4] = field_storage_r1_f_value[4] & _059_[7];
  assign _004_[5] = field_storage_r1_f_value[5] & _059_[7];
  assign _004_[6] = field_storage_r1_f_value[6] & _059_[7];
  assign _004_[7] = field_storage_r1_f_value[7] & _059_[7];
  assign _060_[0] = _004_[0] | _005_[0];
  assign _060_[1] = _004_[1] | _005_[1];
  assign _060_[2] = _004_[2] | _005_[2];
  assign _060_[3] = _004_[3] | _005_[3];
  assign _060_[4] = _004_[4] | _005_[4];
  assign _060_[5] = _004_[5] | _005_[5];
  assign _060_[6] = _004_[6] | _005_[6];
  assign _060_[7] = _004_[7] | _005_[7];
  assign _006_[0] = field_storage_r2_f_value[0] & _059_[7];
  assign _006_[1] = field_storage_r2_f_value[1] & _059_[7];
  assign _006_[2] = field_storage_r2_f_value[2] & _059_[7];
  assign _006_[3] = field_storage_r2_f_value[3] & _059_[7];
  assign _006_[4] = field_storage_r2_f_value[4] & _059_[7];
  assign _006_[5] = field_storage_r2_f_value[5] & _059_[7];
  assign _006_[6] = field_storage_r2_f_value[6] & _059_[7];
  assign _006_[7] = field_storage_r2_f_value[7] & _059_[7];
  assign _061_[0] = _006_[0] | _005_[0];
  assign _061_[1] = _006_[1] | _005_[1];
  assign _061_[2] = _006_[2] | _005_[2];
  assign _061_[3] = _006_[3] | _005_[3];
  assign _061_[4] = _006_[4] | _005_[4];
  assign _061_[5] = _006_[5] | _005_[5];
  assign _061_[6] = _006_[6] | _005_[6];
  assign _061_[7] = _006_[7] | _005_[7];
  assign _007_[0] = field_storage_r3_f_value[0] & _059_[7];
  assign _007_[1] = field_storage_r3_f_value[1] & _059_[7];
  assign _007_[2] = field_storage_r3_f_value[2] & _059_[7];
  assign _007_[3] = field_storage_r3_f_value[3] & _059_[7];
  assign _007_[4] = field_storage_r3_f_value[4] & _059_[7];
  assign _007_[5] = field_storage_r3_f_value[5] & _059_[7];
  assign _007_[6] = field_storage_r3_f_value[6] & _059_[7];
  assign _007_[7] = field_storage_r3_f_value[7] & _059_[7];
  assign _062_[0] = _007_[0] | _005_[0];
  assign _062_[1] = _007_[1] | _005_[1];
  assign _062_[2] = _007_[2] | _005_[2];
  assign _062_[3] = _007_[3] | _005_[3];
  assign _062_[4] = _007_[4] | _005_[4];
  assign _062_[5] = _007_[5] | _005_[5];
  assign _062_[6] = _007_[6] | _005_[6];
  assign _062_[7] = _007_[7] | _005_[7];
  assign _008_[0] = field_storage_r4_f_value[0] & _059_[7];
  assign _008_[1] = field_storage_r4_f_value[1] & _059_[7];
  assign _008_[2] = field_storage_r4_f_value[2] & _059_[7];
  assign _008_[3] = field_storage_r4_f_value[3] & _059_[7];
  assign _008_[4] = field_storage_r4_f_value[4] & _059_[7];
  assign _008_[5] = field_storage_r4_f_value[5] & _059_[7];
  assign _008_[6] = field_storage_r4_f_value[6] & _059_[7];
  assign _008_[7] = field_storage_r4_f_value[7] & _059_[7];
  assign _063_[0] = _008_[0] | _005_[0];
  assign _063_[1] = _008_[1] | _005_[1];
  assign _063_[2] = _008_[2] | _005_[2];
  assign _063_[3] = _008_[3] | _005_[3];
  assign _063_[4] = _008_[4] | _005_[4];
  assign _063_[5] = _008_[5] | _005_[5];
  assign _063_[6] = _008_[6] | _005_[6];
  assign _063_[7] = _008_[7] | _005_[7];
  assign _009_[0] = field_storage_r9_f_value[0] & _059_[7];
  assign _009_[1] = field_storage_r9_f_value[1] & _059_[7];
  assign _009_[2] = field_storage_r9_f_value[2] & _059_[7];
  assign _009_[3] = field_storage_r9_f_value[3] & _059_[7];
  assign _009_[4] = field_storage_r9_f_value[4] & _059_[7];
  assign _009_[5] = field_storage_r9_f_value[5] & _059_[7];
  assign _009_[6] = field_storage_r9_f_value[6] & _059_[7];
  assign _009_[7] = field_storage_r9_f_value[7] & _059_[7];
  assign _064_[0] = _009_[0] | _005_[0];
  assign _064_[1] = _009_[1] | _005_[1];
  assign _064_[2] = _009_[2] | _005_[2];
  assign _064_[3] = _009_[3] | _005_[3];
  assign _064_[4] = _009_[4] | _005_[4];
  assign _064_[5] = _009_[5] | _005_[5];
  assign _064_[6] = _009_[6] | _005_[6];
  assign _064_[7] = _009_[7] | _005_[7];
  assign _010_[0] = field_storage_r10_f_value[0] & _059_[7];
  assign _010_[1] = field_storage_r10_f_value[1] & _059_[7];
  assign _010_[2] = field_storage_r10_f_value[2] & _059_[7];
  assign _010_[3] = field_storage_r10_f_value[3] & _059_[7];
  assign _010_[4] = field_storage_r10_f_value[4] & _059_[7];
  assign _010_[5] = field_storage_r10_f_value[5] & _059_[7];
  assign _010_[6] = field_storage_r10_f_value[6] & _059_[7];
  assign _010_[7] = field_storage_r10_f_value[7] & _059_[7];
  assign _005_[0] = cpuif_wr_data[0] & cpuif_wr_biten[5];
  assign _005_[1] = cpuif_wr_data[1] & cpuif_wr_biten[5];
  assign _005_[2] = cpuif_wr_data[2] & cpuif_wr_biten[5];
  assign _005_[3] = cpuif_wr_data[3] & cpuif_wr_biten[5];
  assign _005_[4] = cpuif_wr_data[4] & cpuif_wr_biten[5];
  assign _005_[5] = cpuif_wr_data[5] & cpuif_wr_biten[5];
  assign _005_[6] = cpuif_wr_data[6] & cpuif_wr_biten[5];
  assign _005_[7] = cpuif_wr_data[7] & cpuif_wr_biten[5];
  assign _065_[0] = _010_[0] | _005_[0];
  assign _065_[1] = _010_[1] | _005_[1];
  assign _065_[2] = _010_[2] | _005_[2];
  assign _065_[3] = _010_[3] | _005_[3];
  assign _065_[4] = _010_[4] | _005_[4];
  assign _065_[5] = _010_[5] | _005_[5];
  assign _065_[6] = _010_[6] | _005_[6];
  assign _065_[7] = _010_[7] | _005_[7];
  assign cpuif_wr_ack = cpuif_req & cpuif_req_is_wr;
  assign cpuif_rd_ack = cpuif_req & _058_;
  assign _066_[0] = \readback_array[0] [0] | \readback_array[1] [0];
  assign _066_[1] = \readback_array[0] [1] | \readback_array[1] [1];
  assign _066_[2] = \readback_array[0] [2] | \readback_array[1] [2];
  assign _066_[3] = \readback_array[0] [3] | \readback_array[1] [3];
  assign _066_[4] = \readback_array[0] [4] | \readback_array[1] [4];
  assign _066_[5] = \readback_array[0] [5] | \readback_array[1] [5];
  assign _066_[6] = \readback_array[0] [6] | \readback_array[1] [6];
  assign _066_[7] = \readback_array[0] [7] | \readback_array[1] [7];
  assign _067_[0] = _066_[0] | \readback_array[2] [0];
  assign _067_[1] = _066_[1] | \readback_array[2] [1];
  assign _067_[2] = _066_[2] | \readback_array[2] [2];
  assign _067_[3] = _066_[3] | \readback_array[2] [3];
  assign _067_[4] = _066_[4] | \readback_array[2] [4];
  assign _067_[5] = _066_[5] | \readback_array[2] [5];
  assign _067_[6] = _066_[6] | \readback_array[2] [6];
  assign _067_[7] = _066_[7] | \readback_array[2] [7];
  assign _068_[0] = _067_[0] | \readback_array[3] [0];
  assign _068_[1] = _067_[1] | \readback_array[3] [1];
  assign _068_[2] = _067_[2] | \readback_array[3] [2];
  assign _068_[3] = _067_[3] | \readback_array[3] [3];
  assign _068_[4] = _067_[4] | \readback_array[3] [4];
  assign _068_[5] = _067_[5] | \readback_array[3] [5];
  assign _068_[6] = _067_[6] | \readback_array[3] [6];
  assign _068_[7] = _067_[7] | \readback_array[3] [7];
  assign _069_[0] = _068_[0] | \readback_array[4] [0];
  assign _069_[1] = _068_[1] | \readback_array[4] [1];
  assign _069_[2] = _068_[2] | \readback_array[4] [2];
  assign _069_[3] = _068_[3] | \readback_array[4] [3];
  assign _069_[4] = _068_[4] | \readback_array[4] [4];
  assign _069_[5] = _068_[5] | \readback_array[4] [5];
  assign _069_[6] = _068_[6] | \readback_array[4] [6];
  assign _069_[7] = _068_[7] | \readback_array[4] [7];
  assign _070_[2] = _069_[2] | \readback_array[5] [5];
  assign _070_[3] = _069_[3] | \readback_array[5] [5];
  assign _070_[4] = _069_[4] | \readback_array[5] [5];
  assign _070_[5] = _069_[5] | \readback_array[5] [5];
  assign s_apb_prdata[0] = _069_[0] | \readback_array[6] [0];
  assign s_apb_prdata[1] = _069_[1] | \readback_array[6] [1];
  assign s_apb_prdata[2] = _070_[2] | \readback_array[6] [2];
  assign s_apb_prdata[3] = _070_[3] | \readback_array[6] [3];
  assign _071_[4] = _070_[4] | \readback_array[6] [4];
  assign s_apb_prdata[5] = _070_[5] | \readback_array[6] [5];
  assign _071_[6] = _069_[6] | \readback_array[6] [6];
  assign s_apb_prdata[7] = _069_[7] | \readback_array[6] [7];
  assign s_apb_prdata[4] = _071_[4] | \readback_array[7] [6];
  assign s_apb_prdata[6] = _071_[6] | \readback_array[7] [6];
  assign _025_[1] = _024_[1];
  assign _026_[1] = _024_[1];
  assign _028_[0] = _027_[0];
  assign _030_[0] = _001_;
  assign _059_[6:0] = { _059_[7], _059_[7], _059_[7], _059_[7], _059_[7], _059_[7], _059_[7] };
  assign { _070_[7:6], _070_[1:0] } = { _069_[7:6], _069_[1:0] };
  assign { _071_[7], _071_[5], _071_[3:0] } = { s_apb_prdata[7], s_apb_prdata[5], s_apb_prdata[3:0] };
  assign cpuif_rd_data = s_apb_prdata;
  assign cpuif_rd_err = 1'h0;
  assign cpuif_req_masked = cpuif_req;
  assign cpuif_req_stall_rd = 1'h0;
  assign cpuif_req_stall_wr = 1'h0;
  assign { cpuif_wr_biten[7:6], cpuif_wr_biten[4:0] } = { cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5] };
  assign cpuif_wr_err = 1'h0;
  assign decoded_req = cpuif_req;
  assign decoded_req_is_wr = cpuif_req_is_wr;
  assign decoded_wr_biten = { cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5], cpuif_wr_biten[5] };
  assign decoded_wr_data = cpuif_wr_data;
  assign field_combo_r5_f_load_next = hwif_in_r5_f_we;
  assign hwif_out_r10_f = field_storage_r10_f_value;
  assign hwif_out_r1_f = field_storage_r1_f_value;
  assign hwif_out_r2_f = field_storage_r2_f_value;
  assign hwif_out_r5_f = field_storage_r5_f_value;
  assign hwif_out_r6_f = 8'h3c;
  assign hwif_out_r9_f = field_storage_r9_f_value;
  assign { \readback_array[5] [7:6], \readback_array[5] [4:0] } = { 2'h0, \readback_array[5] [5], \readback_array[5] [5], \readback_array[5] [5], 2'h0 };
  assign { \readback_array[7] [7], \readback_array[7] [5:0] } = { 2'h0, \readback_array[7] [6], 4'h0 };
  assign readback_data = s_apb_prdata;
  assign readback_done = cpuif_rd_ack;
  assign readback_err = 1'h0;
  assign readback_external_rd_ack = 1'h0;
  assign s_apb_pslverr = 1'h0;
endmodule
