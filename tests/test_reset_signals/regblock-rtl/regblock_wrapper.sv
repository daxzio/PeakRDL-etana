// Generated by PeakRDL-etana HWIF Wrapper Tool
//  https://github.com/daxzio/PeakRDL-etana
//
// This is a wrapper module that flattens the hwif structs into individual signals

module regblock_wrapper (
        input wire clk,
        input wire rst,
        input wire root_cpuif_reset,
        input wire [15:0] r5f2_resetvalue,
        input wire s_apb_psel,
        input wire s_apb_penable,
        input wire s_apb_pwrite,
        input wire [2:0] s_apb_pprot,
        input wire [4:0] s_apb_paddr,
        input wire [31:0] s_apb_pwdata,
        input wire [3:0] s_apb_pstrb,
        output logic s_apb_pready,
        output logic [31:0] s_apb_prdata,
        output logic s_apb_pslverr,
        input logic hwif_in_f2_reset,
        input logic hwif_in_r2_my_reset,
        input logic hwif_in_r3_my_areset,
        input logic hwif_in_r4_my_reset_n,
        input logic hwif_in_r5_my_areset_n
    );

    //--------------------------------------------------------------------------
    // Internal hwif struct signals
    //--------------------------------------------------------------------------
    regblock_pkg::regblock__in_t hwif_in;

    //--------------------------------------------------------------------------
    // Flatten struct to individual signals
    //--------------------------------------------------------------------------
    assign hwif_in.f2_reset = hwif_in_f2_reset;
    assign hwif_in.r2.my_reset = hwif_in_r2_my_reset;
    assign hwif_in.r3.my_areset = hwif_in_r3_my_areset;
    assign hwif_in.r4.my_reset_n = hwif_in_r4_my_reset_n;
    assign hwif_in.r5.my_areset_n = hwif_in_r5_my_areset_n;

    //--------------------------------------------------------------------------
    // Instantiate the main regblock module
    //--------------------------------------------------------------------------
    regblock i_regblock (
        .clk(clk),
        .rst(rst),
        .root_cpuif_reset(root_cpuif_reset),
        .r5f2_resetvalue(r5f2_resetvalue),
        .s_apb_psel(s_apb_psel),
        .s_apb_penable(s_apb_penable),
        .s_apb_pwrite(s_apb_pwrite),
        .s_apb_pprot(s_apb_pprot),
        .s_apb_paddr(s_apb_paddr),
        .s_apb_pwdata(s_apb_pwdata),
        .s_apb_pstrb(s_apb_pstrb),
        .s_apb_pready(s_apb_pready),
        .s_apb_prdata(s_apb_prdata),
        .s_apb_pslverr(s_apb_pslverr),
        .hwif_in(hwif_in)
    );

endmodule
